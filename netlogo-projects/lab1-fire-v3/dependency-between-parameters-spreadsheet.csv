"BehaviorSpace results (NetLogo 6.2.0)"
"Fire Simple Extension 2.nlogo"
"dependency-between-parameters"
"10/13/2021 12:11:09:673 +0300"
"min-pxcor","max-pxcor","min-pycor","max-pycor"
"-125","125","-125","125"
"[run number
"density
"probability-of-felling
"count-of-felling-points
"probability-of-spread","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75","75"
"west-wind-speed
"width-of-felling","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5","5"
"south-wind-speed","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-20","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","-10","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","10","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20","20"
"felling-strategy","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square","Default","Default","Default","Default","Default","Default","Default","Default","Default","Default","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","X-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","Y-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","XY-lines","Square","Square","Square","Square","Square","Square","Square","Square","Square","Square"
"[steps]","4","3","4","4","5","6","4","3","4","4","4","6","3","4","4","4","4","5","4","5","4","4","5","4","6","3","4","3","3","3","3","3","3","4","4","3","4","9","3","7","3","5","3","4","4","4","4","4","6","4","4","4","4","6","4","4","3","4","4","3","3","4","3","4","3","5","3","6","4","4","3","4","6","4","3","4","3","2","4","5","5","2","4","4","3","4","2","4","4","4","5","4","4","5","4","7","4","5","4","3","4","3","4","5","4","4","4","4","3","3","5","3","4","3","6","3","4","3","4","5","3","4","3","5","4","3","4","6","5","3","5","3","4","3","3","3","3","4","5","3","5","4","4","4","4","7","5","4","4","5","4","4","4","4","3","5","4","4","4","3","4","4","3","6","3","3","5","5","6","4","5","4","4","6","5","3","4","4","3","3","4","3","5","3","5","3","3","6","3","4","4","3","5","4","4","4","5","4","6","3","4","4","4","5","5","4","5","6","4","4","3","4","4","3","5","3","3","3","3","2","4","5","3","4","6","4","4","3","4","3","3","5","3","4","4","3","6","3","4","3","5","4","4","5","3","3","3","4","5","4","4","5","5","6","3","4","4","5","6","4","3","3","4","3","5","4","4","4","4","3","4","4","4","5","3","5","4","4","4","9","4","4","4","5","5","4","3","7","4","3","4","4","3","5","3","3","7","5","4","10","4","4","3","4","3","7","3","4","4","4","4","4","3","4","5","3","6","4","3","5","4","3","4","4","2","3","5","4","3","4","3","3","4","4","5","5","3","4","5","5","4","4","4","4","4","7","5","4","4","4","6","3","3","3","3","3","6","5","6","5","3","4","3","3","5","3","3","4","4","5","4","3","4","2","6","4","5","5","3","3","4","3","2","3","3","3","4","4","5","3","4","5","5","4","4","4","7","4","5","3","6","5","4","6","4","6","6","4","4","4","3","4","4","4","4","6","5","4","6","4","3","5","5","3","4","5","4","6","5","4","5","4","3","4","4","3","5","3","3","3","8","3","6","5","4","6","4","5","4","5","6","5","4","5","4","5","5","3","4","5","5","4","5","5","4","4","4","3","6","5","5","4","3","5","5","4","8","4","4","4","3","5","4","3","3","4","4","7","5","4","5","5","7","5","4","4","5","4","4","5","5","6","4","4","6","4","3","4","4","6","5","4","4","8","5","6","4","5","4","3","6","5","3","5","6","4","4","5","6","5","2","3","4","4","4","4","3","5","4","5","4","6","4","4","6","4","5","5","5","6","5","3","4","3","5","5","5","5","3","6","4","5","5","4","4","4","4","5","4","5","5","7","5","4","5","4","8","5","3","3","3","5","4","4","6","5","5","6","4","4","4","4","4","4","5","5","5","5","7","7","5","9","5","4","4","5","7","4","4","5","6","7","7","5","4","4","9","5","4","5","4","3","4","5","4","3","5","4","6","4","3","3","3","6","7","5","3","4","8","4","7","4","4","4","6","5","6","7","3","5","4","5","4","3","3","7","4","5","5","5","6","4","3","5","4","5","4","5","4","3","5","5","4","5","4","4","4","5","4","4","4","4","2","4","6","4","4","4","5","3","4","6","6","5","5","5","6","5","6","4","6","7","4","8","4","4","5","5","4","5","6","6","5","5","4","3","6","4","4","5","4","4","6","6","3","5","7","7","3","5","5","4","4","2","6","4","4","5","5","4","5","7","4","5","4","5","4","4","5","4","4","6","5","7","8","5","4","5","3","5","3","4","3","6","5","4","4","3","4","4","4","6","4","5","4","4","4","5","5","5","4","4","4","4","5","5","3","4","4","3","4","4","5","7","6","5","4","6","7","6","4","5","6","4","5","7","4","4","6","5","4","4","6","4","6","5","4","6","4","5","5","4","3","6","5","5","4","5","3","5","4","6","4","7","4","5","4","4","5","5","6","4","6","5","6","4","5","4","9","3","5","5","5","4","5","5","6","5","7","5","4","3","5","3","3","4","3","9","5","6","4","5","5","5","3","3","3","4","4","6","4","4","5","4","4","5","5","6","4","6","5","4","5","5","6","5","4","5","5","6","6","4","3","3","5","5","5","7","5","4","6","4","4","4","4","4","4","4","5","5","4","7","5","4","4","4","3","5","7","5","3","4","3","5","6","4","4","3","5","6","6","6","4","4","6","5","4","4","6","6","5","5","5","7","3","4","4","4","4","4","8","4","5","3","6","4","3","4","8","5","5","6","5","5","7","6","3","4","4","4","7","3","6","3","5","6","3","3","6","4","4","5","5","5","6","3","4","3","3","4","5","3","5","4","5","7","5","6","7","5","3","5","5","5","8","4","6","4","5","9","7","4","3","5","4","7","4","7","6","5","4","3","3","4","4","4","3","5","4","6","6","5","4","4","5","6","4","5","5","6","8","4","5","5","4","5","5","4","4","5","4","6","5","5","7","4","3","4","5","5","5","5","4","4","4","4","3","5","5","13","4","3","5","4","3","4","3","4","4","7","5","4","5","5","4","5","4","7","5","5","4","7","7","3","4","4","4","3","4","5","9","4","5","5","5","5","6","4","5","5","4","3","5","6","6","4","6","4","4","4","3","5","5","8","5","2","7","5","3","7","5","6","4","5","5","4","4","6","7","5","7","3","7","8","8","6","5","4","3","5","6","6","6","4","3","7","4","5","5","5","9","3","7","5","6","4","4","4","4","3","4","5","7","4","3","6","3","6","2","4","5","6","4","6","7","5","4","4","5","6","6","4","5","5","6","5","6","5","6","5","6","4","6","5","4","5","5","5","5","4","3","5","5","7","5","4","4","4","6","10","5","3","3","2","5","3","4","4","4","3","6","6","4","3","6","4","4","5","5","5","4","5","4","8","10","10","6","7","6","8","4","4","5","6","7","5","7","4","5","8","6","5","8","7","5","3","6","7","6","4","4","5","4","5","4","6","4","6","6","5","4","7","5","8","6","5","8","7","6","6","5","7","4","6","9","6","6","5","4","6","5","4","10","9","6","6","6","5","8","8","4","9","7","4","4","3","6","6","4","5","8","7","10","5","5","5","3","3","5","5","5","4","7","10","5","7","7","6","5","6","4","8","5","6","8","5","5","5","6","5","4","6","5","4","4","4","5","6","5","6","5","5","6","7","6","4","6","5","5","7","7","6","4","9","7","7","5","6","6","6","3","6","10","5","6","7","6","6","5","6","4","5","8","4","5","5","4","6","7","4","6","4","4","4","8","4","4","5","4","8","4","4","8","5","5","6","6","6","8","4","4","5","5","4","7","6","5","13","8","5","6","5","5","5","6","5","6","6","4","7","4","6","5","7","7","6","8","5","6","4","7","4","5","4","5","6","5","4","4","6","4","5","4","7","6","7","8","3","7","7","5","4","8","4","3","5","7","4","3","5","5","4","4","6","7","5","5","6","7","5","6","5","10","5","7","7","6","7","6","8","7","5","5","5","6","5","3","4","4","3","7","6","3","5","6","8","8","9","7","7","3","5","4","5","6","7","3","4","6","5","9","5","5","5","6","8","7","5","6","5","6","5","7","6","6","7","6","6","8","4","6","5","8","5","7","7","5","6","7","7","5","6","6","7","3","6","7","5","7","5","10","4","7","9","7","5","6","4","4","3","5","7","6","9","6","8","7","7","6","6","9","10","8","10","6","7","9","4","8","5","6","5","4","5","6","4","6","7","5","5","5","6","3","8","6","8","3","8","8","8","7","6","8","6","7","9","7","4","7","4","6","5","13","5","7","7","5","4","6","8","10","5","7","7","4","5","8","9","5","5","5","5","7","6","5","8","11","7","5","7","10","7","4","7","3","9","8","5","7","5","5","6","3","6","4","3","5","6","6","6","5","8","8","8","6","9","8","5","5","5","5","6","5","6","8","6","6","8","8","6","8","6","3","4","4","8","6","5","6","6","7","5","5","8","5","6","8","5","6","4","8","5","5","5","5","5","8","5","6","5","7","4","7","5","6","7","8","6","6","6","12","7","11","7","9","7","10","12","6","7","9","12","6","5","7","8","8","5","7","8","3","8","9","8","11","3","6","9","7","6","4","5","6","10","11","3","6","3","6","9","6","8","5","12","9","8","8","5","6","10","7","8","6","9","13","6","7","6","6","6","7","8","5","5","8","6","5","7","9","6","4","7","3","5","5","6","6","8","9","5","9","8","4","8","5","7","5","5","4","5","8","10","11","8","7","5","6","7","5","8","8","6","13","8","7","9","5","4","4","5","6","7","5","10","6","4","6","6","6","11","11","9","3","6","10","6","3","9","5","7","5","5","5","11","6","4","7","7","7","4","9","6","5","7","7","5","6","6","7","9","5","7","5","8","9","6","6","8","5","7","5","7","9","5","6","5","11","5","6","5","13","7","8","7","5","8","6","8","8","6","6","7","5","7","3","3","4","7","4","7","5","9","6","6","6","7","8","8","7","6","13","6","6","7","7","10","7","5","8","6","7","6","10","9","6","5","5","6","4","7","5","6","4","7","9","5","6","4","6","9","5","10","6","5","6","4","10","5","4","3","7","8","6","8","8","9","8","5","5","6","9","5","7","6","10","10","7","6","8","7","7","8","7","7","3","10","11","7","5","5","7","17","7","11","5","6","7","6","5","6","7","7","8","6","6","9","7","8","6","5","15","7","7","8","5","7","6","6","8","7","12","8","8","7","6","6","8","7","5","11","8","6","5","6","6","7","7","5","7","5","6","5","6","6","8","5","8","8","5","5","6","5","5","6","5","5","5","4","4","10","8","5","5","7","6","10","8","5","6","7","8","6","9","8","6","7","6","7","9","12","7","9","9","7","5","5","8","6","5","6","8","12","6","6","7","7","8","4","6","9","7","6","10","6","5","8","3","6","6","7","7","8","5","7","9","11","7","6","4","9","5","8","7","9","7","9","10","8","6","6","8","5","6","7","11","6","5","10","7","7","10","5","8","6","6","10","6","11","9","5","5","6","7","8","6","5","3","6","6","5","10","7","5","5","6","9","6","9","7","5","9","6","6","5","6","7","9","5","7","5","5","6","7","6","6","5","13","8","8","8","6","6","7","7","6","5","5","3","9","7","4","8","9","4","7","5","6","7","8","7","8","7","9","7","8","10","10","5","7","6","7","6","5","7","7","7","8","10","10","6","5","7","6","4","11","7","6","12","8","7","8","10","6","10","5","6","7","6","3","6","6","7","9","8","8","7","4","6","8","9","6","8","12","7","6","8","8","10","9","9","10","8","8","9","7","6","7","6","7","8","8","11","7","4","5","5","6","7","5","8","10","6","8","6","3","8","4","8","10","5","4","12","7","8","9","5","4","4","8","8","10","8","7","5","7","6","5","13","10","5","7","7","8","8","7","7","8","7","7","7","6","10","5","6","6","6","7","6","7","6","4","9","6","8","4","6","5","6","8","10","6","6","6","8","4","4","4","7","7","6","9","5","7","7","6","7","6","7","8","5","11","7","6","7","7","7","7","7","6","7","5","12","11","10","13","7","9","6","6","8","8","7","6","9","8","8","6","6","6","5","4","9","17","5","6","5","8","7","4","6","5","8","9","10","8","6","6","8","5","6","8","8","5","7","7","8","7","10","9","13","8","7","7","8","7","6","6","8","5","7","12","8","2","13","5","9","7","9","5","6","6","9","6","6","6","7","6","7","6","9","6","8","7","8","7","9","10","12","5","6","9","6","9","7","5","10","13","10","9","8","6","5","5","5","9","10","12","6","7","5","8","12","6","8","7","8","8","16","11","8","6","10","5","6","3","12","7","7","7","14","8","7","11","6","12","12","9","7","7","11","7","8","12","11","8","9","7","9","8","7","9","9","7","5","6","6","9","6","5","9","8","10","7","6","5","4","10","6","6","14","9","5","7","8","4","5","15","10","5","6","10","8","7","8","14","8","6","6","8","7","9","9","8","7","9","6","10","7","9","9","5","6","8","7","9","9","9","5","7","5","9","6","8","7","4","6","6","10","4","8","5","8","6","7","4","7","10","3","9","3","5","5","9","12","11","6","5","8","8","9","9","7","12","8","9","7","7","7","8","9","7","6","12","5","8","6","9","9","8","6","5","8","4","5","8","7","7","7","10","7","5","6","9","6","5","6","6","8","8","11","8","5","6","9","14","12","10","8","8","6","10","7","11","7","7","8","6","5","6","11","6","9","6","10","18","10","6","5","12","6","10","13","8","11","8","12","6","10","6","12","6","9","7","8","4","6","15","5","6","6","7","7","6","7","7","10","15","7","9","7","16","10","11","9","14","7","8","14","10","7","11","13","8","6","5","14","7","11","9","6","8","7","8","10","11","8","6","8","7","11","8","4","12","5","6","4","8","7","7","6","15","11","9","9","12","8","8","6","11","8","10","6","12","7","13","12","12","9","8","11","8","9","6","6","7","15","8","5","9","7","8","17","6","10","19","6","4","8","9","8","12","7","6","5","7","3","12","8","6","4","8","8","7","11","9","8","14","6","9","10","10","9","7","9","8","9","19","9","8","8","10","7","8","9","7","11","8","8","6","10","8","4","6","13","3","16","13","11","14","8","6","7","7","8","4","6","5","8","6","13","9","9","5","7","7","10","8","7","12","9","7","6","11","5","12","9","8","19","8","9","10","8","8","6","7","6","12","12","9","11","8","8","11","10","9","10","12","10","5","9","7","10","14","11","8","7","5","10","7","6","11","9","8","8","12","9","10","7","9","7","6","7","7","10","8","9","12","11","8","9","8","7","7","7","7","9","13","7","8","10","11","4","5","10","6","9","7","15","10","4","8","7","7","7","8","3","7","7","5","5","13","10","8","13","8","8","10","11","7","11","15","12","8","8","8","8","11","9","7","10","7","7","8","8","8","15","10","11","6","8","7","12","8","8","4","6","12","5","12","10","15","3","9","9","4","6","13","7","15","6","10","8","10","7","17","10","12","9","10","10","8","13","16","18","8","11","10","10","9","12","21","14","9","9","8","11","6","14","10","7","10","6","9","9","15","9","7","14","13","7","7","6","10","17","7","9","9","8","11","9","13","15","12","11","9","11","6","7","15","9","14","7","18","12","12","8","11","7","10","13","12","15","8","14","10","9","10","7","14","9","4","10","11","11","3","7","10","5","5","11","10","8","7","7","7","7","8","12","9","9","9","7","8","8","10","11","7","20","9","14","8","11","8","11","13","15","8","9","16","8","7","8","9","12","10","9","8","7","7","8","12","9","9","9","17","6","9","12","12","11","7","6","3","18","8","6","12","5","8","5","12","8","13","6","10","11","8","8","13","7","7","10","9","17","8","15","12","8","13","10","6","9","9","13","9","7","9","9","11","12","3","12","4","4","13","11","9","11","9","8","9","6","3","10","20","9","5","10","4","9","6","6","14","19","11","10","13","11","7","9","14","15","9","18","9","9","14","11","8","16","13","11","8","11","9","7","10","9","8","10","11","4","14","13","16","5","7","9","8","15","9","15","4","6","10","7","8","10","11","9","15","10","12","9","9","12","13","16","9","8","8","8","14","10","10","9","11","12","10","8","14","11","14","11","10","8","12","8","13","11","11","4","9","13","12","5","12","6","15","18","5","6","8","8","8","5","5","11","8","8","9","7","9","13","14","12","9","7","9","15","8","16","15","12","11","7","12","13","8","10","8","8","8","12","13","16","9","8","8","8","12","12","9","11","10","11","14","9","9","14","10","7","6","6","13","4","13","5","14","8","13","13","9","7","11","14","14","11","10","9","8","13","14","8","14","12","10","13","10","8","7","9","11","9","11","12","8","11","11","7","15","8","9","18","10","5","6","9","11","12","10","7","23","17","8","5","12","10","10","12","15","9","7","6","14","13","14","11","10","11","12","7","12","13","20","8","10","10","15","10","14","11","9","9","12","10","12","7","16","12","14","12","5","6","5","8","12","19","12","14","8","5","8","6","4","4","15","8","4","5","11","15","11","11","10","17","13","9","8","10","10","9","11","12","17","15","21","15","9","11","7","18","21","11","7","8","11","12","8","11","12","5","10","12","15","12","11","19","11","11","12","16","15","17","7","6","9","13","19","9","12","12","11","12","13","7","15","12","10","12","14","12","13","9","10","13","10","12","19","17","13","10","9","12","12","10","12","16","14","10","10","9","9","5","15","14","8","9","11","18","9","11","8","10","13","8","12","7","7","12","20","12","13","11","8","12","16","17","12","13","9","15","14","20","19","11","9","15","9","11","11","11","14","10","14","16","11","10","12","11","10","6","7","6","7","6","11","17","3","9","9","4","8","8","9","16","9","17","11","8","13","13","8","13","12","12","10","18","9","27","19","17","19","6","15","12","11","12","14","11","10","17","10","11","9","9","11","7","12","11","11","8","14","14","8","10","13","10","8","10","3","9","12","6","9","17","11","7","11","9","18","13","10","16","16","11","12","16","9","15","14","19","15","11","9","6","11","9","10","10","11","15","7","12","14","7","15","12","12","12","6","4","12","14","12","9","19","11","11","26","8","15","6","8","4","14","15","7","8","4","13","12","12","11","18","17","11","15","16","15","12","14","18","7","18","9","12","14","15","16","8","10","12","8","12","9","20","9","13","8","10","6","16","12","11","10","14","7","4","17","11","15","13","13","6","16","10","10","12","10","11","11","18","10","10","13","25","11","18","13","9","14","9","8","10","15","13","14","13","13","7","9","9","13","11","9","10","20","21","12","13","8","9","11","17","6","4","18","4","11","7","9","11","15","10","13","15","4","9","4","15","10","7","11","11","24","9","9","14","23","12","10","17","11","9","14","7","12","9","16","11","10","10","14","9","12","11","23","7","15","11","10","15","5","11","18","8","4","10","4","6","15","4","6","6","5","7","10","10","11","12","10","11","10","28","11","10","6","11","9","13","11","14","10","14","15","11","20","9","11","10","8","8","10","11","10","17","10","7","9","12","5","8","9","5","14","4","14","12","19","8","6","24","8","11","10","11","4","9","6","24","15","9","8","7","9","10","10","14","19","15","7","18","12","13","9","10","11","9","12","12","14","16","6","9","14","9","8","12","17","39","10","16","5","11","14","11","12","18","5","2","12","18","9","8","9","8","10","9","13","17","11","12","16","10","11","11","12","10","8","26","19","8","25","24","26","42","19","16","17","15","17","21","8","13","8","13","14","17","9","14","13","5","17","8","12","9","7","19","14","8","14","11","3","14","13","3","7","11","3","12","15","9","17","25","11","20","12","13","11","15","11","18","11","12","10","14","10","22","14","19","11","10","11","11","18","15","12","11","12","9","14","10","7","13","19","18","6","15","19","13","12","7","12","11","7","5","11","9","4","12","14","12","16","15","15","12","21","25","17","14","26","17","22","12","13","50","20","9","15","11","18","14","17","18","11","11","13","17","11","19","13","14","15","13","20","13","5","9","18","8","9","8","6","21","9","20","12","8","16","11","12","13","19","14","14","14","19","13","11","17","12","13","22","13","10","21","14","12","8","15","8","11","13","12","12","12","16","10","12","13","16","13","4","14","12","7","7","26","9","17","10","11","4","5","6","15","12","11","11","14","10","11","20","17","6","21","9","11","18","11","17","10","12","13","16","17","10","12","12","8","10","23","10","13","10","9","10","11","15","7","13","13","7","8","8","3","5","4","18","6","7","11","13","10","9","10","18","15","8","16","18","10","12","9","18","11","14","12","23","16","17","15","17","20","13","16","20","14","12","12","15","12","17","13","8","12","15","12","19","15","24","12","20","10","12","13","10","16","14","16","14","6","17","10","7","5","21","17","13","23","20","17","10","18","13","13","16","23","22","15","13","15","16","19","17","27","13","22","13","8","12","21","8","16","17","12","11","12","15","3","21","5","17","14","4","13","11","34","18","10","16","11","9","14","12","10","7","6","13","9","13","16","16","17","16","24","37","12","23","18","16","17","20","14","8","12","10","14","12","18","15","22","15","18","11","12","12","12","14","17","19","4","14","7","7","20","17","14","28","17","5","5","8","23","8","10","14","10","12","20","20","13","21","12","16","23","28","13","13","31","25","17","13","18","15","25","13","33","22","7","14","13","11","15","14","15","11","11","16","5","7","23","11","9","9","19","20","19","16","12","18","14","10","11","5","9","16","10","7","18","12","15","24","14","16","12","14","15","14","11","18","23","23","23","12","21","13","10","19","11","13","19","21","24","10","18","20","12","13","21","9","8","4","14","21","12","13","4","11","14","10","9","16","12","30","9","16","10","5","11","14","12","20","12","21","9","20","17","9","25","21","18","24","16","20","21","13","18","20","18","20","21","19","13","24","12","16","17","25","19","15","4","19","11","5","21","23","14","18","16","6","17","17","10","12","15","11","18","6","25","19","18","23","30","22","34","19","37","14","25","22","17","19","18","13","17","10","16","12","26","12","16","13","19","19","27","24","16","17","6","18","15","16","6","17","16","5","20","17","15","6","16","18","11","8","19","9","15","20","20","17","21","13","21","22","28","13","19","24","17","17","19","17","31","18","25","23","17","17","20","16","17","17","12","30","12","31","13","14","14","10","12","19","11","15","21","7","13","3","14","12","14","13","10","17","7","16","7","5","14","12","16","20","13","11","16","20","21","21","26","12","49","30","32","19","20","21","28","18","15","20","15","12","14","17","11","27","16","16","14","12","9","24","15","12","5","20","7","8","6","10","18","11","13","16","12","12","4","23","19","36","30","24","13","13","21","24","24","17","31","19","20","17","19","20","19","28","15","17","24","18","18","20","15","16","11","15","28","19","22","9","21","6","13","6","13","17","22","19","13","23","15","5","13","10","9","10","9","7","16","21","22","39","16","16","21","16","41","23","22","18","35","19","24","21","25","12","29","32","21","23","26","19","15","28","23","25","14","26","24","5","10","16","6","15","7","5","9","5","23","12","19","30","12","15","30","23","5","19","14","34","15","21","38","34","33","26","25","19","39","19","16","35","21","18","23","27","39","21","18","20","33","16","24","24","15","24","15","14","7","11","6","22","13","25","14","23","13","14","15","9","17","5","25","8","21","15","13","6","20","22","37","13","16","33","24","17","33","25","19","24","33","34","22","26","17","16","18","21","13","23","21","15","16","13","19","15","15","20","26","22","15","13","9","11","19","23","17","17","12","4","7","5","17","20","5","10","12","15","17","21","25","26","35","20","15","21","23","31","17","26","24","18","30","27","12","19","21","16","13","15","18","30","15","13","24","14","12","21","19","34","17","17","19","20","14","18","13","23","16","10","9","25","13","31","12","10","19","34","20","22","30","24","13","22","12","21","17","23","16","24","13","61","30","22","25","19","20","30","30","16","14","14","15","11","18","16","17","17","17","11","25","9","9","19","16","14","23","20","15","12","24","19","35","15","24","6","12","6","19","27","17","30","31","24","15","29","29","47","22","25","24","26","22","54","43","19","31","14","34","17","13","21","22","11","19","24","17","17","23","16","16","31","14","21","17","11","26","38","10","19","8","12","5","3","13","17","22","6","21","27","22","18","18","27","20","19","42","26","21","14","17","27","41","10","20","25","35","16","16","24","22","20","23","12","25","13","18","14","5","17","13","31","4","7","29","39","12","18","9","23","15","4","11","12","17","20","17","8","35","12","33","29","34","34","23","33","20","17","23","33","18","57","37","18","21","29","19","30","16","18","19","22","12","13","22","18","19","22","13","4","13","19","10","14","12","13","12","62","12","28","13","10","19","14","5","20","14","10","15","19","23","24","37","19","17","33","15","20","38","27","31","23","26","20","16","16","25","12","13","18","13","18","17","18","15","22","17","11","25","15","16","19","8","15","12","12","15","20","16","16","16","23","5","8","7","10","23","18","14","18","24","12","19","23","19","51","30","16","26","16","18","38","18","47","22","15","48","14","22","14","11","9","16","16","11","26","16","23","4","13","7","24","5","8","5","15","10","10","16","6","12","14","10","7","7","11","7","13","32","21","20","14","21","24","21","57","24","19","36","40","36","33","20","21","28","27","30","22","21","28","21","27","24","14","21","19","13","26","16","7","31","32","32","44","4","62","11","50","8","6","7","16","11","19","4","12","6","36","21","30","24","24","28","29","23","29","59","48","18","32","23","36","61","27","35","22","32","20","22","21","20","28","13","38","31","18","24","23","16","27","18","21","16","31","8","10","23","46","9","21","9","6","14","13","29","32","25","21","30","22","36","14","55","28","16","25","27","18","24","36","30","25","28","10","63","16","21","23","28","23","21","19","21","30","11","17","13","22","7","11","22","20","16","41","8","21","25","8","25","8","19","23","12","19","25","23","21","19","33","23","14","26","26","16","32","22","14","37","25","26","20","23","53","26","38","17","30","45","38","28","18","26","22","16","37","18","14","11","5","10","34","10","19","20","28","30","22","7","5","20","13","11","21","20","9","22","19","9","29","16","21","21","24","26","37","18","33","31","25","23","25","28","36","35","35","59","38","26","29","14","34","16","21","13","21","26","19","15","10","20","11","15","46","9","63","41","6","7","27","23","27","5","13","23","17","17","27","13","20","31","21","16","37","24","24","41","26","13","41","53","41","32","27","79","47","39","40","43","16","29","25","27","16","58","13","28","22","24","17","9","12","24","30","12","8","12","12","29","4","19","26","23","6","22","19","27","14","17","48","50","19","44","33","40","23","27","40","44","39","34","54","42","24","30","28","37","32","45","23","12","30","33","14","41","31","16","25","18","35","12","14","7","36","39","22","5","31","21","7","14","22","16","6","15","17","33","6","25","24","21","30","34","26","34","27","48","42","25","63","62","23","44","32","36","21","47","109","44","24","21","14","17","16","16","19","22","56","48","30","7","31","36","23","27","35","11","7","43","5","6","5","28","30","9","4","21","20","24","23","32","37","31","49","22","36","29","43","37","31","29","22","50","33","22","23","41","29","28","18","25","26","16","26","21","30","12","21","23","17","37","14","17","12","30","22","25","7","12","12","9","46","11","15","26","4","6","5","20","28","42","20","44","42","25","33","33","46","39","25","31","27","27","26","27","33","56","35","76","11","25","22","20","16","28","24","41","19","33","17","24","28","24","33","8","36","45","18","40","14","7","8","27","62","8","21","26","5","19","32","31","44","55","40","44","30","35","40","37","58","60","33","43","24","54","55","85","37","43","31","36","28","27","31","57","14","53","24","27","32","13","19","15","19","44","27","7","11","36","27","8","35","6","26","15","5","12","20","14","36","52","59","34","43","45","45","52","36","46","65","67","64","57","50","31","57","37","33","60","57","25","23","26","33","20","28","51","32","37","24","21","26","38","7","38","9","26","6","19","32","30","18","6","15","17","9","32","6","27","49","66","52","35","40","45","34","41","41","36","70","35","19","46","38","33","39","43","51","66","24","39","49","38","62","27","22","51","41","59","22","46","20","29","37","37","18","49","22","35","19","15","44","7","25","9","32","6","35","6","31","24","34","44","34","51","79","29","49","26","32","38","55","50","95","28","45","52","31","55","22","48","25","54","31","30","30","32","25","28","47","15","26","27","8","26","6","40","4","13","12","24","5","27","25","15","25","28","19","44","47","32","26","19","32","36","31","34","52","55","30","39","70","32","39","51","39","33","64","88","33","48","30","52","28","28","48","22","25","32","45","13","24","20","29","76","14","35","24","16","26","6","33","15","16","35","13","19","6","9","35","41","23","50","53","70","36","49","55","47","68","90","250","67","33","63","47","63","79","105","39","53","40","29","32","28","62","72","68","37","9","17","39","40","15","33","23","24","42","4","21","24","17","16","7","8","33","5","17","19","118","132","56","64","45","51","127","83","35","57","52","67","78","87","178","84","36","78","43","71","48","58","31","47","42","61","63","30","32","33","41","22","23","16","18","19","35","31","13","21","10","13","9","24","11","12","4","54","28","12","66","50","63","40","65","58","82","36","43","153","51","92","39","105","68","58","52","63","48","34","30","48","36","34","32","55","41","53","38","26","18","46","24","24","15","40","8","8","94","43","23","12","36","26","8","9","25","18","9","14","42","76","34","46","47","42","199","65","46","30","78","51","55","43","59","54","43","49","37","40","37","36","53","46","38","49","33","64","104","47","23","12","7","24","26","19","5","29","19","47","18","9","6","22","29","10","31","11","28","29","33","52","42","71","67","52","60","65","124","46","74","61","42","75","83","105","52","63","52","78","76","81","43","36","40","25","57","48","76","75","26","9","7","17","14","20","58","12","21","32","19","3","9","13","11","6","36","31","28","48","69","74","73","50","46","65","82","67","54","43","30","68","79","147","36","101","71","35","111","50","49","21","54","51","57","31","29","27","83","24","75","8","4","49","13","81","70","26","19","6","10","18","5","34","6","19","39","10","33","6","125","136","100","104","63","80","36","55","105","37","49","42","113","61","69","62","63","70","59","95","22","49","20","20","30","67","58","48","24","60","29","28","80","37","19","70","9","23","56","13","19","7","12","14","17","5","21","20","18","25","53","50","76","58","46","60","63","55","64","67","48","82","38","68","83","111","62","41","82","43","48","18","24","18","32","32","87","25","34","25","112","48","75","42","12","41","45","44","19","17","10","9","24","33","21","41","14","3","29","19","49","34","33","35","52","40","73","24","26","47","36","89","157","44","39","38","109","88","51","34","25","63","53","34","34","58","33","28","33","38","53","55","76","75","74","2","32","31","41","32","24","9","45","25","12","27","15","9","8","13","99","109","64","42","114","85","28","98","122","81","41","127","106","49","138","228","35","228","32","89","43","30","54","64","25","24","11","33","56","16","17","141","22","29","5","30","45","23","7","51","8","6","5","13","32","36","62","42","30","40","59","68","64","145","78","41","52","39","65","43","178","360","293","129","252","274","357","424","68","92","53","70","37","60","31","59","45","32","47","30","38","15","6","49","10","9","4","151","10","17","7","13","10","24","17","17","39","20","27","42","101","119","59","131","63","132","139","61","112","81","37","89","450","57","149","93","42","85","221","53","34","32","48","44","29","85","22","51","43","56","19","74","26","39","70","55","9","108","66","73","33","20","26","40","26","34","18","8","16","57","55","46","43","51","76","28","80","59","67","76","50","76","69","44","65","61","55","41","69","123","42","30","54","48","36","42","73","35","33","65","18","36","12","12","6","6","51","10","23","30","27","16","33","17","32","9","47","51","24","20","49","96","57","79","40","64","120","108","55","77","107","236","48","97","51","57","63","82","250","104","25","21","72","29","33","38","24","30","143","25","69","65","71","61","111","51","18","129","30","12","22","8","39","6","11","39","20","9","20","6","91","82","136","52","101","52","88","95","133","151","275","214","148","175","122","362","114","320","161","296","35","46","40","40","70","29","69","41","77","82","81","31","12","57","12","32","76","36","35","195","28","21","32","20","37","9","54","7","30","38","157","73","160","123","130","122","72","105","370","57","356","316","300","393","185","313","103","232","466","273","74","65","133","68","37","130","75","61","114","23","178","8","43","35","44","34","72","13","5","45","36","7","17","9","37","25","49","42","8","44","471","285","372","312","139","284","415","501","194","158","103","291","161","88","157","91","166","92","163","69","138","69","42","56","65","86","69","61","55","38","23","18","39","36","11","36","25","17","8","27","122","19","37","9","64","8","9","36","5","13","133","116","129","165","107","155","281","93","341","84","105","152","141","223","57","118","60","254","173","508","48","29","75","59","79","92","116","55","46","88","9","32","9","43","31","33","18","7","8","78","7","4","11","34","10","64","92","15","24","17","161","120","117","99","247","59","99","87","112","113","285","441","107","128","136","309","92","159","203","157","46","140","112","37","52","87","53","18","101","78","71","70","13","13","45","10","26","18","46","54","26","28","22","26","13","15","10","24","20","12","123","51","87","182","171","43","72","206","69","126","210","263","274","233","277","561","304","406","273","547","97","44","52","66","51","28","64","52","79","61","278","9","19","15","16","7","37","7","76","18","26","48","9","21","12","34","40","14","9","19","217","147","160","178","183","93","136","341","202","96","394","407","583","521","540","535","480","448","439","422","102","197","196","101","84","48","123","45","96","123","73","108","18","18","27","36","11","11","14","49","20","11","38","18","22","80","13","20","9","37","271","183","454","120","267","139","401","445","268","185","342","330","369","411","231","380","490","403","163","364","117","177","96","163","91","121","99","150","138","103","89","62","18","15","18","91","20","39","18","14","12","24","38","57","31","52","43","11","5","71","219","89","225","464","116","144","278","132","554","153","228","321","288","254","439","442","211","244","215","390","81","174","64","43","56","264","47","48","112","87","17","34","14","160","65","62","8","25","21","21","7","16","27","34","15","14","6","10","15","37","219","261","214","264","187","110","483","122","111","184","631","409","142","501","260","267","424","550","514","288","95","113","60","72","108","59","59","204","55","88","44","13","13","10","108","50","33","22","8","31","21","60","86","36","17","6","76","37","12","31","178","121","151","568","470","418","323","121","107","217","439","473","535","520","445","533","465","327","473","403","84","150","186","116","87","89","75","84","141","131","6","30","6","10","38","132","16","48","10","5","66","24","80","24","77","32","13","20","19","18","354","281","338","283","573","248","270","380","325","251","448","419","430","433","478","445","464","382","478","405","200","355","107","175","116","261","246","108","89","151","31","235","99","20","81","42","56","40","33","16","36","27","31","38","11","26","20","40","26","24","423","446","322","461","442","454","503","512","436","421","437","469","393","419","485","443","396","417","431","428","146","161","277","124","83","385","396","233","178","214","43","69","25","6","14","38","6","17","31","10","19","47","31","9","63","50","27","45","54","22","306","429","427","459","394","427","280","334","474","470","406","377","476","433","376","459","421","416","419","435","390","406","289","364","203","146","216","346","368","168","92","125","47","19","11","21","14","23","12","15","17","22","11","15","21","19","58","25","44","8","365","196","421","388","479","330","438","434","403","287","502","436","428","395","431","396","411","406","430","440","293","112","162","173","127","383","107","154","391","137","77","113","19","33","28","57","58","40","34","29","7","9","69","43","29","35","46","10","27","8","445","472","396","254","489","482","442","491","454","439","422","462","405","416","427","405","409","395","417","455","190","294","283","186","103","361","209","284","49","188","56","108","60","42","22","6","7","11","17","53","17","46","7","8","57","35","18","23","61","22","515","432","469","119","397","486","250","477","567","384","407","1117","500","279","587","574","317","429","458","389","125","88","80","63","144","47","39","76","61","123","178","21","79","83","55","15","226","46","148","16","13","13","31","20","24","5","51","12","129","10","494","488","367","399","800","210","120","331","207","186","669","963","781","935","660","894","993","868","814","804","96","79","120","120","148","41","129","82","245","185","19","42","9","8","26","46","153","12","102","12","7","39","16","53","46","24","19","6","67","10","614","117","207","500","617","713","1092","153","350","314","115","739","753","381","369","729","454","784","1077","676","110","215","65","63","103","477","44","95","73","145","144","199","34","117","175","20","80","67","444","245","37","19","28","13","9","9","35","47","34","7","709","126","319","211","153","372","957","463","758","540","769","301","404","864","412","721","323","875","807","379","202","144","157","154","106","85","250","169","142","50","46","88","12","6","25","7","82","30","104","56","43","6","50","20","74","46","24","39","19","36","408","394","399","614","113","320","283","104","787","422","455","373","437","395","266","762","553","500","366","511","120","40","51","108","78","62","108","46","32","126","37","247","15","8","10","17","4","14","35","40","42","90","55","48","69","14","13","40","83","33","237","239","372","467","506","207","284","682","437","424","610","771","507","521","520","524","518","874","495","612","168","187","112","211","118","133","115","106","212","129","10","107","231","35","94","72","15","86","68","29","19","11","40","27","36","42","31","45","36","36","789","340","540","567","521","536","321","541","458","503","554","555","605","497","539","582","510","709","559","705","389","258","87","131","463","103","100","297","100","137","83","314","28","71","8","77","36","16","55","52","14","32","11","20","7","16","72","8","63","62","758","677","558","598","641","617","686","644","775","560","533","521","499","493","526","510","501","547","530","562","245","423","189","316","126","461","331","160","507","208","100","28","27","53","63","8","40","29","23","31","110","32","9","13","48","4","27","23","50","12","721","1010","785","643","512","543","560","618","536","581","494","486","592","523","524","613","557","517","622","477","201","62","228","200","420","384","91","155","142","213","30","7","12","98","13","28","11","43","13","5","53","49","18","26","15","22","42","125","21","73","806","608","674","466","350","760","677","419","1032","613","620","850","930","642","882","675","423","511","660","648","163","175","155","190","119","196","116","184","71","249","23","309","9","59","10","67","270","8","14","331","56","31","8","15","11","20","9","7","36","4","558","978","518","653","724","526","507","485","390","524","399","407","412","433","536","420","534","409","404","553","250","244","391","142","434","355","401","470","422","430","48","48","55","16","9","100","183","19","203","66","36","20","73","60","23","80","31","16","53","67","458","416","531","454","453","454","673","563","488","410","431","426","422","418","429","415","413","417","392","408","418","338","433","137","189","404","361","401","416","437","146","29","10","176","27","56","34","20","32","18","7","76","39","21","17","57","24","94","36","22","452","679","476","477","441","474","512","579","881","422","404","415","393","409","389","431","432","416","428","400","405","394","377","455","410","419","238","437","401","296","78","51","9","8","61","15","8","98","141","76","11","29","24","54","30","26","42","36","39","15","462","427","421","441","473","435","429","536","474","441","455","423","414","428","399","398","396","400","403","409","384","403","391","511","221","102","403","444","452","452","23","25","45","36","52","59","44","152","77","22","41","51","38","62","51","45","17","20","42","9","415","467","475","531","543","434","436","431","469","568","431","599","437","441","469","469","413","477","432","536","396","434","404","229","458","428","186","383","413","417","35","10","87","33","50","57","48","130","20","29","9","25","15","98","31","21","7","25","66","69","540","509","614","428","430","465","514","542","472","454","350","362","368","356","354","354","343","344","399","360","305","369","433","382","349","361","401","414","358","362","55","23","18","17","256","29","176","10","40","24","84","9","62","29","17","23","29","11","24","9","502","482","426","371","378","434","485","357","364","383","356","343","355","357","350","363","350","347","354","353","399","360","378","347","360","363","353","355","355","366","15","44","71","95","239","23","64","33","59","26","23","15","41","37","85","36","48","73","32","45","369","373","361","384","415","436","402","408","364","387","339","368","347","356","356","344","364","347","350","352","371","378","353","346","352","396","366","364","371","362","102","60","88","18","13","55","41","92","14","73","64","44","20","44","68","17","15","20","48","31","388","392","392","400","374","408","401","391","369","366","343","343","357","349","360","355","394","370","364","352","369","374","373","354","379","352","349","362","380","352","64","125","255","177","157","71","10","152","382","56","52","46","18","10","26","15","43","21","13","53","423","366","372","377","365","399","374","351","465","372","364","357","349","350","369","390","351","357","367","355","393","362","340","359","379","384","379","344","369","341","25","206","36","55","42","75","33","13","7","58","11","17","60","32","80","16","22","82","23","68","394","404","367","401","371","405","389","480","400","363","319","333","337","321","321","317","322","328","320","315","315","326","329","346","324","326","328","325","331","325","145","137","111","21","48","27","27","18","50","177","47","8","15","14","37","52","8","126","27","32","329","328","343","335","349","359","361","359","349","363","313","319","312","315","319","321","317","312","314","317","336","331","330","323","323","325","354","316","328","328","18","328","101","25","35","176","68","155","54","15","21","77","47","11","63","63","43","33","12","6","329","355","333","333","341","321","339","356","342","410","317","311","316","310","320","316","313","317","312","315","337","329","322","344","335","322","321","326","325","323","39","6","54","24","69","13","39","48","87","35","39","79","14","62","55","14","6","55","49","20","364","344","332","342","326","332","326","326","329","327","319","316","313","315","312","325","318","318","316","320","336","322","315","326","322","318","325","331","329","320","22","121","13","217","127","34","184","27","91","68","15","8","45","28","64","25","8","8","28","19","336","325","327","338","334","325","341","340","337","329","311","322","317","324","315","317","346","321","315","325","320","342","332","322","320","335","361","320","316","338","46","147","181","170","46","45","123","85","66","107","69","24","16","29","45","49","11","59","21","56","355","358","330","358","338","382","344","341","347","367","478","447","494","469","475","468","473","462","496","445","528","283","493","461","504","571","468","493","508","195","367","78","22","53","50","9","14","44","15","38","86","39","9","65","126","12","14","26","102","47","547","528","476","523","541","546","493","573","576","607","444","450","464","442","443","441","462","446","459","434","469","419","718","660","419","449","480","514","461","247","26","156","17","15","24","14","48","9","72","42","70","8","124","23","13","30","15","8","24","85","469","470","475","459","549","468","471","477","483","493","448","441","427","433","444","464","449","434","454","442","581","555","502","480","460","418","440","221","472","594","25","263","35","51","52","271","58","408","28","10","35","91","71","8","10","81","36","56","14","16","482","523","472","475","477","552","480","527","517","453","455","437","440","471","472","448","451","435","448","438","541","447","467","502","490","472","376","452","300","459","60","55","24","51","17","23","18","25","45","221","14","39","13","37","33","13","17","17","23","11","470","458","465","471","466","449","506","514","474","484","475","468","527","451","439","459","458","490","489","463","451","703","196","575","493","419","633","464","502","587","23","23","50","32","17","235","57","31","14","38","13","19","29","19","51","90","46","29","128","6","579","489","513","505","602","524","529","508","546","569","385","373","398","394","373","388","385","390","390","366","387","408","388","392","406","482","423","416","396","471","23","58","27","198","56","135","86","301","289","84","66","53","17","31","17","55","43","80","138","39","395","396","407","399","401","387","419","411","421","419","376","378","369","380","378","376","367","390","373","401","436","395","499","541","408","401","430","394","397","403","97","24","36","137","30","78","36","49","219","33","17","62","8","21","22","68","37","51","6","42","380","447","418","406","391","387","396","396","391","401","369","395","383","372","379","365","375","382","370","376","394","391","429","417","379","495","386","405","373","413","11","41","351","34","350","176","146","68","249","8","110","125","43","32","10","7","10","35","72","14","382","403","393","412","386","386","377","426","399","400","376","371","380","375","380","392","370","378","386","374","448","414","411","519","400","625","443","389","401","389","31","10","21","12","39","161","258","19","5","40","11","6","75","48","23","15","28","62","38","156","402","412","402","388","405","389","415","390","423","430","372","383","384","370","392","403","392","385","379","384","397","417","615","659","538","434","392","407","386","420","41","381","10","21","346","18","13","143","29","92","39","8","40","12","19","26","42","96","36","18","399","471","398","427","377","423","388","410","398","416","339","337","344","334","337","345","333","327","337","341","337","361","418","345","390","425","348","356","363","361","10","226","224","25","168","11","10","362","334","26","23","11","128","5","20","57","39","78","92","33","366","362","374","349","348","358","363","372","382","341","332","336","336","331","336","332","333","332","338","340","345","391","462","359","342","358","346","338","397","341","21","29","20","44","8","60","296","72","251","156","113","55","40","57","14","49","8","27","27","91","344","347","347","344","343","354","355","345","351","344","328","335","333","330","334","337","334","333","335","337","340","429","401","375","345","360","389","544","350","416","22","202","253","98","47","343","213","162","15","129","28","38","107","25","43","39","63","81","17","46","422","361","348","349","347","335","361","346","353","349","334","337","334","333","332","328","338","330","335","329","423","338","359","397","366","387","359","519","369","585","360","147","236","22","24","138","25","254","72","14","12","8","107","54","14","120","67","22","40","12","357","344","356","347","351","351","358","382","349","363","345","337","369","339","336","337","338","334","339","341","354","403","381","373","359","381","346","372","353","359","5","32","140","359","27","193","162","57","38","190","33","47","57","39","31","32","28","16","13","66","370","371","346","345","348","356","367","380","349","347","303","304","308","309","303","304","305","304","306","308","316","312","312","335","312","309","361","335","315","311","9","33","173","332","148","205","30","87","39","72","9","38","19","15","19","85","28","61","95","18","327","333","332","316","321","347","324","330","323","311","304","306","304","305","301","304","303","305","306","309","316","323","309","318","371","320","321","309","310","316","192","25","127","226","92","8","174","92","234","62","16","27","61","50","10","52","21","33","29","17","344","327","327","319","319","337","325","317","326","321","304","305","303","307","305","304","310","306","302","305","325","321","460","313","336","315","319","314","315","334","10","105","138","9","129","14","99","145","13","343","70","59","11","56","58","16","55","156","60","11","349","327","321","340","324","315","316","324","322","308","309","304","309","307","302","307","302","304","305","305","312","309","319","316","315","316","323","312","317","320","13","33","112","104","284","16","34","134","23","152","19","52","47","53","18","75","39","50","62","25","328","313","314","323","343","311","326","326","315","334","310","308","309","306","300","302","304","305","304","308","315","315","323","324","310","319","340","321","314","318","86","47","123","317","496","61","277","267","17","96","56","9","16","36","48","15","16","108","31","161","339","342","313","334","333","319","323","324","326","325","283","284","283","282","283","283","282","286","284","283","285","290","305","292","291","289","293","299","299","287","81","155","8","11","215","139","81","104","274","24","46","20","81","51","108","9","50","149","16","98","293","296","309","294","297","304","290","304","305","342","282","284","282","285","285","282","285","282","285","281","298","298","297","292","288","285","291","290","294","298","387","423","367","13","59","168","270","22","175","219","22","20","60","68","12","20","9","9","13","53","306","303","299","306","302","313","297","299","305","319","282","279","282","281","283","284","283","282","284","281","300","288","289","289","304","291","290","298","284","288","17","28","116","20","128","178","32","118","223","201","14","8","55","97","12","29","27","8","47","68","299","308","312","303","302","323","330","303","301","295","285","282","284","285","282","284","283","283","285","282","295","303","296","289","287","292","290","296","290","302","64","16","100","353","179","24","10","24","247","91","57","167","51","128","7","55","13","33","227","53","298","300","313","298","294","302","299","296","304","308","287","283","285","282","282","280","284","284","282","284","290","307","296","287","294","293","293","288","291","287","140","50","430","83","51","153","648","17","19","165","21","37","156","39","128","55","51","10","77","17","307","308","306","322","301","305","316","294","312","301","381","371","383","380","371","378","376","373","380","377","435","371","448","417","558","418","569","417","538","412","10","16","186","72","189","675","8","18","255","277","8","52","90","100","69","25","13","21","7","9","393","401","385","405","397","385","440","398","389","403","373","375","377","374","372","378","378","369","368","369","567","525","403","400","591","457","422","423","399","388","264","23","177","7","524","69","46","11","367","92","34","66","36","13","13","27","33","8","69","5","376","412","390","386","382","408","386","389","392","400","365","369","369","368","376","375","380","378","361","367","408","437","462","391","385","478","422","441","427","409","76","223","24","17","276","50","10","69","161","5","37","87","82","28","15","158","60","99","53","47","392","382","391","387","377","385","383","384","394","388","373","375","366","379","368","374","377","376","377","392","394","454","485","408","464","458","723","477","473","474","10","49","251","493","27","25","168","169","15","287","28","16","44","20","12","12","96","14","58","16","397","421","399","389","387","394","414","385","404","380","383","379","384","392","382","377","382","383","370","373","494","491","481","483","405","450","568","461","402","549","188","404","19","88","193","70","20","161","593","230","38","23","79","90","30","7","16","35","72","62","408","411","388","391","395","416","420","388","385","397","334","336","330","334","333","336","348","337","334","334","397","402","376","345","347","350","404","348","344","357","25","169","16","329","267","132","246","30","195","28","66","55","26","13","126","50","11","59","22","47","357","361","342","355","351","354","370","345","347","352","330","327","325","329","336","337","330","334","331","340","347","405","354","401","373","395","356","384","414","338","311","201","184","35","35","45","17","37","19","21","73","54","126","70","34","45","33","57","37","66","346","344","346","346","343","352","354","346","338","347","331","330","328","330","330","331","335","329","338","331","366","358","380","454","494","344","371","548","348","340","113","254","23","20","20","420","72","28","365","9","91","18","73","8","8","4","24","104","20","41","353","348","338","342","344","341","346","346","372","341","328","332","330","331","337","334","333","331","334","338","490","358","349","427","354","353","442","342","346","404","163","12","32","28","420","148","23","471","131","22","23","93","65","70","76","18","55","120","109","284","346","357","347","347","338","343","370","356","355","336","334","332","338","341","333","332","330","331","333","332","354","362","346","567","334","358","340","360","353","472","157","21","223","111","186","554","18","30","124","644","29","57","77","9","38","70","55","10","92","6","346","344","365","350","351","350","364","343","339","340","304","302","306","305","303","302","303","304","307","303","356","319","330","322","316","328","322","323","319","320","250","12","18","157","626","110","357","257","147","210","79","68","98","74","173","97","13","22","131","51","330","317","316","318","321","317","326","331","318","313","303","303","305","301","302","302","303","304","302","304","309","395","315","324","343","309","312","352","314","338","233","182","29","107","45","46","12","95","167","190","65","81","48","46","37","49","249","56","19","8","320","324","322","311","320","334","315","311","314","308","302","303","303","303","302","302","305","304","303","303","318","338","337","340","311","310","316","326","312","309","151","178","16","8","249","19","27","114","208","22","30","3","10","15","26","25","62","12","141","48","316","313","315","319","364","316","313","318","310","323","304","302","304","305","302","301","302","309","304","300","317","333","311","334","337","315","425","339","329","321","445","247","460","110","132","218","265","143","9","139","181","51","25","67","61","84","6","19","26","16","321","311","330","314","319","314","316","318","328","320","302","301","303","302","310","301","304","303","302","301","307","368","315","309","320","314","359","337","320","313","292","303","133","195","187","117","61","100","541","52","7","36","96","8","11","96","31","71","11","50","333","325","320","318","318","316","312","324","334","315","280","283","282","282","282","281","280","281","280","281","291","301","293","287","287","295","306","288","297","290","112","102","23","18","546","181","169","18","108","369","29","110","169","80","60","23","147","120","10","95","297","292","301","295","294","306","307","297","307","297","280","282","281","282","280","281","280","279","280","282","292","298","345","292","290","291","293","288","290","289","138","230","209","49","6","71","112","231","259","32","16","34","100","73","189","24","22","326","95","87","291","302","296","301","332","312","300","294","308","310","281","280","280","281","281","283","282","282","283","284","292","290","289","286","294","289","300","290","291","286","11","148","19","704","216","16","161","204","14","41","17","119","42","120","129","54","66","47","131","57","303","297","295","292","307","288","301","295","288","306","282","280","281","280","281","282","281","280","279","281","292","294","290","285","291","285","287","284","290","287","315","110","397","174","26","114","118","156","20","9","214","67","6","43","78","19","76","66","60","177","308","289","296","296","299","290","329","293","313","293","281","280","281","280","280","284","280","283","281","282","286","286","288","290","305","295","290","292","287","283","204","298","100","328","17","131","18","407","257","482","67","17","26","203","62","54","42","34","179","166","301","303","298","289","302","296","297","292","292","294","262","263","262","263","264","263","263","262","263","262","276","268","270","268","269","266","269","275","264","267","41","7","223","229","29","230","187","8","178","287","126","223","120","114","79","286","31","216","62","60","294","318","302","290","281","282","278","289","284","289","264","263","261","262","264","263","263","262","263","262","267","269","267","266","269","276","267","274","269","265","174","14","374","51","384","73","10","307","63","78","38","41","47","113","125","154","83","54","52","69","286","279","295","296","291","288","283","284","290","288","262","263","262","263","263","263","264","263","263","262","268","269","267","268","268","271","267","269","263","267","350","277","318","312","108","67","128","636","380","86","106","17","13","192","55","181","63","124","139","62","282","306","346","282","284","298","280","283","286","290","262","262","263","263","263","263","264","264","262","262","269","276","269","268","264","274","275","271","266","271","122","54","412","212","25","92","499","13","177","721","73","64","171","8","104","69","154","52","48","91","280","283","282","277","282","276","278","286","290","282","261","265","263","263","263","262","264","263","263","263","270","271","271","271","270","265","266","266","274","266","260","398","341","72","169","32","18","314","109","221","40","32","88","97","76","69","101","90","16","46","302","312","299","279","278","280","286","284","282","290"

"[initial & final values]","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100","((count patches with [shade-of? pcolor red]) / initial-trees) * 100"
,"2.3807608783077296","2.287787945724203","2.2055896170077234","2.3235457945412588","2.272546048959413","2.300699863245113","2.2388059701492535","2.283508884779288","2.2313187254193756","2.271257678629163","2.7238879090730945","2.6861908456167574","2.6963657678780772","2.7113702623906706","2.754026645456353","2.656509424748511","2.7783251231527095","2.8925619834710745","2.7495107632093934","2.783975167329518","2.7261220913250903","2.8374307647458945","2.765465407592985","2.7144094715564537","2.765814910517753","2.5625978090766823","2.7612083894554553","2.8147141609240025","2.8044792389257753","2.854359473940575","3.258056927781698","3.19683908045977","3.2582938388625595","3.2846715328467155","3.34051724137931","3.295010074671092","3.3364996437900736","3.3645955451348186","3.3455059488750147","3.3002915451895043","2.4288747346072186","2.5098848203541344","2.3442062234086927","2.4239298607529656","2.4203170274416226","2.398429498122226","2.4063718013895947","2.487646958596013","2.4742442155041378","2.3893065998329157","2.305290962939246","2.3365231259968104","2.2723622932391203","2.2885492518204367","2.2584793441568882","2.284807616025387","2.1914096740776157","2.3541700144624778","2.299499757947394","2.209190231362468","2.751470441630944","2.5425348881666987","2.7208894090111175","2.7130668200556034","2.5909268674227612","2.6191622532498795","2.668744521281776","2.7906976744186047","2.6490066225165565","2.7867409797594602","2.5406601867000287","2.746983223781026","2.870163870842626","2.8610621203213795","2.718017671917019","2.7882143563377495","2.546560243253516","2.5462962962962963","2.8191072826938135","2.89625074390002","3.4653465346534658","3.1117053603986875","3.355223880597015","3.343757517440462","3.101325757575758","3.3114138093001406","3.1390680131402844","3.1901269065083246","3.2819668274320666","3.184044786564031","2.3835872988848217","2.3103967855349072","2.3876047752095504","2.4518092661481234","2.450113665066936","2.3860066230788823","2.4544534412955463","2.4473437366760464","2.4766751484308736","2.4591544551120093","2.2209839197580004","2.173223350253807","2.2540983606557377","2.3873945567404107","2.3291179766287815","2.257987028585155","2.254932665205136","2.1671826625387","2.2278803309993633","2.276778479987036","2.7412065238750243","2.611440596900708","2.711053523372869","2.624594514892362","2.814021421616358","2.6147588611272514","2.6463745637844127","2.693376785200805","2.7001056980878255","2.7490078404801084","2.6470305130426413","2.79038331563194","2.7615144418423108","2.8277135360995045","2.7457757296466974","2.7626987204342766","2.7826255574946677","2.9425999419223694","2.825458052073288","2.706359945872801","3.2767562470532767","3.2754827670496214","3.2697547683923704","3.4904428350943846","3.268206039076377","3.380588876772083","3.2765242438790207","3.4383610878159816","3.3554616777308386","3.257290686735654","2.5787720946119035","2.364406779661017","2.45936516041188","2.3246055723397117","2.416918429003021","2.49812014370457","2.3872005417760094","2.4114930733709596","2.372994652406417","2.4769932054700265","2.327079474997987","2.2336493652579144","2.264780673871583","2.305429684394626","2.297662585466688","2.2298456260720414","2.291365171249397","2.3079355042681002","2.2886204704386524","2.345876701361089","2.734722085102182","2.7485774905969715","2.650672342072168","2.677441339694285","2.7334630350194553","2.691370063383715","2.6920108066383635","2.7587556251222853","2.696265243902439","2.7006022925976296","3.02397294339998","2.8450188060565145","2.7873196584551967","2.9060665362035225","2.8730128327906534","2.7131037136809697","2.759961127308066","2.853152434158021","2.7364146199961326","2.8232526222919323","3.4233593935086475","3.4096271826333173","3.3353547604608855","3.3164495899662327","3.4258142340168876","3.333731628629466","3.149327671620665","3.377977954249141","3.402331667856293","3.5108669691903507","2.440264361972547","2.3838314043876316","2.585551330798479","2.4230186774356386","2.44213750850919","2.46559148864308","2.5030104937209705","2.448308677221213","2.443593018305662","2.334564998320457","2.2412291122198464","2.2840433098869832","2.237751256281407","2.3296773677047473","2.2355289421157685","2.2134387351778657","2.285984549897525","2.268416060701865","2.344432965111659","2.211892931559545","2.6444184231069476","2.7558277360726984","2.7305709375596714","2.774813233724653","2.7214155207231463","2.59540517158512","2.6164769964011283","2.6345824614799316","2.683974233847355","2.696629213483146","2.7216856892010535","2.7973395931142413","2.765874561745228","2.7302441838108056","2.885543331403204","2.8033718878651244","2.7479562690830295","2.791977978765238","2.9771814709626874","2.8563072723727823","3.3132885272963097","3.3989266547406083","3.3042846768336966","3.33176912247771","3.204367434132447","3.324198737042774","3.395605686758313","3.1044776119402986","3.2330916438844644","3.2988964545668","2.4983062330623307","2.4024277164292336","2.517554375749272","2.4219682756268126","2.401070860871748","2.3914307066345595","2.409025362626177","2.5383304940374787","2.382567407156181","2.4176385460117475","2.3692083771326917","2.3266970496521946","2.320709105560032","2.3697813121272366","2.395543175487465","2.2387463020708402","2.392574217812275","2.435907675105822","2.3639536728541968","2.389837236998809","2.7727489280609814","2.695076863202958","2.8443256657440106","2.7150198778241057","2.838597171090874","2.784222737819025","2.7772287013243724","2.7141729174891434","2.9091262891613154","2.653256704980843","2.8671396637185342","2.9149082343703996","2.7555208129763535","2.85266150377414","2.6235629360322297","2.782339870543909","2.9775226233336576","2.8505835087048017","2.944072469476172","3.0105616424834665","3.281644428416877","3.331391962725684","3.5117257967528563","3.5010156530051377","3.485349716446125","3.3540802213001384","3.0891134588883786","3.4432940043342164","3.280749885688157","3.2355426777737533","2.4315592586294845","2.462680273256304","2.4339898512083944","2.5107422697784143","2.4110910186859553","2.45818550430816","2.551279877945414","2.5061383456100246","2.3897367097098776","2.6108786610878663","2.3907268775658053","2.4312728428412522","2.27653965971723","2.28163713344833","2.3390402700747526","2.345483359746434","2.286123944559503","2.3265078479802406","2.3627684964200477","2.2912222485581104","2.712724434035909","2.7630692211418117","2.7796676061813588","2.7255092143549953","2.719003361676884","2.681173499125704","2.734114508907307","2.6310735548300364","2.7679968701095463","2.802447207420564","2.884049440847557","2.545728832736187","2.850749172990854","2.8321812596006146","2.5638516488893237","2.6796822662455737","2.8661809815950923","2.870766835344492","2.8477334366524603","2.903509629484798","3.418279833374173","3.364990034001641","3.216374269005848","3.3546704599336183","3.4318840579710144","3.2220810717172887","3.3345116059856252","3.288575329995448","3.394913627639155","3.5269960140113543","2.3943543644459377","2.563667232597623","2.4827586206896552","2.481788920887684","2.416638598854833","2.585263157894737","2.4825709913280054","2.374536881104749","2.6032013479359732","2.5177093112571476","2.409061901723038","2.271108649204716","2.2854883353103994","2.314851642669636","2.231012658227848","2.290325209878556","2.4994030088354693","2.428605331856657","2.4151180114482864","2.392837334601062","2.801201899777067","2.7680311890838207","2.785866821976315","2.7551416375630575","2.8512474207465766","2.762484304066454","2.7340353589025215","2.8397366610985553","2.7933491686460807","2.8684080827994087","2.7631834987351627","2.7975436202358903","2.7704870224555265","2.7128341718457136","2.8448528692931863","2.760766015359191","2.704485488126649","3.010815551008477","2.735059373175005","2.7954256670902162","3.3024944372877387","3.413508260447036","3.0496289424860854","3.414987329552311","3.315902067981935","3.3689400164338537","3.369320204057421","3.2125768967874233","3.32541567695962","3.2211189149915236","2.41635687732342","2.6089941640920014","2.5472887767969734","2.367758186397985","2.5293132328308205","2.4431625381744144","2.595722662987237","2.4513520343694717","2.5507592560996417","2.3674642766551113","2.3930672602957546","2.3863088542503617","2.3737933217281215","2.3425831302570552","2.3442466624284806","2.2948484608688773","2.4217086061370985","2.4583036914077936","2.2969321252583055","2.3577693731391327","2.671003351074315","2.6829502836811234","2.706333973128599","2.6868822569810957","2.755330542303573","2.878537391811728","2.679589509692132","2.8889557628648808","2.8759562312385007","2.7355909819828317","2.741590511374684","2.832751261156383","2.903319461918126","2.8721643462175055","2.9856687898089174","2.8375061364752088","2.8366000196986114","2.89841300009503","2.767258957180309","2.9497380166893072","3.3380681818181817","3.3149847094801226","3.144125765030601","3.438090737240076","3.388224144058761","3.3281825745869487","3.3672395650648896","3.338304462544454","3.2779040555090324","3.28747959897412","2.47976139752876","2.3614049936521373","2.5536261491317673","2.440264361972547","2.479198505688572","2.6024503591043513","2.443767968882124","2.600757836720634","2.586869290531888","2.5497670478610757","2.305544475468688","2.2923089083866888","2.4072296865003198","2.2802087515054197","2.256180494439555","2.254326083505318","2.322806459311113","2.2277227722772275","2.318088951752318","2.4902975420439843","2.829088080886642","2.8916366468698276","2.697274031563845","2.6874391431353457","2.7186181175777797","2.819189602446483","2.7167630057803467","2.7193828351012534","2.8384705423332033","2.7868045297882817","2.9160530191458025","2.7875243664717346","2.9500830321383216","2.967536347341167","2.7859937028909454","2.893827160493827","2.9789318961293483","2.6409495548961424","2.8265107212475633","3.0024691358024693","3.1437485001199903","3.559870550161812","3.2587035517524323","3.333727390944556","3.1294452347083923","3.3493947584910098","3.376932223543401","3.3763539986171933","3.3077102259492195","3.473885960709152","2.418809201623816","2.4227947449240745","2.488956846755012","2.4803284296955184","2.5432264562699345","2.355424229632756","2.3292571333499708","2.4149745132447564","2.4586008786752283","2.4203930993047806","2.6706231454005933","2.484322238301978","2.3494743548900923","2.298481073696054","2.2809123649459786","2.3846091665993048","2.330946698488465","2.315473368104947","2.2144890857323634","2.4755233622542385","2.794333170493405","2.755442243577172","2.749540129731823","2.8023598820058995","2.819332566168009","2.8368794326241136","2.838534072129873","2.9192124915139175","2.8936676246159942","2.7693214180496906","2.8323924469534747","3.0013642564802185","2.6585681569252215","2.942033207107486","3.1651733541098555","2.8472906403940885","3.0001948178453146","2.9080583569959852","2.922552362396493","3.038539947577905","3.126491646778043","3.278490200822647","3.3983417026742964","3.484612621242965","3.3093864091390883","3.454523493175504","3.4515591525827185","3.2458233890214796","3.494781282983464","3.445437441204139","2.472480948348857","2.62001206584504","2.6090675791274593","2.6081046640047574","2.58517377161445","2.4640303265270957","2.550324121460253","2.6282537275713924","2.5595389439783034","2.5369437088921156","2.467448963189198","2.3064516129032255","2.366255144032922","2.304767939173135","2.468044054988343","2.408963585434174","2.366117201672056","2.559533452130245","2.353769158586174","2.445240939864596","2.9331514324693044","2.819476520400308","2.7210884353741496","2.8487323141202165","2.8278888347147735","2.7442264953135567","2.6671746999428465","2.7909681170656073","2.740661269872233","2.7467232074016965","2.8860169079778446","2.960623704727129","2.8961319458079715","2.927641241554881","2.9923987299143655","2.6466867762965847","2.9660184639560008","2.677969367112995","2.895365504061156","2.7669856912726236","3.390418884517473","3.4625384069959817","3.3892215568862274","3.499231587658116","3.609467455621302","3.324991061851984","3.407318536292742","3.460859329017069","3.458486320028426","3.5456730769230766","2.4962305243759424","2.4809650098383096","2.5770591207680646","2.4779830771887412","2.4970672029495558","2.5790630813461863","2.548918640576725","2.6092907862092565","2.778958103169882","2.5621511922881783","2.409261576971214","2.462740097234399","2.3620168601876887","2.3248356581689915","2.401606425702811","2.3359642828669376","2.5638971236279144","2.2786612864941844","2.393026941362916","2.4728781110402043","2.938028991146999","2.787855642543441","2.89463527595523","2.8695394931466325","2.948207171314741","2.831579982302625","2.8269588183507777","2.8769260776282426","2.908805031446541","2.8317547114539594","2.792407830666799","2.6512911492213678","2.9108910891089113","2.8842468378689152","2.7650210486031384","2.6292978907830107","3.0584591560201315","3.0952146998133045","3.0484854350140327","2.8178431559843347","3.3086941217881027","3.1757317217679817","3.443328550932568","3.6114877357327746","3.518251681075889","3.5499398315282793","3.143605620385806","3.515107740459853","3.494432598910211","3.521379805964786","2.504244482173175","2.49213234668708","2.51604621309371","2.547121752419766","2.637418914305224","2.517200872629636","2.6714007946571985","2.627997958836537","2.5401410245518647","2.529396836139074","2.318330801822688","2.437287330853842","2.4190339778785708","2.3103365576784713","2.281277515408629","2.4312475089677164","2.3137876386687797","2.415991185960494","2.35191637630662","2.4102116863553475","2.9025031654816402","2.7567938781516728","2.689767397338949","2.8414658044287675","2.9449677739216655","2.9528128920196854","2.6862498792153833","2.85239816352447","2.7735417460922607","2.875494071146245","3.043686989918387","2.953020134228188","2.8064146620847654","2.952851195662697","2.91356112670603","2.893765779763061","2.9397773760822","2.730275942479596","2.9230618828820023","3.028161905723226","3.297220913801225","3.2775288846970057","3.12793979303857","3.4410112359550564","3.597796788937068","3.3697420404369045","3.3325426944971537","3.4052079651231297","3.4669173815959575","3.1749764816556914","2.571088029967649","2.5103541543402925","2.5927168988085247","2.637869216322349","2.6894233255753814","2.6802218114602585","2.5776215582893967","2.568667344862665","2.636309167165968","2.4114544084400906","2.399362295735353","2.4524245560952305","2.371794871794872","2.4582967515364356","2.390247789020795","2.387332521315469","2.4045374660488896","2.3377862595419847","2.3198538174306824","2.364837964806115","2.803015658225401","2.859669811320755","2.8994024880007836","2.7451358119822773","2.7707317073170734","2.7027027027027026","2.719584854891409","2.794547224926972","2.8386598435840495","2.911093627065303","2.8005334349399886","2.9663050782374962","2.9583457009993075","3.099380123975205","2.865865668701989","2.9044852871155125","2.9140502354788067","2.9768253660428585","2.823711439899429","2.8833041106565362","3.3372921615201903","3.4299231224127738","3.3827131692523036","3.099296698056979","3.5403366221706327","3.4231870229007635","3.3904311872415827","3.3785363572597613","3.567593365946784","3.4024016953143397","2.5186968107968712","2.5823384980103294","2.5373771892353694","2.4764651005003815","2.5658169661512744","2.6867459570462904","2.5819012951832727","2.5900996847576043","2.4931665700323036","2.441703278134505","2.3903439570842537","2.37792269763003","2.534965034965035","2.458498023715415","2.4777636594663277","2.357300536108483","2.468549727035367","2.3777549569476264","2.489825233421116","2.411358768937892","2.7862557841882447","2.848975702715579","2.8582501695572136","2.8766596113142198","2.8881212819036652","2.7983304875735153","2.963904920277805","2.6894630679089424","2.839208112023177","2.7092639347446106","2.917485265225933","3.0448875356055396","3.026741110784602","2.9417494642509254","2.9109926978488256","3.003120124804992","2.8864781092599765","3.0303030303030303","3.100851022204832","2.827466820542412","3.6352871521610424","3.2473734479465137","3.581267217630854","3.2460608932590924","3.5649765145128263","3.5879348090488934","3.207990599294947","3.4818775995246583","3.4466477809254012","3.4078931959245815","2.5529371584699456","2.521079258010118","2.574141952682439","2.646808510638298","2.6127265065318164","2.4776672846789145","2.5851938895417157","2.5871575197217744","2.6379310344827585","2.6043890359491075","2.4205629582906254","2.429405268969869","2.6290931989924435","2.50996015936255","2.532765136286886","2.6116124910150944","2.460202604920405","2.328016755276301","2.3864449924429243","2.4407582938388623","2.8607693809802774","2.928746928746929","2.883858267716535","2.8257305429646062","3.025540275049116","2.9667568612292228","2.9961813375110156","3.0419373892498522","2.8751210067763795","2.82706180542016","2.886757725467403","3.04223688096879","2.9366005445352004","3.0078800691908514","2.6731819488358726","2.964484884062225","2.8142954523322623","2.9317541986214932","2.9391594004114823","2.9911154985192496","3.2598274209012463","3.409898176651669","3.50937751697158","3.430451127819549","3.3636677802096533","3.3765032377428303","3.447020269450176","3.480974672908414","3.5939545400452215","3.6480952971832736","2.5963006957407093","2.4720623095157466","2.6612767390938186","2.762808998374818","2.5549613784907903","2.664267968816928","2.512391044265937","2.6078234704112337","2.558454761097933","2.560808496060295","2.5848398350777035","2.378283151825753","2.5898477966371822","2.4611191277857944","2.432194575566045","2.444620253164557","2.6782102111821344","2.4169422138245946","2.6190097118293267","2.4014680070209034","3.010329562223315","2.8043019398934566","2.8541021671826625","2.752202752202752","2.899554675903018","3.036576949620428","2.776710222905457","3.0385930630190523","2.9454510221877723","2.988460400433968","2.931978107896794","2.9702970297029703","2.981427174975562","2.9814743342338867","2.707457726517447","2.8304611533647828","2.701132733081615","3.074970714564623","2.9676172063798933","2.960115329168669","3.5568372987262675","3.3958259639193495","3.567580509996408","3.117619272555503","3.4645855504315954","3.4858648778150454","3.4736218138707766","3.508982035928144","3.194015673236761","3.2295948326482677","2.6326892245380136","2.596961724518374","2.6075177785303083","2.7083333333333335","2.561526870919136","2.60035344609947","2.479338842975207","2.6581740976645434","2.5185936443542936","2.58230012825994","2.454810955876549","2.480261583858362","2.4030320135472945","2.3119531187284257","2.4690384160290293","2.4142617315532817","2.4546678280148866","2.466598150051387","2.411550055529113","2.28734810578985","2.997694081475788","2.965935787000783","2.7628098363867934","2.8102584258622385","2.795091546552396","2.8904518739762985","2.8368794326241136","2.9035433070866143","2.878329593131037","2.94653997504559","2.7560197272991007","3.080201472297559","3.036897813829261","2.956604673342871","2.925222781867493","3.0320756556498","2.9300841311285177","3.003960204771564","3.052240266092741","2.940893801057184","3.396851698425849","3.661025087024367","3.4583479378432056","3.577254719179678","3.4743021444830475","3.5381305283289506","3.623710103191745","3.1646319781913004","3.6556036556036555","3.500237304224015","2.5703485930281396","2.6840555321834247","2.5802605807715233","2.7448640354615974","2.696799126270688","2.6122241947755516","2.4615124344442565","2.6527671836596323","2.5421574442843826","2.749404153898536","2.3926477578830614","2.43785084202085","2.469922715321488","2.458171437633812","2.2718277527111534","2.3773313055310976","2.402618135376756","2.4083853416546646","2.4298012712205326","2.433980273623926","2.795678544351782","2.947735867351886","2.794734834032812","2.8079444281381467","2.8565969236648514","2.9958879968670455","2.723322066634476","2.8211342704798836","3.100158982511924","2.8415193828727663","2.8957528957528957","2.909197766676462","3.0344423846228903","2.984223531647976","2.8920807453416146","3.054911059551431","2.684757505773672","3.0191600541900523","2.9872673849167484","2.654953635919961","3.7247551094449145","3.5064304780393107","3.5862232216830394","3.400093153237075","3.5398230088495577","3.3799810246679316","3.260869565217391","3.422778771615981","3.6084905660377355","3.4527610263686883","2.6090675791274593","2.5597269624573378","2.742543709290367","2.5860607088350007","2.558333333333333","2.503793626707132","2.655754133956907","2.6204564666103125","2.4787775891341255","2.511454267775327","2.4484848484848483","2.489492402198513","2.6336791699920195","2.4652694129928534","2.44075269663806","2.573826044860416","2.577527184857028","2.4495332322668157","2.6332337682754283","2.488199055924474","2.835993078254182","3.088538091969801","2.927491275688251","2.998395507420778","2.957220786678151","2.890118275467379","3.014391287436795","2.844744455159113","2.978847273432952","2.9847908745247147","3.232125367286973","2.980003882741215","2.7358024691358023","3.0595502364636618","2.975662626859789","3.2017585778457427","2.6980150317980343","2.9069767441860463","3.0589381393083293","3.002510137092103","3.5791496516934904","3.431546562536978","3.3603431839847473","3.4196152932795063","3.673127542474276","3.4915879234846736","3.4606205250596656","3.64333652924257","3.614600616259777","3.850682995760716","2.6510953882874433","2.6869455006337137","2.69831782085219","2.5744573447753663","2.795969773299748","2.606980533401938","2.593781683001014","2.6135030993466244","2.6093501714476877","2.7782556339239637","2.5582313462297672","2.4796032634778435","2.462060058120762","2.4982155603140614","2.3747739246677675","2.7302657994057657","2.567853079798472","2.4862313139260426","2.4370881956021275","2.550324805517684","3.053880567982883","2.952029520295203","2.9018075232046896","2.9546358933545562","2.95869174780225","2.8716865155589706","2.8276877761413846","3.004418262150221","2.8977108084613157","2.8890867715444744","3.014977630811126","3.227408142999007","3.051237766263673","2.693537447921713","3.0744974379188017","3.036897813829261","2.754574383452665","2.9789318961293483","2.878875409204699","3.1102825745682887","3.1847133757961785","3.454291695743196","3.5531179205913914","3.4856879039704527","3.3472803347280333","3.4434293745607873","3.30846968238691","3.4700315457413247","3.6703850305865418","3.7458900892437765","2.546473134708429","2.6539639333106497","2.5636700961376286","2.622950819672131","2.482688735010978","2.6235354049923587","2.624558988038895","2.786144578313253","2.6355803345159656","2.522876934918327","2.5507383716338943","2.51616974286165","2.4027368923542047","2.4","2.458628841607565","2.4103139013452917","2.362266520169518","2.338072669826224","2.400826774783369","2.6188946015424164","2.858821225768553","2.8462066934929826","2.9317851959361394","2.9143190207888092","2.8636095256839207","3.153823266884856","2.9479992267543014","2.9530465597007582","2.8984102365257853","2.976716769820218","2.989316867587964","2.9078220412910727","2.8627931066955457","3.1377899045020468","3.1131433018776145","2.9907452508524113","3.1853376457904536","3.0294117647058822","2.950053548826794","2.9463074239193645","3.467390022408303","3.4951687939878324","3.536556322934032","3.746739388190657","3.2890049869389695","3.127187864644107","3.747487882728455","3.637815030220094","3.489601691928093","3.5847467821484424","2.553191489361702","2.6697372910269532","2.544635407975972","2.7031621897313842","2.5382858109823165","2.6426882809861536","2.581189371573176","2.74701691132286","2.5571228243834034","2.6211879358145005","2.5716094318721314","2.525373611444098","2.5577491807209656","2.6735833998403833","2.5384737426622244","2.5061464033626772","2.445997458703939","2.4575121678768053","2.3581135091926457","2.6168373879641487","2.9127143815272585","2.8911727980021134","3.0311834204919617","2.982489898018087","2.7799227799227797","2.9451921201482345","2.958931222167244","2.948779320248923","3.0467363439163875","3.0004823926676316","3.127124405166554","3.0058365758754864","3.059216997835924","3.126225009800079","3.125612384871644","2.9281713668075073","3.0806608357628766","3.0851581508515817","2.9600155279503104","2.676955320567781","3.209182478332162","3.608931804465902","3.5880167208546214","3.621509572003414","3.43393536121673","3.6018957345971563","3.1433010637026415","3.4960112623181603","3.061224489795918","3.737551259519625","2.582218857767684","2.6856509506351776","2.632678646050982","2.798459563543004","2.6572485704675413","2.4974772956609486","2.629793009840516","2.5851144715721888","2.5562891484679193","2.6777391746462165","2.5204145728643215","2.423120270487844","2.454279154461246","2.5451107083760145","2.436716347291223","2.5114515874269467","2.5846203088741295","2.5039494470774093","2.4104899497487438","2.432179607109448","2.939497716894977","2.939754375785707","3.0924827385004376","2.9911231184870704","2.897843692067519","3.0971699980209775","2.825024437927664","3.093286494925839","2.991328071713924","2.9490106544901065","2.707758960220559","2.9289912322959823","3.0428902627511594","3.2070535800794495","2.956705385427666","2.9865033023834595","3.005569425772998","2.847828171445009","3.03522000572683","3.0706836616454227","3.6977120406748325","3.545086842731383","3.131206916695876","3.174232699264792","3.65007180469124","3.409224961660965","3.5839266320743337","3.6359287166606866","3.6189334931096466","3.434082088674585","2.577626541897065","2.697060788243153","2.5573491928632115","2.5616616183470358","2.8275862068965516","2.6603805354436774","2.6697177726926014","2.75291911702037","2.776132035548032","2.5673831456840666","1.6014799154334038","1.7024898914662694","1.743595229181152","1.6001275849237149","1.7312097160816067","1.5916808149405774","1.7558840796285426","1.722304911758452","1.7950079660116833","1.6980533220482437","1.8624","1.921721862789059","1.8784530386740332","1.9767969408257178","2.0022319963237707","2.0016680567139282","1.9464720194647203","2.0122868605817454","2.0116637179739207","2.0755581745564067","2.1012171684817424","2.071025124975654","2.030521678053764","2.0545725581696805","1.9128725843432688","1.7451017451017452","1.9691291367591945","2.1224118906990332","1.9818762631201512","1.9780360927364973","2.4553212043149255","2.3213723638652817","2.2650146002683296","2.397833187285908","2.326495323430009","2.3531221162719165","2.3534949399858793","2.4642603269883896","2.4916943521594686","2.4580915538362347","1.6819571865443423","1.8138261464750172","1.7135794145738525","1.9029280172169676","1.7699618689886745","1.7468239564428314","1.8657993837726805","1.7779287696053452","1.8540367436372829","1.8177712543750706","1.6203092837916295","1.6808059384941676","1.6752100618295196","1.6637708629495078","1.7418087196643832","1.6356877323420074","1.6528925619834711","1.6242900366261481","1.6113643591646347","1.6238952188265359","1.9122092259166774","1.952697041953986","2.081151832460733","1.9966722129783694","1.9544181308887192","2.101335428122545","2.0914172969417955","1.992321948636484","1.9567323216015498","2.0080061983471076","1.8818070503318942","2.0392309186249755","2.1901150627615062","1.8708470421263144","1.9000386448537938","1.7765831912940868","2.004801141893207","2.0196789228379077","2.00826553015627","1.977579040181383","2.468747543045837","2.450548570513334","2.5816733067729083","2.4325172630257375","2.3811426288453856","2.30543091443602","2.14432663396107","2.2542615899314957","2.3540343812916213","2.410893071686023","1.7506332676611316","1.7580791989076014","1.8072633686016586","1.850574712643678","1.7462360776851176","1.8036747766477494","1.7984390906006107","1.763538417918911","1.8618687012469395","1.714826568676577","1.6355140186915886","1.7208514243354864","1.5876375952582555","1.6197108789701382","1.8001607286364856","1.679826188331302","1.7333686721441823","1.6927566993897587","1.6303770578863515","1.7558886509635976","1.8866675493181515","2.0067109678268307","1.9308021251781782","1.9504132231404958","1.8686771054836009","1.949660928534168","1.9444090271579753","1.9825379111140289","1.9763611703158304","1.9288689522588913","1.9416210581183215","1.911409746232631","2.1003275740253065","2.00859911441956","2.0644907589461265","1.9194604759743206","2.0223106530106336","2.0402825006539365","2.0548389187787643","2.096657216324916","2.4041122973507316","2.33330816280299","2.2558840296441076","2.4528448342777303","2.3673403655688863","2.3760656772971265","2.370085675394347","2.392574217812275","2.420886075949367","2.34208658623137","1.6622824201041024","1.8690542809177393","1.7723827434889154","1.7389836231639373","1.748762932973459","1.8632141851956094","1.931342450460508","1.7225900572326338","1.7283253318271674","1.768425765291846","1.6545963947771845","1.6572524778855378","1.739636209813875","1.6549595572584077","1.6170934733047027","1.67319139808012","1.589664522303153","1.7454235845040442","1.791617788205183","1.5382175705677132","2.023006743355811","1.8864242503089834","1.9408740359897172","1.8849778803616082","2.0119418483904465","1.9803278688524588","1.8665987131298973","1.880712829617939","1.9140625000000002","1.89192609465958","2.081828331253694","2.002635046113307","2.1703814412892326","1.9585253456221197","2.086428525289064","2.1117121814508244","2.0427890192035054","2.003220611916264","2.1693811074918568","1.851731531414463","2.3115024766097965","2.2875048962005486","2.281753757495522","2.2863831447522434","2.383039770463059","2.3961661341853033","2.4122807017543857","2.4450857784191116","2.427030456852792","2.4502055011065447","1.8524851801185591","1.839706536238328","1.7846829155596629","1.7559708655637738","1.7244265863050394","1.8151071025930103","1.6857759110001136","1.797701672545227","1.7281432375772","1.7982131679280713","1.6087346379028429","1.708355508249069","1.6958162777098507","1.7458470003174267","1.7645804456765113","1.7102985152930066","1.8061697479887049","1.644962302947224","1.7278962198947312","1.801321679812407","1.9459888800635423","1.9558939354161198","1.978651392866441","1.8244383846253733","1.9954352787740466","2.0123045372981285","1.9054385738276707","1.9032617969416552","1.9452495974235107","1.9475560081466397","2.0804710500490677","2.069866144302971","1.9925034523574672","2.152477927434427","2.0010428888019813","2.125147579693034","2.1239733059548254","1.7797048925705412","2.035904774294263","2.1237903487692407","2.4386381631037213","2.36596829443161","2.3473808586057503","2.4592731829573933","2.2441372883988198","2.295505981247979","2.6157425980903475","2.434382681785743","2.159827213822894","2.476536004416752","1.7112719519721709","1.6928041669025644","1.7517093292648473","1.7380127417011288","1.7246269926816815","1.747485531269315","1.7847120888988661","1.7989898416661938","1.7971830985915493","1.7571614215492402","1.7265415549597856","1.834079761143101","1.819049639372083","1.6530677121966726","1.7240470290504561","1.7755870037631845","1.7970737913486006","1.8655120803934147","1.795770906386144","1.7713194739075093","2.1031384294830056","1.9842560666189577","2.0271168416854977","1.9495710943592408","2.027506941305611","1.9213410702772407","2.0076608109893015","2.012504884720594","1.9151934409428646","1.9201228878648235","2.1578538102643856","2.061317677756034","1.96412203744926","2.0821321032737523","2.092130518234165","2.0200712204596956","2.2123022385610187","2.071213961516333","2.1769752849276474","2.168861347792409","2.4266051396292463","2.3767605633802815","2.4468770122343853","2.486890195455268","2.456865707243381","2.4920382165605095","2.217920800064521","2.1566761814145257","2.518553608084636","2.5243787354514","1.8278235360487418","1.7625389628790025","1.7149649083088068","1.794001131861913","1.7899897389123245","1.7771973654326596","1.8070598799034738","1.7746782332596245","1.890005108121914","1.7546829158203565","1.6771712423886336","1.7796030116358659","1.7674516179787065","1.73053152039555","1.6913659793814433","1.6951871657754012","1.6666666666666667","1.644684987651726","1.8239829832491359","1.757562846186621","2.0075856657075595","2.027506941305611","2.2338433727161213","2.0522634287976773","2.026541151859842","2.053847672964255","1.9855478158974025","2.0138089758342925","2.0548389187787643","2.079137158079397","2.0745815291152327","2.0003871717106536","2.297029702970297","2.1913380736910146","1.8628281117696865","1.9978367372908317","2.1327319587628866","2.086340375278835","2.078908412177383","2.132561047850984","2.544369404743207","2.39600405837821","2.5395569620253164","2.6741676942046855","2.576990585607149","2.350282485875706","2.3878205128205128","2.4324114958556047","2.5142314990512333","2.2589052997393573","1.8219531337593902","1.932721023271539","1.9698594570186825","1.9384650061985798","1.8240525689684473","1.9276697372910272","1.8536201763747682","1.8359440795014317","1.8691588785046727","1.8605974395448082","1.8262401879639023","1.8151727083444555","1.8302303565793627","1.7461736706463997","1.7664272412875766","1.7898627243928193","1.7334893119217272","1.6554551187723354","1.812688821752266","1.7382575157182862","2.017423200366804","1.9543555126968821","1.899739500603596","1.9310169599186942","2.172781680978402","1.9045151259959838","1.955085865257596","1.988033198224281","1.980326171369402","2.0350334878928384","2.1306910174211513","2.1631159325578357","1.7695099818511795","2.237780540469803","2.1842417843473667","2.1609730848861286","1.8368274161095606","2.2051711909214005","2.3381991990698876","2.209218226050365","2.4767313456381133","2.3699285882445262","2.5494853523357084","2.433472015071827","2.3365588860042483","2.3950257158209873","2.5571360076714083","2.1910331384015596","2.480438184663537","2.3261448994426943","1.9712246516370227","1.7500698909700865","1.9832574863756391","1.8954396288333144","1.8385246823344203","1.8235029266096352","1.8486359307601816","1.7125416831515288","1.7729889972065447","1.950424371873419","1.868759677505473","1.6835370011013793","1.7834462320067739","1.78343949044586","1.7868572647749092","1.7342582710779084","1.8948817022177527","1.750848896434635","1.7356475300400533","1.71333725973122","1.9009951518244452","2.136147214000772","1.9803908837088502","1.9288025889967637","2.0398999294374236","2.0912420912420915","1.9641109298531811","2.089244261026567","2.034771410173857","2.1214290362465023","2.11198748451861","2.2175429361058105","1.8668777623853816","2.153233063375755","1.6791756773947335","2.3509324927764643","2.446719464297212","2.160052049446975","2.295337798296378","1.841053528139946","2.3682140047206923","2.5877123352913163","2.186530969229546","2.37758945386064","2.4077300807856803","2.1143793399391435","2.3892681377996507","2.4637793445417215","2.402092912636753","2.56011205353669","1.821043165467626","1.9011621347173644","2.0216851140727354","1.921460982578007","1.9564477713507995","1.8718381112984823","1.8972464741437205","1.7752479711451756","1.9546207921357948","1.7643742953776778","1.762208067940552","1.808675238755802","1.7457690459665793","1.7234087544935506","1.8323212954085437","1.7974291962237987","1.803904923599321","1.8748030669047369","1.8841960410712395","1.7335182419458077","2.0384315762139704","2.028161736209792","1.8888673264764861","1.9425019425019423","1.9195321934786753","2.011100228534117","1.9807767242499024","2.0998233793419243","2.033186856430773","1.9742433156828136","2.244003095176683","2.1045665122435473","2.026329375322664","2.158319870759289","1.8536649043796098","2.020395156150414","2.1147068247356615","2.17419271838415","2.1297445613118184","1.768837803320562","2.530839633903701","2.450047573739296","2.5377449405717956","2.453252357359757","2.338045673450365","2.4099241466498103","2.520677432059866","2.34775641025641","2.498813854183141","2.5545713381841186","1.8947486787360845","1.791145657316661","1.7403628117913832","1.7506452698911459","1.878384476534296","1.8539581437670611","1.9140936538680642","1.8384432628125353","1.8211182891512585","1.8274687854710556","1.8800596506178098","1.9008752617730762","1.8423421038699772","1.8793379604911908","1.9822136504875174","1.9616227484098563","1.9011406844106464","1.9038451254077757","1.7690728163007423","1.8794973687036838","2.0692297866905096","2.0588813848272247","2.0591514197652305","2.0643517043644475","2.09501708244698","2.0557625594243865","2.202022788375368","2.061921076005583","2.0487228314400157","2.1757376202466268","1.7109900672861265","2.4216430221049157","2.450536661062977","2.085732565579015","2.2744746283956943","1.8474565398678553","2.271694684234439","2.1873391662377766","2.297507788161994","2.2975001631747274","2.3695164905539543","2.485289563332301","2.5207452638171284","2.6447462473195142","2.5508170585890793","2.43149057500396","2.544468373614102","2.13540018981335","2.4443019714697867","2.5299389325085255","1.9981937231880786","1.9615535504119264","1.9321744086634367","1.994998294873252","2.0061641916503223","1.8683723278909274","1.9988738738738738","1.9113278403676923","1.9215553294902228","1.9604538815863386","1.8156721172223402","1.846008204480909","1.7433312329342574","1.8729771316389876","1.9729455167620167","1.7895072217502126","1.8955327192375273","1.7281044352897117","1.8903891977760126","1.8430753027909426","1.8962524908401361","2.1271126534284432","2.091060237882082","1.9655547730328446","2.1234632831503517","2.199006900109628","2.1373056994818653","2.1105593308938837","2.3199581754019083","2.0480854853072126","1.8592210842194534","2.455688043828553","1.9201881000587813","2.1734936660021864","2.0893050512771514","2.1747674570941964","2.193548387096774","2.173086670045616","2.2155805340783576","2.140263711064399","2.515873015873016","2.523786486050637","2.3972602739726026","2.7024872448979593","2.534002590673575","2.5592266856825927","2.561005073689297","2.3948371044242283","2.399491498490386","2.5452164661592604","1.9873174045974409","1.9658561821003622","1.8526835841006062","1.98252688172043","1.8309859154929577","1.8102906744332132","1.8390026513228408","1.9189645469893077","1.8175602529770383","1.8805561887394577","1.9252070256870086","1.936761007971751","2.039399925257594","1.8048831824878973","1.8411724247394319","1.862098318791232","1.7707066969712988","1.7308913825958079","1.7255068014608583","1.791677710045057","2.2273722157847304","2.161949685534591","1.9538882375928097","2.154410320214786","2.0625328428796634","1.9707648133646567","2.0261143628995946","2.0720020720020718","1.9956225054718681","2.1917273673257025","2.477040486353641","2.1030291337063476","1.7946687780416997","2.132701421800948","2.2267206477732793","2.28281139476561","2.079163169109576","2.4395107684126565","2.1744643083555215","2.2199343671578404","2.5363191267356933","2.4424834541443428","2.652899126290707","2.7505064671965096","2.6288781874161207","2.333749609740868","2.453215914451958","2.503912363067293","2.670715564899167","2.5044722719141324","1.9502846513725267","1.9825039763690073","1.7787122805023585","1.9331863659487876","1.9493286893994721","1.9140936538680642","1.830715335066109","1.9272313814667423","1.937018577254191","1.948088508529925","1.687002652519894","1.9691325172964342","1.67713768501757","1.723034247306092","1.8030955800223392","1.803087986463621","1.7681312863949181","1.7891170865975015","1.702604611443211","1.8702977641199534","1.9650376419548297","2.0850925625202987","2.0425531914893615","2.1142745962773204","2.050113895216401","1.876486087012403","2.1910942620317417","2.135870650076519","2.0599250936329585","1.9932911882337763","2.4094025465230167","2.1644187540141298","2.283016427370327","2.187601428107757","2.1566475108155228","2.28281547241598","2.2213587202901364","2.201810956940916","2.2764017331695015","2.1094307782176935","2.5310485772677254","2.740483335965882","2.564721016240553","2.5686024250159543","2.195673232160155","2.1756518956966886","2.521075873143316","2.4588880187940485","2.354137337713124","2.5334494497664473","1.7879512583988157","1.9386378961564397","1.9923457901846016","1.8951179498783732","1.8526912181303115","2.0347864867878247","1.9129361606641984","1.962110960757781","1.935266730240646","2.020658124964723","1.8688105633052923","1.703111858704794","1.8637840140582567","1.717516535097077","1.893196160576974","1.8335382477147593","1.8580173987756416","1.7100847051302541","1.804151144225652","1.7343193062722775","2.0735094632129707","2.008497489378138","2.111508037764736","2.1025381992675842","2.1645594757397233","2.027883396704689","2.033045049696657","2.0683749423621633","1.979105833495555","2.1751684311838306","2.045572242361471","2.2500803600128574","2.037189820397284","2.372393961179008","2.257601461568576","1.8177130333891969","2.116883116883117","1.829896907216495","2.2489437764055897","2.475599508758322","2.168598690954972","2.458763681208571","2.5614914616951276","2.7218463987266217","2.562881853526938","2.6299011794708322","2.7168732125834127","2.3508957593166526","2.208550244518063","2.2690305790500975","1.9039451114922814","1.9980809392109273","1.8778814798155852","1.8739448508722567","1.949438202247191","2.097743508334278","1.979302154611774","1.7901938426453818","1.7810697727015719","1.862123613312203","1.9485333050937204","1.7767170511800583","1.8858852441500162","1.9446960413447707","2.0126841029404057","1.9347998939835676","1.8753652446475058","1.8399999999999999","1.8922776045245522","1.7949400798934751","2.138479593167297","1.9557385486361298","2.128470677933795","2.157708905453119","1.9723865877712032","2.203520493383014","2.0632911392405062","2.326636422553467","2.0742571038429025","2.276116983334414","2.2489437764055897","2.37646906045062","2.26846765333161","2.4347373217889463","2.2346006865729646","2.203089389718916","2.367175170962651","2.160737812911726","2.3155977624560946","2.2161741835147746","2.8809168694560015","2.496684091441055","2.7482971645810235","2.552886909495785","2.6558613495948005","2.6292298953176987","2.617221475448723","2.627065793576551","2.46776872577711","2.4484735781806912","2.0403549426326797","1.987500703789201","2.0105094813799407","1.9553857391695229","2.0120378331900257","1.9404255319148935","2.1095380450109986","2.0619705751226034","2.1635704576347985","2.0180383314543406","1.9493697927793208","2.0364644418381492","1.9174041297935103","1.9201269505421847","1.854639286098269","1.949359042271427","1.8390191897654582","1.8615474112856312","1.7935071846726984","1.997450063748406","2.2918707149853086","2.1788470267816615","1.9768408930970507","2.096743356063986","2.162507997440819","2.1515073434681784","2.255934087491009","2.1008677497227115","2.2494620851535503","2.0379389900025635","2.2118359554999674","2.266233766233766","2.3012956874879134","2.236850514475618","2.276224672993075","2.1546179572935427","2.3979427836708456","2.387942845958113","2.234821016546905","2.110421430904933","2.6427061310782243","2.5212010084804035","2.699635184434536","2.47123642845568","2.548073118619926","2.3951158422041328","2.5651082522748667","2.535480784563865","2.518811881188119","2.7581273348700424","1.9193530014808065","1.9653114089424484","1.9076022733667213","2.0382600774311093","1.8887362637362637","1.9866808439196373","2.0560325350203343","1.885733527893142","1.9949423995504356","1.9927027785573954","1.9158728459809482","1.7260727836263559","1.923178528028742","1.8484385696982464","1.9095639113876521","1.9240934559678613","1.8434913468773513","1.870967741935484","1.9471859162443317","2.007607776838546","2.1601753933453702","2.151234367912914","2.166699199687683","2.1474956600012858","2.2041763341067284","2.070393374741201","2.1182926051170803","2.186942106605458","2.168351029806831","2.152425542983483","2.5243348475016223","2.2731675815305135","2.1579048472818085","2.2718421394261976","2.3564161470298655","2.443373175724757","2.2436916036356704","1.8540202966432475","2.1305797006731586","2.3820460660148304","2.5489412704754297","2.5093902341564776","2.6877031634028383","2.680986475735879","2.691821913482791","2.8596533269430466","2.305246422893482","2.8452080706179066","2.6373799401669027","2.8004033822046392","1.9050839815127945","2.109799093401981","1.8657357065186286","1.8153028332296557","2.1381299847276427","1.926009601807399","1.9219993275804104","1.8805059859950304","1.8987700504449356","2.0577291690156723","1.8988018827556696","2.006262937211401","1.7488836912608972","2.1233889710542995","1.796850227248705","1.995541874535612","1.9505989610940317","1.9381903143585386","1.974212187683912","1.8116325881979023","2.3451127333807094","2.115421486546942","2.33381408155238","2.3031636151905284","2.2520487836355425","2.1435531016563822","2.1119461000259134","2.0836021158560185","2.1353930031803725","2.2565242985152723","2.203444913877153","2.088772845953003","2.358279542404295","2.3801717920136385","2.206834066787471","2.334168534880654","2.3747896984599457","2.3266393708975106","2.290748898678414","2.298548630721744","2.5523508494666136","2.4716624685138537","2.6583268178264268","2.757381659115763","2.578955721314077","2.398580903902514","2.2162370142362446","2.6078710289236606","2.55453734490309","2.1590103222756287","2.1175016850146036","1.9118728434866223","1.9809825673534072","1.9400156093209946","1.9789067815831254","1.9949281487743025","1.8006934347388437","1.9080562374469985","1.9338422391857506","1.884570082449941","2.026342451874367","1.9262491353163411","1.7786771754180424","1.8046313548043653","1.8300100491881313","1.9954940457032506","1.8996798292422628","1.721346859486294","1.9510634895250278","1.8151902765246006","2.0958474797597284","2.1398850802456906","2.235692869247816","2.127110996519273","2.2227949230075383","2.102711908816979","2.2539395505037456","2.209439142371552","2.2128421591199796","2.2005048216943885","2.1658776992412943","2.0281905733784042","2.259268795056643","2.2489041356965886","2.2492910543954627","2.187959823427804","2.1364487187762213","1.8443020772665502","2.2391430599470867","2.427569784363011","2.242082157416118","2.755332902391726","2.5141866330390923","2.552823815882492","2.5927089880578253","2.61569416498994","2.5948103792415167","2.64831361184899","2.602028963060482","2.7196149217809866","1.9954259576901088","1.9488636363636365","2.064929949924042","2.1209386281588447","2.018895512315825","1.9143322292707574","2.2040908833361663","1.8527876031665824","1.9830028328611897","1.9708316909735908","1.8867924528301887","1.8389951772748954","1.8005757655064119","1.928040878680925","2.001174022092961","1.9857927026154343","1.947947410786155","1.9677147077442498","2.2350206065729683","1.824759270096292","2.12833951169628","2.333311607899368","2.2049709700567552","2.2035124646451356","2.2927115221780756","2.2380734245141025","2.152061855670103","2.3485626283367558","2.1455041934854693","2.2330595482546203","2.4230058024612635","2.4983734547820426","2.504250032692559","2.694105427161776","2.391502671705982","2.3754045307443366","2.442423840180527","2.2854567694585723","1.8304309139443242","2.5120462576292963","2.541035353535354","2.61277001270648","2.520556366710213","2.7271298333857277","2.8931979070483225","3.0916245081506464","2.401305564190239","2.843305733479144","2.8260869565217392","2.6864974303068054","2.106335994564294","2.041624250650379","2.1991724763362237","1.9953648747950934","1.9854776491944632","1.988781234064253","2.136196665724781","2.211343686698177","2.122628230392433","2.181368415134649","1.9293449689832824","2.060163118313738","1.9690054134380641","1.7072129748186087","2.112043930513755","1.927004241503901","1.966934240603902","1.896320171904378","2.043618313354808","2.0791662280240026","2.1883798310724343","2.3629068212215785","2.3514127963624554","2.115987460815047","2.1679173882368032","2.1778821074595722","2.181818181818182","2.1767466110531806","2.2182960345504514","2.26370910037078","2.455097557824008","2.5122030589000977","2.682017835751364","1.9286589692317617","1.8834723670490094","2.484832838518136","1.9509657280353774","2.3997433429579726","2.452368692070031","2.1847770374167093","2.2517911975435005","3.0226904376012964","2.880625598467922","2.7991658646134105","2.73735546291198","2.5226340632979958","2.690440181485314","2.6258732835461336","2.797755473010353","2.5548589341692787","1.9940123142970119","2.14853662662832","2.151139992157302","2.1545827633378933","2.1105185521388856","1.9789734075448362","2.045863309352518","2.249616542634778","2.2890888638920135","1.8653321201091901","2.020042194092827","1.9897028853373375","2.0467220877617596","1.9617149185255498","1.9596357633526813","1.9518885840894704","2.0422346966051856","1.9483630556294915","2.0228625612390037","1.907241141157095","2.2027550307877863","2.2303637999742896","2.2927689594356258","2.2856026567689","2.156282183316169","2.0715751667521807","2.2014805278403604","2.1416911524649036","2.1873174531057313","2.1465867337072133","2.1783347549373397","2.480630249365193","2.4110441376628424","2.555476483146794","1.888648435963014","2.3149021828017866","2.4081606301246046","2.305137722211369","2.7174261359994873","2.4062783759242445","2.7572784040223826","2.779573367808662","2.696116962741707","2.8761061946902653","2.3042954636692095","2.2612864562524972","2.2764738205510637","2.7804487179487176","2.4807662113361597","2.578018995929444","2.0045300113250284","1.9124137150616727","2.1174205967276225","2.0198619760983","1.9202363367799113","1.9484176145962384","2.0733019883305954","1.9889875266883918","2.0727723329953816","1.9606747849402302","1.930645675991916","1.9571639586410634","1.9858687506690933","1.8388002755550845","1.8808777429467085","1.9064308852424197","1.996546514137708","1.9852041087870562","2.083222050104161","1.9064402435116952","2.144549004545164","2.225122349102773","2.1048528551939194","2.338877338877339","2.4498886414253898","2.3296789350039155","2.1690694626474443","2.1871984560952074","2.1088832652001814","2.289039767216295","2.415143603133159","2.3603461841070024","2.2606898333548635","2.423486142125312","2.6081258191349934","2.455963128985416","2.2740487111570515","2.405144694533762","1.9546068282646434","2.1786064769381746","2.61572606214331","2.522468091533872","2.7814262535733603","2.707735278144154","2.710114534602355","2.3363750786658275","2.710220950564298","2.7593295382669196","2.5901795645955827","2.6622817320491743","1.8332581227436824","1.9148215092634435","2.0182255269189913","2.2948380450955703","1.9997733967822344","2.0752922749902107","1.8578988852606688","2.0495303159692573","2.1471530549154063","2.013799293206933","2.0112502653364466","2.025979579836425","1.9368532767312283","2.05914797499606","1.9378408429078204","2.0209541030686595","2.0028536701368704","1.897178281316802","2.0195059896109404","2.1675297634936737","2.2488373574568388","2.208161157024793","2.1763139089196386","2.2712772744672707","2.4018299656881434","2.2521923996811055","2.157814096016343","2.445792462570986","2.207218904180732","2.2217953643232167","2.3445006726026523","2.457002457002457","1.7545012485214877","2.577957164247119","2.1220330237358103","2.5511197663096397","2.3039375203384314","2.6635634859063875","2.2797927461139897","2.378843477160572","2.727272727272727","2.874646559849199","2.609387430389817","2.717863632772379","2.7372117149469317","2.7736191001497126","2.588524464244566","2.5996112730806606","2.796119670661123","2.7957324195934894","1.9429024583663759","1.9876819708846587","2.0726568727935315","1.9737951976606871","2.084157017791584","2.05033692334274","1.994612254255746","2.078535237217872","1.9741666196626995","1.9630091909678884","1.454107250451898","1.4057431214706235","1.4303877940241576","1.406986969382045","1.336481133207955","1.4386764176957199","1.40980071089101","1.4799154334038054","1.563812342518898","1.3332799487508007","1.6104220748005","1.5611918246737255","1.618091899937581","1.5192269376369794","1.6057179223576639","1.538610412231469","1.7174920712368873","1.6215166521021458","1.7181963791680823","1.5109956209999518","1.844636251541307","1.7541280807486892","1.8190781365541042","1.8950437317784257","1.715184144075468","1.652932622394571","1.8238993710691824","1.8354026598616087","1.9239220665071537","1.7620716510903425","1.8979210464844662","2.01120613388381","1.8528512322360136","1.8912666281087331","1.6118440690108051","2.0984037783224725","2.1177315147164393","1.9320297951582868","2.0562316407889214","2.3071420054846787","1.4400067765024778","1.4803535930296494","1.6192799461641993","1.4211995601048981","1.6094009452037297","1.5877720382758913","1.542101482952385","1.5134907251264755","1.4393682065217392","1.7338114321873024","1.3922227556409026","1.3980427401637707","1.5790939103456505","1.5185757900162564","1.422271661833062","1.5102523659305993","1.4365427994776208","1.4636675440695541","1.4258821644570834","1.4135254988913526","1.7118611002731174","1.5733662145499383","1.7011762418586565","1.5082444228903975","1.6256590509666082","1.8493217527081096","1.6686996828494753","1.5691515691515692","1.6666666666666667","1.7058192806316406","1.8301859313558912","1.844532279314888","1.7806796260572786","1.8582413249211356","1.7177253596946267","1.3277123612928237","1.9063465652483953","1.636407649479545","1.707436399217221","1.729682323133892","1.921686746987952","1.8998167379352473","1.9149063491113636","1.9570632190724708","1.9603097773475315","1.9659469896436723","2.187390338051234","1.9190778919850278","1.6886107338962035","2.029019700365695","1.5374189996188217","1.57791765906771","1.4438140401388773","1.4924096643147315","1.569678407350689","1.448105996262952","1.3494469829610967","1.537036257211437","1.387020847343645","1.498956692075118","1.493367225355469","1.4080025455413254","1.4286854497565649","1.4088441890166028","1.421858055187372","1.3545277080594398","1.4505355519544683","1.5087241876100528","1.4783484390735147","1.4082253160505682","1.6247072599531616","1.5489467162329618","1.7076338448217807","1.6238817580707894","1.732637024744985","1.6071862102452052","1.6404581634634052","1.611165523996082","1.5732737690589491","1.7000786163522013","1.7371275013196412","1.6380730832606378","1.619355149645766","1.7516543402101985","1.563562202583277","1.5768081876499682","1.543480377836206","1.7607003891050583","1.420159334949775","1.675977653631285","1.970563191825812","2.048549437537004","2.0144996434513907","1.955671447196871","1.922508133688258","1.9360414866032842","1.9197927094988516","1.6158818097876269","2.0460358056265986","1.717393961618384","1.434225645827127","1.452580018579512","1.6823773090417211","1.5648919884334072","1.4447664507330378","1.5123352483947279","1.4754939697202976","1.3748313090418354","1.4849384811200679","1.5785890562505318","1.4566787723989303","1.3154728483195637","1.551841065943272","1.301329101368776","1.4988177774215525","1.46577202651969","1.5074780406742105","1.3780156574532674","1.3465739821251241","1.534404219611604","1.6959007655780598","1.6485629145438816","1.6568864342423197","1.6435264681352109","1.599534680820125","1.5538724651844613","1.6574585635359116","1.6021619534793938","1.6262908985619149","1.594356942699778","1.396042940355269","1.7555771096023278","1.3762139475867454","1.375968992248062","1.6653527788726843","1.7175666980151463","1.7545546315435274","1.6572965045221217","1.8430034129692834","1.6715116279069766","1.8002392344497606","2.013781632410598","2.162256673271943","1.905261317951407","1.8363249881908361","1.8712130212664844","1.9570744397800508","1.833294034425843","1.995841995841996","2.1135122298741393","1.5079834417504436","1.3742926434923202","1.4619391698874138","1.5437032051821318","1.5948763029009168","1.5875021054404581","1.6956355446007394","1.4859658778205835","1.5843867441065937","1.4710869933864676","1.483796937443121","1.4382166114018617","1.4334908304636822","1.4092334563931563","1.535356733014127","1.49028335254143","1.4609811141465732","1.3650374284456186","1.3516215459671292","1.507001028399652","1.5793251974156497","1.740673252133883","1.5675202025119268","1.6544918001064293","1.8888236445488353","1.6451177151678888","1.5815502129951524","1.5393441055550243","1.7208318993067506","1.5976157905022474","1.7501566944698905","1.948114572282766","1.834862385321101","1.7845052713028338","1.7767234701781562","1.6153359606870044","1.3923564432494717","1.7214097338767682","1.7376194613379672","1.9252164659217335","2.014031692270473","1.8821554876221305","1.9143606870229006","1.9592845375382442","1.8884838343393293","1.658335783593061","2.237069736920599","1.9064021855327236","1.9440855162692352","1.9012968722492811","1.5805393430750225","1.4583867932597725","1.4595123611761203","1.5076008208048912","1.5310474240873422","1.6016184776194893","1.4901226158038148","1.4826326179175942","1.5819161117943934","1.4805753574893492","1.5141278861820928","1.5057052111516291","1.5073777989897785","1.4831264623071736","1.4940875679130712","1.470002390247789","1.4258630223556361","1.4363939369891279","1.457900623102732","1.474435196195006","1.7918710241344147","1.8339398582647004","1.5926523034833162","1.625066900209215","1.6073703812604134","1.732827725243604","1.7130620985010707","1.8413597733711047","1.6196673897324658","1.7418381744757456","1.9181275190598746","1.8096063143709693","2.0225938532879484","1.8553241882956675","1.9039653645577093","1.7782168436651025","1.727503415967207","1.8385958030986467","1.875061679660515","1.9347273793238227","2.0187935738102456","1.7574066377723685","2.1537013063434154","1.9243067263531188","2.011309974931499","1.9436519258202567","2.0704426463588765","2.0654881234432905","2.061480628145274","2.154046997389034","1.6689315440801766","1.6005743485789097","1.5938107719624588","1.442327908834784","1.5713921685211925","1.5533486121721416","1.6136566308548133","1.538527105352881","1.6159131393672068","1.6248780280853592","1.5364354697102722","1.3792276325257857","1.570139523790595","1.4440721238232008","1.5685328185328185","1.8161452916233298","1.5564667011663547","1.529735990733714","1.4989463639616716","1.6174121405750796","1.7022308438409313","1.5822936086811032","1.8526665689006208","1.687847498014297","1.6875961681639948","1.8548426564870553","1.5816029497380166","1.6210090658257785","1.6924704298490238","1.6991940965142247","1.906944986344128","1.8519425799813825","1.4967304432065875","1.8478580531320459","1.9613554714049908","1.729490022172949","1.3766359670382937","1.7889174383090123","1.8884411864653623","1.8799676360001905","2.05761316872428","1.9169329073482428","1.9972818058263901","1.8229317851959363","2.0223907547851208","1.6340254837187353","2.1252394636015324","2.0485719375334006","2.0355487769108933","1.8983250073464588","1.6241793844317503","1.3879485443466486","1.6031894138603782","1.7462960590922676","1.5658724448770578","1.547331383271864","1.5371585856447174","1.5827766668084924","1.7058296729071603","1.549277985938618","1.6041931385006352","1.5200478755236386","1.4073308420131987","1.4461830251303935","1.5749601275917064","1.5695695695695695","1.7736587704230415","1.6725737724503205","1.4802697203048318","1.4831694251219318","1.6613261030317967","1.6209785356664848","1.671578337117735","1.6278067697610956","1.7534588777863185","1.7552965601849668","1.6275659824046922","1.6943425371693375","1.6281357599606492","1.7955734792836913","1.913922082969008","1.44","1.9081516634534577","2.1123309155067633","1.430050791459145","2.0849686028257457","1.864019078210931","1.8898567842905656","1.9386419812921047","1.7977962497583606","2.001380262249828","2.070935491549631","2.043709391612522","2.1191429244172357","1.917086029235562","1.9072286319755123","1.9881913483552234","2.2342385168459207","1.9922490008477654","2.053870078047063","1.6306408797876375","1.7699864498644986","1.5835579514824796","1.5678922926164203","1.5056515248453828","1.6522590810373463","1.6723679209426074","1.6458307025297807","1.6009172364006965","1.5656565656565657","1.4837625979843225","1.4738598442714126","1.5778778340040642","1.457122382355283","1.8032981373828452","1.5627504407757655","1.4056464779198026","1.6323465475672898","1.3765311415233612","1.529941431929559","1.8371303926320894","1.7370455546313062","1.74025600460233","1.6627645850255626","1.7504316132745061","1.6094999754649393","1.6760317767874442","1.6623797275412022","1.8173823831159313","1.718213058419244","2.0464979974601936","1.8235322495055237","2.001569858712716","1.7894480914174566","1.7679973668124325","1.8152539891670327","1.9747427958457262","1.8070235254006135","1.4008568815289077","1.9076893052302888","2.07856368237137","2.1212121212121215","2.3529411764705883","2.0893027698185294","2.042049299178347","1.9652974504249292","1.8396007428040855","2.168307548054383","2.0306672192291755","2.071201296752116","1.572554868953761","1.665533650577838","1.5616955551741891","1.5485407980941037","1.6850594227504245","1.6200856694516306","1.6419243693904462","1.601423487544484","1.5749357813618563","1.5356239008278643","1.567798300554514","1.5229839351041834","1.3990171211160431","1.6206814767965847","1.5806195393169182","1.5292845990632131","1.5590820506701666","1.6224188790560472","1.4098650385604115","1.519829019235336","1.6233766233766231","1.742483404919953","1.6498216409036859","1.7994733248805228","1.7812939863126729","1.763625821414766","1.8067288441818448","1.6678752719361856","1.7524271844660193","1.7272505489143695","1.891747313135243","1.4333124909816748","1.6164477218342532","1.8137325464229166","1.68572266197596","1.8810916179337234","1.8844341890202863","1.866313049457296","1.8469402517239715","1.4055255023183926","2.058718224131758","1.8843481333176304","2.099565812169155","2.0119662130455183","2.0624168380307246","1.6695281510863773","2.1986627311607734","2.1181384248210025","1.7580626382582374","1.9505543368708127","1.5550592102490624","1.601355644990468","1.5864848640768374","1.6103939788924861","1.517921680343552","1.6878886585726978","1.5648726168381981","1.7764775714406853","1.476820341594966","1.7666201766620175","1.5350877192982455","1.817599487549043","1.5671224114495883","1.6289773864318593","1.4528519683158858","1.6592392169345853","1.6199130778348478","1.6774761790375532","1.5833666533386648","1.8177440712651978","1.7298864460014496","1.766264350897851","1.7698259187620888","1.9261637239165328","1.7290500049120738","1.7591470802035376","1.7509354312577952","1.8697136073601424","1.8398164962247923","1.8840007891102781","1.8934911242603552","2.0324807935427405","1.9056438249342043","1.9538363108420689","1.467772814294831","1.99017199017199","1.996133397776704","1.447705337797912","1.9573558696391276","2.071178529754959","2.1097539594412953","1.9706198495163023","2.2586412395709177","2.1396802500300516","1.677051184999709","2.0243161094224926","2.2677611764011103","2.201443957864836","2.480683204554697","2.076923076923077","1.6166085254828555","1.7445562205526552","1.6799628550926513","1.6374665931362151","1.8703346473203053","1.7745479127936454","1.802708254726869","1.798092677393606","1.6446527481891775","1.658255227108868","1.6336102388807185","1.6354954237962596","1.7325650705344726","1.651807037096004","1.4631825211150324","1.6150901260169086","1.6551779416479642","1.7127642664123353","1.487076596246902","1.750319693094629","1.9272993413027568","1.782488829736667","1.764008301215535","1.8695652173913044","1.8075441183465726","1.9751997255305593","1.7865812214778134","1.8615588105618968","1.910828025477707","1.7358130662851694","1.9898575223375996","1.7699115044247788","1.8948388660043614","1.9460500963391136","2.0320494256202335","1.860963608905344","1.9883325230918811","1.946063419934802","2.134825895289514","1.5011773940345368","1.97644831055092","2.123320537428023","2.1002470878926935","2.42765467974331","2.161875589066918","2.295474977524723","2.0788658565642124","2.4416581678565","2.3037593984962403","2.3203463203463204","1.7796432318992657","1.9430542120536651","1.8796351547182677","1.8462316641375824","1.760533648568775","1.8398450656786796","1.54256897063186","1.5712777191129883","1.7016593294954283","1.7292406561812954","1.7830075787794177","1.543333600577247","1.7313432835820894","1.7529281418170308","1.7753623188405798","1.5945148688511521","1.651730096853273","1.608568334068755","1.625657287360013","1.7337851682559697","1.8044967673453631","1.8584841738457072","1.839587932303164","1.9468418987838367","1.9097387173396676","1.7374240176135547","1.923266109198229","1.7509441365442149","1.8115585310623215","1.8139825819179136","1.4923936067783554","2.0661562622693364","2.3022577935872732","1.9802471586679238","1.3899120868326702","2.002605800318487","2.178691807923404","1.7448094356175066","1.855080887338952","2.1958802953750483","2.406910932380101","2.1988643228222786","2.20783724424922","1.7620355990921037","2.217941983307068","2.1839957729114072","2.123719692147445","2.316764953664701","2.0163197729422895","2.3434296092331124","1.6987206642379058","1.5784114052953158","1.7660695468914647","1.6961431919880674","1.7217748843584033","1.6588379670771445","1.684916390798744","2.1258503401360542","1.7896616221730999","1.941128998003653","1.6396712678528687","1.7917444678399748","1.4460333945833665","1.660538488909975","1.6904091107495733","1.680438582552042","1.6172506738544474","1.590646995665487","1.6123869728734899","1.666867011259366","1.8110041944238837","1.8177423253565386","1.8594126617147915","1.953239162201656","1.9152640742890308","1.7884567748327966","1.922795373578644","1.8009618215722838","1.8106190359677026","1.7355252374294943","2.1185185185185187","1.8586994034413056","2.11733568592854","2.0424955229659743","1.9962814365397787","1.9318291856299024","1.9196132334818465","2.0624408703878903","2.0284955324800773","1.9781916433465212","2.1975425330812857","2.1609809396624984","1.7122473246135552","2.2384949693397633","2.237640936686904","2.0881948184048347","2.0815413727851366","2.013422818791946","2.0790612895876053","1.7250609719826302","1.7439891635624787","1.5118056735179208","1.7147975941645694","1.5774074545223256","1.7582972279476718","1.6766366163956528","1.6243354991139987","1.806225714163713","1.6557128412537918","1.6164337430543863","1.5686744102502692","1.7525608194622277","1.5251591209319082","1.7637033807617613","1.6667999040690704","1.620777973427245","1.662368577663162","1.6697291683310695","1.8075407094796354","1.6215131446919526","1.6494542606822964","1.7584826534502478","1.827776445190693","1.8829692596619552","2.0201535508637236","1.7470639619528292","1.7717586524925975","1.8680133359482252","1.7013676740141936","1.77799135031235","1.3954392959595467","1.935894922564203","1.4454859398125308","1.455090399303877","2.145335483555686","2.1543899875800134","1.9585030056234247","2.055293717506438","1.9100580270793037","1.9612602553522016","2.3072360616844603","2.1129326047358834","1.7511019865950124","2.115172293567319","2.4987928536938675","2.3867194423111004","2.0533635766728344","2.028603913589851","1.7145255080630657","2.1550162984425936","1.5311044926381139","1.4823213235911648","2.034143027008663","1.7024363186414644","1.7092577779648885","1.7439891635624787","1.7081607379254387","1.8335744065345019","1.5845516775120427","1.5694403316553154","1.7828007481395995","1.9261130407325546","1.717815862893583","2.0141945204393163","1.6490975882446894","1.682749820559853","1.7046809186998328","1.701195219123506","1.6179811102697963","1.8030182684670375","1.868844583233245","1.8821603927986905","1.6856319939562774","1.9957882645735618","1.7910302083841687","1.813433918468011","1.929587000677048","1.883076331844166","1.8116290245074482","1.8539298433917157","2.136420889448697","1.7501833292593498","2.108681952591013","2.025658338960162","2.0480294373971146","1.8074637045698136","1.8202225258637517","2.047764729102931","2.0640956002172732","2.2487874185488215","2.478040835320807","2.287445784564197","1.7632537909956507","2.176949941792782","2.425812529439473","2.2803648583773404","2.256496429214427","2.203809195005466","2.311074144486692","2.3686607956270875","1.7442104820745596","1.7236305545045614","1.7676341545730678","1.7834502577973124","1.7062818336162986","1.7034620111021654","1.8738130407258917","1.8646438106538967","1.9510737309482136","1.90238115413948","1.683314099247881","1.6777587374965128","2.004647315978102","1.7148554336989035","1.7375054669794443","1.7177177177177176","1.7725845554628195","1.8650053569302807","1.6928075735087649","1.6785330734656538","1.9553072625698324","1.9328832985284834","1.8136609624104139","1.848069253963622","1.9479900933511145","1.9184057899172162","1.8841624609468879","1.9124605678233437","2.076191395876587","1.8723321691889794","2.2702965483714146","1.7419916771508757","2.01257248672092","2.021093941623743","2.219256623171214","1.8826297984997793","2.1750714527927144","1.9712743396953922","2.3761130468447544","2.4005115844360274","1.8149466192170818","2.261261795952282","2.242312496282638","2.1942467203953173","2.31433506044905","2.11730348016549","1.7824143070044711","2.3774495380450773","2.3613721804511276","2.2414823670053794","1.6100405679513183","1.774972464627637","1.7033598773580887","1.6891033782067564","1.9029093369418133","1.9553308048883271","1.7590595796862447","1.6526835026771787","1.8049783822356547","1.852086233810066","1.66270783847981","1.8624066789756761","1.9651880965749577","1.650112143543736","1.8444426662398976","1.5244632452709712","1.8025171715567556","1.7642879696874014","1.589818816159854","1.6237513431766624","1.8448051635277685","1.8657632444640841","1.8920880716186788","1.8120965814009085","2.095163501076953","2.1028951486697967","1.8861437202220148","1.7325633051976899","2.0572929332230925","1.8018905080740448","2.2298872910998835","2.020494972931168","2.218274355404043","2.308585809698964","2.350717332299341","2.258351452856296","2.253988388544665","2.1294301938515763","1.9671182681645052","2.168298981630366","2.1708764986613898","2.2439551208975823","1.8137632624029398","2.0072450858126967","2.291010842952081","1.7452109531084732","2.3018801616587594","1.9822761194029852","2.3990951303726633","2.1297759054473113","1.7656843092932997","1.9267414778742324","1.7922658457386245","1.5592077538980194","1.8836403124086372","1.9840596913684925","1.837906828334397","1.8533509437177793","1.8052841729674622","1.6438471940500337","1.5889450838278047","1.8462276214833757","1.6551009013320572","1.5838904807386183","2.0370885120914903","1.9476616038151724","1.6438574791525356","1.6044061302681993","1.7365556978233034","1.7691726633006004","1.7808153246378207","1.8644727874598384","1.903274608364648","1.8649363133862051","1.856814701378254","2.1654799901792288","1.7867380087903686","1.9811548683256825","2.1203830369357046","1.939864209505335","2.0756841435355167","2.0161869642258514","1.9784172661870503","2.4606636929562278","2.0059689808699055","1.8844037590689973","1.8152927580893683","2.194326862258551","2.3369273552227154","2.11070110701107","2.4588692790906372","2.3570440743190426","2.482668720744208","2.5020801141091167","2.3297384257879994","1.6895085066162572","2.341117351463198","2.250920282421097","2.2050267628578077","2.2768124625524266","1.8072797905582298","1.6456343792633017","1.6823773090417211","1.6701372657345628","1.7425709234784073","1.7284473628468546","1.797192151556157","1.6826411075612353","1.8167154802835435","1.9053708439897696","1.7338482581060424","1.660501769057575","1.7405817835002384","1.5935463360356066","1.843244109632954","1.6515078985160365","1.7482238365131315","1.8777658174859466","1.9237705903571","1.7742257742257743","1.9260852561595618","1.9199922228163124","1.840640562445074","1.7845915751801518","2.0573108008817047","1.8262419891100081","1.9475473530840213","1.7937219730941705","2.1412653812615057","1.9033746054867688","2.2880411071792137","2.0904229460379193","1.5427563914193358","1.7638882231702055","1.7181800729506622","2.1769765294717915","2.1318292624635533","2.459016393442623","2.291502753737215","2.1035042020936747","2.1929042610090925","1.7210787792760824","2.2042178005480757","2.243328283416851","1.7066666666666668","1.7085904129093499","2.4442888811107224","2.417661527386166","1.9765177886600978","1.7779885023410182","1.8416596104995766","1.870503597122302","1.7977717758271439","1.7813215709559758","1.834392730685551","1.8780539621839814","1.8869521069554918","1.6761663500105555","1.8216318785578747","1.697792869269949","1.7865669266274073","1.89239478997585","1.8206338503034392","1.889435971338217","1.9187540141297366","2.1117764471057883","1.978975870032651","2.0046322178739717","1.7500596611248112","1.8495585826708745","1.925355450236967","2.1810038459666035","2.50202544917314","1.8673121572889393","1.9390853001664872","2.170936827694113","1.9622307465329007","2.143690453042971","1.9593543368339166","1.8811354514241503","2.551778812803488","1.8111508150178666","2.1606296133352885","2.2874701263229773","2.3585838607594938","2.2087083434687425","2.1806103783575623","2.2612332231083445","2.325248281130634","2.2206060606060607","2.280380457257636","2.7496042680424457","2.487052872455739","2.69219440353461","2.3288768406136406","1.7661705947072788","2.2646431112165044","2.649444277560829","2.6894005976445774","2.551498127340824","1.8751856094353232","2.19668377083245","1.9563008130081299","1.9132816847151477","1.87076974818178","1.8853535567512605","1.7696486165336953","1.9556160190459995","1.980407060214509","1.9600340136054422","1.911900276564191","1.7160498777113988","1.8392262565403519","1.6955930576661602","1.8498627521183912","2.0217356560652067","1.8186168939937783","1.9101479079332437","1.9250822170530197","1.7617786339192552","2.099068170671898","2.073856688676938","1.9307814838055704","2.0064321029136467","1.8838981832126935","2.061211742660837","2.056604680217193","2.0479953739398615","2.129607323536497","2.142046295839297","2.1187055579741694","2.332134875133612","2.153649921507064","1.8067935437244036","2.4481368596991446","2.262709374081693","2.074647607702998","2.4291697462429167","2.1152443471918305","2.5859535703790772","2.3290534487906838","2.3805386620330147","2.265448938441466","2.3169218038891186","2.4288647697271926","2.3187887458273724","2.5809896760412956","1.818071998067166","2.344304996448023","2.5353457018433456","1.894525532181841","1.9998294388538291","1.91505660056175","1.8796992481203008","1.784807985112502","1.9114817190506734","2.0824533243220413","1.9431737104964955","1.963019250253293","2.2020835097823324","1.7974503127721908","1.9441456515676667","1.998001998001998","1.9227719632096418","2.024065662602598","1.8679409209383144","1.6696481812760882","1.8143643782434735","1.8795946751440493","1.7815584624026966","1.8172021943573666","2.1960028894774863","2.018069331238338","2.139917695473251","2.1053127354935945","2.104381252772165","1.9223357101560996","2.150795171488791","2.112918284113803","1.995928702646343","1.9457319428350712","2.083333333333333","2.11792200204489","1.784764207980653","2.067464635473341","1.8029775715390564","2.2675627326790115","2.1778144249890867","1.3687286897223574","2.3376623376623376","2.2561733878131105","1.6147702280356522","2.218399667833205","2.415799682595662","2.4518284316649765","2.703187608396627","2.3927344705128952","2.6366366366366365","2.4804973183812775","2.251963922025022","2.130549189372719","2.045366836756571","1.7999322378451637","2.039529015979815","1.707182085231385","1.8075087630389797","1.8347855227882035","2.0784630424618524","1.7855628127915852","2.1644103042906253","1.7971911449654845","1.8294622971683105","2.0017440938639606","1.6869690655553775","2.048350601405264","2.0051515751931843","1.7270194986072425","1.7933288168014987","1.9152985962407802","2.0077127976782094","1.9254383810599733","2.0849802371541504","2.037046040157519","1.8631436314363143","1.8623599592608757","1.8852258852258854","1.9388299161456062","1.97039600153787","2.0725892770263696","2.1172396735097703","2.2263717322608447","2.1626382229180936","2.2672295214153584","2.466802606057592","2.0678083205843163","2.3807214895267648","2.4118282738972394","2.317435946646195","2.055028000973947","2.3521340716420838","1.734070068187162","2.6572446417099806","2.402260951483749","2.0969384698340425","2.57253612122636","2.518282613824015","2.4184149184149186","2.2802457466918713","2.29953179636105","2.359271523178808","1.968202686617922","1.922590437642297","1.9354563669693483","2.176029803987977","2.031660035554051","1.8068456546634433","1.9588803985308396","2.158001009591116","2.0089571337172103","1.9587804462612843","1.7496904086605682","1.9037756890234188","1.9789390025829527","1.8915359750987668","1.8216836529973517","1.5766574861294056","1.7529784588230575","1.9306088538988013","1.7665740373163954","1.6112224448897796","2.0267649340574088","2.1358560491539476","1.9636434334597064","1.9831932773109244","2.004008016032064","1.8059906029757242","1.9946485040136221","2.1091690264622596","2.1692502681095838","2.021038277977988","1.5259409969481181","1.4396456256921373","2.3234425674040367","2.4578993478049256","2.3024207464379036","2.1552351827581187","2.417743114794053","2.3484119345524546","2.2485670895997645","2.486904587066138","2.086508029539327","2.9551730215616003","2.2086466165413534","1.8376815087063927","1.734338747099768","2.286076240930554","2.660727185167349","2.2548725637181413","2.3930906255622864","1.8107580330197053","1.7078990330277533","1.772827764568473","1.9146863218536876","1.9029739301105089","1.9983979088494457","1.8351333108336148","1.9441989647771747","1.958285544369398","2.081828610273187","2.1345490179370286","1.3761759471141621","1.4771237650669822","1.305664185694462","1.4071979924398843","1.5148628048780488","1.3091992645660304","1.277488242023643","1.6777451105713919","1.343011543503981","1.5422362425517","1.4773704369577112","1.4771221451399175","1.4771569626204843","1.433300876338851","1.5428637717025637","1.4661727432248002","1.597393932257938","1.4095629170450508","1.5618988997460952","1.554364176341266","1.641365492794945","1.3496068536556742","1.6654373228774408","1.688621350115311","1.7961702801076118","1.6284633788685652","1.6470496834090822","1.4609175034455602","1.2282338308457712","1.7180513061896916","1.8036833111828365","1.9804835840984474","1.8549188473004308","1.9883539269990056","1.819141787462801","1.7998075072184792","1.7358386039425695","1.7866329919087038","1.918042929893865","1.9491605804799392","1.4218009478672986","1.5210149072921224","1.57384166610135","1.4540781820641147","1.5561959654178674","1.4000949216896061","1.6208002701333781","1.5593220338983051","1.3980318968442484","1.5445972893500524","1.3428371412206452","1.4827487881380097","1.2910648088968426","1.2936860397760186","1.5066573230553608","1.3566571966674115","1.2518222729289472","1.425284417742554","1.316208808719485","1.5496983169260081","1.5034923641529536","1.3312633417426742","1.4422702112730956","1.3941352856419642","1.4734437464306112","1.554543017957652","1.47588611272516","1.6700895105978997","1.6905815905968555","1.5225687083220907","2.0316560359083393","1.6894577834313882","1.480282178790332","1.7737656887199589","1.7985051385861102","1.4727829707014373","1.0450005784136043","1.7079053843759726","1.144191476941039","1.596641952061512","1.6455166643424908","1.8737055055151486","1.7794725135049254","1.8068535825545171","1.9326158165652783","1.786838409762239","1.9217248652449028","1.5669651362164223","1.7491608755259302","1.4472123368920522","1.4367718487823105","1.4140252359527756","1.295736824437731","1.4236572323830932","1.5640541931058138","1.61587865537032","1.3668504922691747","1.5216874426819742","1.3574814966404039","1.5779159345857547","1.3994910941475827","1.30189221098312","1.4578471178746122","1.4049140205333588","1.3595262353540498","1.4666238767650834","1.1677621083530088","1.3796399553927035","1.2559219102731234","1.3431833445265278","1.490066225165563","1.545916012921089","1.607135840308067","1.4581499483332696","1.3729713098992384","1.5434510784620195","1.6137855579868707","1.5351550506601168","1.41387165187338","1.5113150815002374","1.72562893081761","1.6497412552040778","1.7780406071358172","1.2064710721140663","1.8247308423052566","1.8324401008827238","1.719109746738296","1.2231456797867337","1.5826999921648515","1.0995747289375886","1.3889558717144925","1.882330684827847","1.3173261082823375","1.7463279268934502","1.693950177935943","1.6166500734840943","1.77989707756952","1.7616881231245767","1.924860853432282","1.967136150234742","1.428232984736183","1.6041872004894129","1.3850321706738908","1.3497711402893322","1.5738871591336776","1.3572799561283246","1.2157022548220593","1.273562597121816","1.3116191246881113","1.2981744421906694","1.3484513628647383","1.321277340889554","1.3664320588421788","1.223348479552604","1.4792428821377446","1.4820691843859093","1.457008658976899","1.4696526275607584","1.4035087719298245","1.3701249044098904","1.574530335694487","1.5117778038204617","1.4060982715090309","1.5170570664989782","1.4925373134328357","1.5547047221255366","1.662807030864432","1.5036428460703766","1.4054895853611056","1.4434112749484496","1.5542857142857143","1.2157816299317594","1.4804898216324762","1.493062341215556","1.1618869977461723","1.7945823927765236","1.447404451746665","1.8131048464216042","1.7037647705413574","1.990939891126423","1.7943766778128385","1.3457408732999283","2.1526233618772768","1.8517632422603951","1.9687485067138146","1.9177176326106466","2.0628967109059433","1.5000236596791747","1.7079300074460162","1.7502807937102212","1.8433799784714748","1.4123053012129607","1.3894523326572008","1.1645569620253164","1.2571006016604485","1.460300210554914","1.462156935916138","1.4402451481103167","1.5809613319011813","1.4956180421615404","1.4719499345445257","1.2172464603754243","1.499193471866401","1.4575311077872897","1.382547335483253","1.2878691039243257","1.4535812408152833","1.3205205714831196","1.3926511361101372","1.460202328688681","1.4351496546431313","1.713111894887795","1.5657043697744126","1.4013895468182536","1.5905336355603366","1.5978025379139584","1.4204214693212247","1.4113518462007935","1.5698648280160492","1.7143985779182302","1.9070413835701052","1.5851164254247954","1.6991150442477878","1.3922565506452873","1.663757998836533","1.740080371425227","1.642157818777548","1.7671678809486902","1.74333949864232","1.2164315417201041","1.227453736237995","1.8430552916587497","2.0841245727307256","1.7562757587111277","1.8291226897177517","1.7401937729282286","1.8267671468091198","1.8878828742053555","1.7659835678534328","1.923346904394216","1.6722067702326844","1.4461757816478258","1.331431288635283","1.3566352725170854","1.4025956468838718","1.4285231839519097","1.4973804292715904","1.3087305655219545","1.3137794072716162","1.3367174280879865","1.586090715489018","1.6281310211946052","1.398892410128365","1.505650167117619","1.660769500494087","1.7307753491775637","1.858449687048628","1.7856570384381112","1.452513966480447","1.5179055454574444","1.7704661182922052","1.767951507615791","1.5866947046453834","1.5026621968053637","1.6285245645551825","1.685985247629083","1.6831875607385811","1.7332035053554042","1.6110157590887815","1.7318197667661077","1.89979366994978","1.6766882516188715","1.2970873786407768","1.9030939871570345","1.7385502923747107","1.8263212106806117","1.6810328015913256","1.2036535335552287","2.211331580205594","1.928438661710037","1.8232415315228865","1.8716577540106951","2.0658582178977136","1.4048410061699097","2.126349687440803","1.907382805086354","1.4091933087283708","1.6156302836746195","1.9562995766217335","1.3566532734578114","1.5516773054461497","1.5402439855516936","1.5505443759058888","1.6353174736700429","1.7700936503035916","1.6863291741746846","1.7716136869811703","1.4274089645351598","1.5845129903037265","1.4836492326538946","1.6578796925617736","1.559814095626154","1.6108452950558214","1.5733765614570419","1.4696935736928052","1.45652728199898","1.6735464465137115","1.4370915551043715","1.5699636965798358","1.5960809102402025","1.9682146862070298","1.5596366046711116","1.608059304314769","1.6724224903961817","1.66103931385105","1.8324100259559137","1.6497263487099296","1.7474434823492535","1.6985302671888938","1.67427701674277","1.698438848356476","1.954875292438241","1.8361472029876293","1.6257323555659022","2.0709943126103156","1.9954543703532495","1.952362358453729","1.1647639617402037","1.8266614846482705","1.9525801952580195","1.8963574915508825","1.9625825385179752","1.9541810937722337","1.9945861233793987","2.1865750023870905","1.3935630658387448","1.6849119466920515","1.82052137444598","1.968984962406015","1.4433382556090124","1.625297517851071","1.6609606454018508","1.6498407751202655","1.626949301289408","1.488135593220339","1.6179576265413176","1.4871655575173164","1.9085513892635555","1.8216293085934854","1.9739519739519742","1.7449961996453003","1.7422716665068252","1.6869160368634204","1.6661346951803384","1.6321985364301623","1.5434761767807497","1.6883697178603343","1.6338715372516288","1.5056100757599975","1.5775968574777457","1.842467098801807","1.6476453862034044","1.682795072092029","1.6119657457279033","1.7251360426073867","1.5597387629658086","1.6188030196902483","1.7988394584139267","1.4942171854381743","1.7423483154729782","1.801945463243502","1.6961510418665338","1.9157088122605364","1.800720288115246","1.8101817901115442","2.1044427123928293","1.8334848065752558","1.152011171017416","1.946119508183883","1.9659086476576821","1.9504805188656913","1.7653566790129396","1.7710188170749315","1.806537946855286","2.275600505689001","1.8893705239351677","2.10394850610049","2.0217505868825754","1.8706772501508613","2.2002927428112753","1.6312826426100522","1.423991901467859","1.5871939225395104","1.9454074248594795","1.5861718352821557","1.5806538773304513","1.6412940057088488","1.691881669593408","1.5274914670001014","1.483274797967743","1.650522559265868","1.5908297081891214","1.4177215189873418","1.5291698792084296","1.513745319550677","1.4646882761255813","1.591024340770791","1.4751055932420325","1.4745816229870539","1.2916013939064548","1.6566976231701558","1.5487243504720294","1.5732354778263586","1.8533409917671835","1.713333862140081","1.8181113350907119","1.6713515156119425","1.741018555073036","1.5788668858475419","1.6693779533658688","1.7517459582513408","1.9445832212443794","1.7578350873135191","1.1489345184955169","2.073050345508391","1.5914703461252007","1.6711674689836014","1.685985247629083","2.0076856717120224","1.8504811250925242","2.174227450224172","1.7804154302670623","2.057240820991476","1.4397526331046477","1.4191562033963534","1.410133843212237","2.162394386366891","1.8935516888433983","2.090133982947625","2.0909566126502876","1.6119241923517906","1.5202189115232594","1.8426480035162458","1.6195016397876727","1.7091707481844285","1.301995265471762","1.5946866255352146","1.5024814739275274","1.7703024125042475","1.6785350966429298","1.5564077980185362","1.6733092933510467","1.5399758684193814","1.6127480842604762","1.5572930017944118","1.6304520222045995","1.6131593153599442","1.3877836839927427","1.5158783459656529","1.334695702152117","1.6004877677006326","1.548255265639736","1.77788039713692","1.6090975902216378","1.7647285477594112","1.532642527875182","1.5791954745443118","1.5491391541086699","1.5283842794759825","1.6276269277085031","1.4557670772676372","1.755689372018456","1.864909644357107","1.5719982963565262","1.533079130468965","1.534496895865058","1.0597003338250135","1.4772120009161005","1.1026796300687691","1.824013602813309","1.9391507856904047","1.7328247869284739","2.072732365435787","2.095851559871172","1.9661985241609141","1.929807965187778","1.9560258214823083","2.188017996684821","2.1257913951661354","1.7556931961067386","1.5129975629569457","1.743652493117161","1.4841229410765835","1.3529968881071572","1.5930216893439308","1.9279639480906718","1.6321723035503954","1.4147606696533837","1.638183840631004","1.774827259178973","1.7349458620907996","1.7155842908811572","1.728512527751348","1.7115070859592438","2.0539682539682538","1.5147633382437713","1.7573911940109124","1.9024668653687615","1.801258021475316","1.6850353570746002","1.861415137968244","1.7342395125380832","1.76269607081845","1.803291294986158","1.8486605044649849","1.6735242918183255","1.8041136902678951","1.8557018557018559","1.7537692367783766","1.8976962124170247","2.2201190898694745","2.2891006274692076","1.9750195160031225","2.1098866622220482","1.9362186788154898","1.9216641534238101","2.005129400792726","1.816840715866299","2.180372785860379","1.914353809487199","2.5334035726258324","2.246828143021915","1.9074598677998111","2.1966133584195675","2.049648088263268","1.9565426401307566","1.4347408829174664","2.618161774838087","2.2303956240863867","2.0384670727612835","1.7171717171717171","1.7730737816498774","1.7061708214139764","1.5544393157751832","1.5868161739721374","1.792248272123594","1.627535591723013","1.761199114290581","1.8675433839479394","2.107442223504259","1.895991332611051","1.5922959572845157","1.5654331986382004","1.6171732959076264","1.9141198239009762","1.722497145032356","1.9467569877496755","1.5242242787152966","1.7510347023241006","1.5440335493709494","1.6687509770204785","1.6406373244991324","1.971624077009317","1.4845069316262813","1.7903795912094667","1.842942500193994","1.8124631413406724","1.7550045050338858","1.689919434073492","1.99181446111869","1.0381147230431158","2.388083228247163","1.493989028518072","2.2755708476696905","2.1777743455093055","1.2262535035814388","2.0932038834951454","2.055771211280995","2.28957274244247","2.2146507666098807","2.129970718806083","2.498107494322483","1.8956247682610308","2.0225039168209658","2.0349656922643105","2.158036092918061","2.150028414472438","1.824150058616647","1.425352889788036","2.223819793913252","1.4553154303767686","1.6307100172186773","1.7349837662337664","1.823882408468748","1.7847466811162287","1.8686834429898935","1.757481169844609","1.779935275080906","1.5611771478885164","1.8738775371895227","1.8337798188544456","1.4365701487761957","1.8573977316171786","1.8088518280949328","1.558977615494523","1.5780864098534175","1.5729979302658812","1.491436269164154","1.8016866854076157","1.5668789808917196","1.7047444829330947","1.5637186086413977","1.9147118222774584","1.7772648586266588","1.9839431835726415","1.588098918083462","1.7186653247658126","1.6808974997128308","1.5969868173258004","1.8817824982682985","2.4045040466043712","1.899560726581978","1.152029491954994","2.101509748880965","1.2232654174295843","1.2029720485906357","2.3066004258339246","2.08727904040404","1.947823366057809","2.1214511041009465","2.060798209623275","1.7375443985792456","1.7458100558659218","1.9196553984455473","2.4295524508643145","1.9201934703748487","2.0445924692385975","2.2423819492905324","1.9553480227637532","2.0373988277979347","1.7034850181546708","1.7769069657455578","1.8304530115553737","2.0119703783856897","1.696292534281361","1.8792768869369831","1.8328840970350404","2.0761596110998584","1.6147635524798154","1.8664581491806622","2.0301307378497317","1.9653436962476907","1.5484117628317455","1.5752081525058668","1.603596136066567","1.599795226211045","1.6901139474186773","1.5581187866428754","2.1410539098200876","1.7550541115236917","1.5512095507382972","1.802084149494633","1.7965468968735416","1.638272507018421","1.8327340215752232","1.902195141004609","2.0859940400170287","1.6907458024209294","1.7473326117210455","1.933506248526291","1.28871011832702","1.6098300734922424","2.5129342202512936","1.8719969248510475","1.8706490880099562","1.8862798369881622","2.239559074677845","2.2933105297936023","2.136285669733354","2.0372593826251983","2.1382133397543943","2.2384174908901615","2.113974934972807","2.1765127959818225","2.060531074521747","1.4727824036193868","2.080685402250153","2.231373300134074","2.001992504388254","1.8325974457579643","1.845416821294828","1.9070523677257638","1.5772978129045445","1.8420337139749863","1.6527528982323316","1.9970840538432848","1.736146159281316","1.8107496368365932","1.9665115647182694","1.6438079870915692","1.7098099149871049","1.6539966283914884","1.8112701252236136","1.5530411080472883","1.8618121638394702","1.5898200742550692","1.960909351783949","1.6820057124722312","1.5717913278261708","1.8086867914915297","1.5655577299412915","1.752807230329825","1.8556862132281127","1.6950467398471742","1.9244253992987923","1.6759561791274264","1.7388542617809362","2.0653368933563687","1.6887159533073932","1.6436426251320784","2.2455492751951396","1.282051282051282","1.85636749783686","1.2279870488825713","2.047182686683564","2.601708468229512","1.7242041396259744","2.3117984143182353","1.2776161647928295","2.0318463970389793","2.3106796116504853","2.13982050070855","2.2164583824569677","2.199498360023153","2.3150161906142768","2.3649132865128277","2.1132259638848216","2.3223048146528686","2.133864774218636","1.4829507887031266","1.7001020061203673","1.6015439832057967","1.6568607560695205","1.8427435655572026","1.7202920102744355","1.8071472163829931","1.5031484866951046","1.804869742891197","1.561549381464206","1.551490514905149","1.7268395638131175","2.2652480909933224","1.7369330177211952","2.287056098816264","1.8916842711734203","1.933109297487598","1.8885320955075828","1.6447263570586172","1.6072341513292434","2.1026910587403145","1.8084160902662392","1.998037291462218","2.0062087698874658","2.2021434717984825","1.9098903653198","2.112232030264817","1.6491461174723512","1.957722338602171","1.8115942028985508","2.181846721343641","2.4100593782745374","2.287531017369727","1.2058570198105083","2.4973064491303676","1.6174074936001863","1.2733479077973382","2.348762603116407","2.1013317236956275","2.262443438914027","2.0910675051140237","2.2537642658482784","1.7884804957048301","2.4877020379479973","2.2327013761909345","2.1518397764322312","2.3023973415618326","2.399351268841824","2.2106999764317696","2.2308578008059876","2.0120148755602174","2.1267183884578738","1.7879389878447085","2.0807875084860825","2.1136556403731976","2.277594588163307","2.388492116965369","2.099496393085613","2.1400712226555876","2.2773347749695905","1.788617886178862","2.011355981137523","1.9733690966567679","1.7402646983965386","1.766195467512902","1.8658725884626348","1.8203729544589622","1.7576616018542366","1.5527260026037533","2.012694969857421","1.7182785453390506","1.992185988936598","1.998578086736709","1.8113558075627973","1.7884219120562965","2.1348747591522157","2.241366166044065","2.0897741948107855","1.9813290266671917","2.111033356659669","2.0844718557264423","1.6802146940998015","2.2766122766122767","2.454555980085678","2.0802891640390677","1.0985610397648151","2.700885795634293","2.1864750898016556","1.2113371751146655","2.28421423813815","2.6910195498091753","2.3434884499497826","2.0042846941204475","2.6139442041728054","2.397163120567376","2.1953896816684964","2.003434459072696","3.0578709216480116","1.9126449682005238","2.5281032111179624","2.4513825218356415","1.949689822073761","2.22710375126732","2.1232946968919886","1.8197837947744755","2.2290284158584313","2.076867987586536","1.8552497451580021","1.7676084899283493","2.471689157116702","2.40833446083074","1.9381086622245005","1.5665713377820145","2.122446381976707","1.9211744056167226","2.172248803827751","2.0955118990576582","2.1669853409815167","2.157814096016343","1.858274731918414","1.8249106687085248","2.100257578759659","2.0043589943177396","2.0122689797991637","1.9124505231806248","1.818324937027708","2.0234375","2.0804004379790393","1.992372947311075","1.9847269062294066","2.0563358423217193","2.2183574879227055","1.9563848212879862","2.2061943148069583","2.557996620064526","2.0707640808065078","2.3540379909101503","2.2165781574694066","1.6002485823040473","2.3000543014506247","1.1751887306405169","2.079368100494861","2.375748360733631","2.391978992599666","2.3409789548356588","2.1418261395911906","2.4852629096911105","1.8592040282753945","2.8999377901134133","2.106110085664253","1.4660600211406773","1.8117901568415358","1.8158324265505985","2.1691752366682557","1.817813218002433","1.955044081028333","1.7033284602046714","2.075368651010377","1.8552005893778045","2.1663219988473403","2.1018978300795865","1.9104420488613894","1.8308241898443482","2.0983251607973","2.170039455262823","2.1426746710946483","1.8472514172877252","1.851792930096408","2.0142330664633374","1.9209904907779691","1.922096136682392","1.9449901768172888","1.9074643335697958","1.913220392034117","1.8442382238928696","1.9751451166777048","2.140566438700205","1.7230721681347552","2.044748535252251","1.9993727458052377","2.0183631470634795","2.4124936871139426","2.111825443210598","1.8722809198259787","2.2959382552428473","2.7408475963975203","2.288258034284822","1.5149712472734482","2.9631928014583253","1.9483054818054037","1.8399442206383638","1.8049504476468616","2.2312964853434445","2.267458035797088","2.378031518354251","2.221378393772546","2.3279634975323584","2.3219963387609597","2.2654174241364844","1.4584323040380047","2.3195999047392237","1.9640928725701945","2.4171828709938055","2.131625321946591","2.2064323111443533","1.7845003399048265","1.898071532304367","1.8803244747649595","2.0450173792731077","2.390451832907076","1.7140538895838264","1.9081521390545828","2.1059695768886617","2.0588703261734285","2.038224649184075","1.9634134661430898","2.1080410797748876","2.167221957797874","2.352266207687894","2.108433734939759","2.1187382865855597","2.21543760764052","1.9344785649133476","2.058687970502381","1.9621611078603471","1.95750961277042","1.9137077600654793","1.8065969928901664","1.8145555512103555","2.176541717049577","1.8839861179970254","2.2290876383403075","1.84406086580427","2.5583588776232022","1.654625961314379","2.258479031190374","1.2218045112781954","1.9809523809523808","2.153379717806196","2.473168455436304","2.355344820939825","2.5719415732518076","2.435356328530539","2.5303160507972886","1.4908863559851873","2.4654410716830553","2.033245001204529","2.2066533218949576","2.235907153008053","2.1656534954407296","1.4517785454205956","1.838008367053014","1.9466376259188674","2.0956766089988825","2.1187725266951865","2.1664651350261988","1.9293147722665227","1.9296100013588804","1.9783133349196098","2.3996746203904555","2.0193420963018456","2.570570954144846","2.3017821277138393","2.4615089145673954","1.9671196426874464","2.051396934105674","2.3533901539244373","2.3751678281439808","1.9873042202303106","2.6987507549508885","2.19643199693075","2.1152726567048323","2.142773046583729","2.509415110291292","1.9938828448642996","2.150158618258724","2.3303685866314523","2.4083728892693177","2.4416838661941664","2.1923458864868994","2.459788299996233","2.6162567992032484","1.3968905374477152","2.094096304767914","2.4540117416829745","1.3015184381778742","2.193152705535285","1.8877531038264208","1.3107080163838503","1.6601675610980269","1.6747257931359831","2.6061548612092937","2.1882151029748282","2.821584647539426","2.8177140933788527","2.5197582519758255","2.6850507982583456","1.7642607132721595","2.786729857819905","1.8343889279849872","2.4276331792751153","1.8587234042553191","2.451691228543486","2.254592373773386","2.477042458744197","2.0884270578647106","2.2654268808114963","2.661687319640129","2.2561492790500424","2.2600013492545368","2.1795395722653588","2.3289850461342665","2.1594044792401976","2.269332231510028","2.2410660205935793","2.1391398742058043","2.2720040730605233","2.0506787905764154","2.3446399189975953","2.6835977482088027","2.281755489878285","2.119071644803229","2.565085694566926","2.3515836383893043","1.9130567071083557","2.3841935358406907","2.1856859001831146","2.430340557275542","2.3013194231359315","2.1929652191000195","2.1242019733023794","1.320769290183054","2.4047239811973116","1.2937156896617912","2.6811510458800414","2.5476711472335105","2.4700482340127583","2.3838654931523067","2.5802973118693675","2.288482747754845","2.2780556423882463","2.1778758514822987","1.4717713312195353","2.5307863861146127","1.522941119410224","2.820154964146494","2.429054688968239","2.7227952792491408","2.456836098079992","2.447651386530843","1.7687701520036851","2.4497910769645506","2.1656832986596637","2.7206526869395184","1.893579476041808","2.038742888106204","2.3255813953488373","2.3406000136677374","2.351824866989732","2.302153409282986","2.1199128896148087","2.1570814083160745","2.1115027234860624","2.7783973235622113","2.6514424614597325","2.219876531362953","2.090637161879644","1.971166113804542","2.18908020226589","1.9854042512508365","2.2364726901480347","2.124074146647333","2.5100869025450034","2.1496000303294536","1.9877499133248586","2.0822811856571226","2.4303953237963394","2.3692307692307693","1.8613507422087512","1.9566789752179377","2.2080299077066865","2.7556716949756503","2.910878726393008","2.450133500863829","2.1957265966237753","1.7321373337457469","2.2805993383926837","2.5344288855456547","2.4805842123565554","2.386430103333983","2.153220234896753","2.5075700227100683","1.4845831747240197","2.210796915167095","1.5099552253024673","2.4174090571640683","2.503012885881153","1.8207414359455654","2.303127354935946","2.425079803706703","2.6815696056797464","2.0049783475977767","2.4069135469061202","2.4338696482137987","2.33791682151424","2.4020870036590325","1.9729693018201575","2.0076933459306248","2.183734939759036","2.281034249356978","2.0561379776800814","2.073482428115016","2.287061221889533","2.407495632841035","2.099060359929925","2.5806040525041416","2.0126307731564173","1.8433622928221076","1.9827310521266388","2.110080081352485","1.8464374245217061","2.016714403421352","1.967529957479706","2.133415784184896","2.599758162031439","2.007547757071159","1.8516393129040896","2.195702195702196","1.9890233934062511","1.9650740321131381","2.248215099498709","3.0621001716336402","3.1542147851363027","2.6181012077663968","2.3504106374657803","2.4659337256116443","2.6097953552540814","2.483634199563579","2.5441147954236962","2.60710474157646","2.746377656061842","2.5743494423791824","1.5045973808860407","2.518928363424578","2.7836335760827904","2.232774759143418","2.7413308341143394","2.507642338555598","2.2351659800161006","2.5906735751295336","2.8183666713954696","2.3375393254626027","2.056823537332525","2.161113569070551","1.8704739678072555","1.8899294245385452","2.139420616235029","2.064173308808502","2.1401239375571435","2.227891156462585","2.709201124318467","2.2725819855526432","2.3821639844793587","2.0038350910834133","2.692221403160155","2.4042431556882424","2.4046067202429917","2.0724071072121037","2.0715331254375355","2.0943745610114295","2.5237595753472553","2.369431643625192","2.0072213378887294","2.1319042403379753","2.0119567716716484","2.272814087627488","1.6599578301705962","2.2425664499749973","1.9464720194647203","1.9031075082030495","2.0556462267816893","2.287421074520776","2.113356257002666","2.874473592705637","2.304632662611137","2.0845464073599627","2.821328932374553","2.391750978795984","2.670704845814978","2.579054477144646","2.736500829827473","2.4392549872364566","2.321553943365317","2.9579337194948248","2.088265934274079","2.858086119888695","2.4234936323892797","2.9357441430932245","1.7923823749066468","2.3576000368375007","1.5123145614287772","2.036611726560389","2.3763582817101656","2.0347749157848174","2.5651493502075255","2.604342826219306","2.612079174420572","1.93789241472934","2.0738029887160723","2.411433990381359","2.7164685908319184","1.4996555561443485","1.448160623823038","1.7173855517332626","1.6667552767292253","1.6522778589454112","1.9554991808043973","1.91835765364013","1.5299246928260009","1.9828751689950428","1.5159157883558552","1.7132787259733055","1.4961453024957532","1.4942827442827444","1.5447494609468027","1.450312174817898","1.320447804037891","1.5256588072122053","1.5806077774916303","1.4982724660144016","1.6135908956741334","1.7829984143934245","1.5662339339921203","1.9157342541253028","2.493709990764037","1.5906471266260498","1.9584241517290737","2.073476645603785","1.557632398753894","2.3882774588474103","2.446523189638255","1.7655282604353906","2.0158443799513686","1.335778938554169","1.7065384463800102","1.1806423016480638","1.0374753451676528","1.7168051816301846","1.9794517830933396","2.1532416502946954","1.1800472018880757","1.7859164496773463","1.6073382142556591","1.4959853500493028","1.5510715200500897","1.6364403205398566","1.986283828007171","1.6430403291717162","1.3355922631653254","1.9372303527620336","2.14650382196147","1.8308399542954323","1.4351519024416222","1.3860383292907215","1.7312448474855728","1.8561731014000846","1.4228180806528536","1.5787795024452478","1.7068379698449776","1.6080827316247455","1.3918515358361776","1.6419508712723498","1.7146533697925044","1.7664376840039255","1.729519684036183","1.5497018544001049","1.3858827329995156","1.7237497990030552","1.5877164325383861","1.761380347047482","1.4521386940630248","1.0564891544785235","1.8618148619126806","1.8171160609613128","1.9744295193396992","0.9882905508985943","1.0303563859271578","2.1107491856677525","2.442911977099733","1.6593886462882095","1.7978268027658875","1.6353037831070771","1.7876787678767876","1.730854182562949","1.227965933848287","1.6549867363503188","1.7027925798309227","1.8209227595509185","2.11864406779661","1.8083110454672469","1.708763797776643","1.750978239450497","1.3544652391389873","1.7175410254230083","1.9330477908025248","1.556453448668336","1.90949070790183","1.4859426448653366","1.669195751138088","1.434460947647823","1.4223225624382674","1.7318878900052883","1.5653701781007907","1.5305582035801293","2.1547165820642977","1.6912367996188762","1.6150419009228811","1.591108978971776","2.0763172549123596","1.5592077538980194","1.9745222929936306","1.39963404064075","1.5490920777759922","1.579220442311434","1.5542015574598418","1.3971606090847632","1.515499425947187","1.8065921394022872","1.6173289860218871","1.502434648898001","1.5132858068697341","1.6088255573431396","0.9883701775771753","1.8535038160372683","1.5724753907601345","1.455449059282925","1.8403919293495778","1.7677507569098545","1.7201166180758016","1.7159763313609466","2.882205513784461","2.0915861194739342","2.2085459432088186","1.928818353236958","1.6844781693218385","2.21297967511575","1.7311568712699104","1.2113055181695829","2.200181052465856","1.849828285981892","1.680129240710824","1.5978395409024417","1.5081468117494503","1.8519556203070715","1.846370683579986","1.8840945411725123","1.5285259031557574","1.7637626937466595","1.9169509204183464","1.6574585635359116","1.5400323321705096","1.759080191803322","1.8092844861790767","1.5175440944249659","1.5340668641557342","1.5482744018632226","1.501581311292423","1.6770368787886882","1.5422381130263088","1.6285433436943757","1.4601652011723956","1.5925744992672204","1.3672001555109181","1.4782234862263963","1.6296296296296295","1.6156187269312956","1.785657243251877","1.426672286890827","1.5879252201813836","1.6453674121405752","1.3514814933709993","2.202046880158468","1.8977141917447788","1.8979757085020244","2.0652383709708553","1.6248869362966791","2.1853683768144054","1.6836537221003742","1.7521005666644953","1.4023070212284727","1.9404375622449965","1.7650044906087705","1.7899291896144767","1.9003595274781717","2.143508062918499","1.1853101896496303","1.649549942503668","1.4814814814814816","1.6481302385557703","2.053009342796423","2.022137912152384","1.6888738012390732","1.496287513057226","1.7506151192058599","1.4281252661764288","1.7278800349522223","1.8292682926829267","1.6908821141625376","2.135030842464017","1.8385992702175205","1.7018514337322193","1.8862371575342467","1.3538265509277694","1.6631467793030623","2.1689192798760617","1.5635766152541475","1.796391273152454","1.748799193270175","1.4063538481988567","2.0805724887357537","1.4588260303457072","1.6050583657587547","1.435115481948938","1.5475095281903009","1.5688704784891876","1.7326496162053702","1.8173601471964878","1.5148566238484495","1.8488929468157955","1.4523299851803062","1.8632528746864718","1.0030255196001052","1.6033863519753717","1.040138250350517","1.8956886807686097","0.9791414173630159","1.3368548045257425","1.0359674965197967","1.7611322949654236","1.564914357102936","1.5069013549449157","1.922692569053044","1.201961094417207","2.046772247947391","1.7979144192736427","1.6897866153181123","1.5400250156347717","1.6869765411026874","1.8648935751662272","1.6196078431372547","1.8525741029641187","1.5115129255544568","1.4359725194278634","1.8367058157634075","1.6472456125428823","1.8551934137814368","1.484843391046114","1.850749652807301","2.215074814711229","1.819468024900962","1.5108566245251998","1.9546562135819474","2.420212765957447","2.6145710928319623","2.0541748709488585","1.6797134138251295","1.8140409417123489","1.934642610037788","1.8026867732172251","2.1027479091995223","1.5968169761273208","1.9029278323595653","1.7463058913836114","1.6463668041303028","2.00291686922703","1.6530811868275188","1.6280281323261265","2.0009065596062943","1.9733852645245051","1.783085228202192","1.880061704589279","2.3345793166765034","1.1492392359987051","2.417174316708473","2.215714982918497","2.7989821882951653","3.126533015011283","0.901894627562938","2.9623097524332094","1.944952928870293","2.8648870118818746","1.1588623507228157","1.2825094302163986","1.2682283586720446","2.208300704776821","1.996845061752145","2.0817059834400875","1.2800315084679008","2.056667327125025","1.5589591310463389","2.488329772925073","2.11090729504727","1.8128589122846526","1.7770416327447291","1.7728390872847568","1.7835335548550169","2.1447948457104102","1.8114311431143115","2.076231794236133","2.1872536876477873","2.340654364315635","1.6655633523103404","1.9066054997215667","1.8276901731636381","1.7131188840860272","2.583320044649976","2.432224316932636","1.626578073089701","2.0888699904326566","1.982384715680796","1.752799425486076","1.926751076713837","1.7969306481901186","1.741673023137554","1.5931610646978824","1.7236935369547006","2.0581035815511464","2.0663158234591417","1.9817073170731707","1.7212041884816756","1.9573867282762163","2.2536670660233784","2.0041753653444676","2.1877524640491193","2.339639904584518","2.1843471446762663","2.380262183141688","1.3165651404991157","1.8614134903147301","2.1700804564541465","3.11456460313383","1.6563146997929608","2.166122481484431","1.757804732551203","1.5992698122941387","2.281444781844334","1.9072063178677194","2.4104967197750704","2.5895229408732203","2.229111887288568","2.4352820835628295","2.3563444363309554","1.7824653172617695","1.8139888067047276","1.5849612974566898","2.5233909838389565","1.9438810006761325","1.6511779918719982","1.9721511793123048","2.355769230769231","1.8662607126747857","1.8399190542123762","2.172063593342904","2.0039230239092403","1.8237808277363348","2.1047621565879586","1.6542750929368029","2.5279106858054226","1.5685648960493435","2.0021242697822625","1.5969381021512474","1.852864541448194","1.8625105089568648","1.962839447355884","1.761341479266866","1.7510493179433368","1.7934711070159273","1.4645689434638014","1.5531352709931043","1.5084668786089666","1.7746515229736706","1.4421177400237062","1.6652627486554785","2.3492125726981636","2.4036739080871574","1.880073149603773","2.6510045574170356","1.5985384791048183","2.575232418774902","2.31454580670153","1.3374418147249723","2.3424782625957836","1.2570933165195461","1.9600798403193613","2.186334417903341","1.8436489883874057","2.278852251109702","2.481438837495533","2.3294377763739735","2.031219126654811","2.3376209629246145","2.1084591380619044","2.2430852259950527","1.7017326732673268","1.809429420925952","2.203192786457595","1.727285493610448","2.0742296123943023","1.8460241640910369","1.5793474282818614","1.528439694312061","1.9844419749166533","1.8095111935355674","2.1061857586783885","1.8631553695657967","2.0207667731629395","1.7874140666314118","1.9287278944275257","1.7479080887236023","2.270920557528221","2.125963327132607","2.1879518072289157","2.1366555853209825","1.8849336660974647","1.7573304373580807","2.0221660509430293","1.6228170021789328","2.025479761328818","1.6920152091254754","1.5680521597392014","1.6525491449576473","1.0209390037716217","1.863899551102726","2.529423239482411","1.4297969688304262","2.1544160655098463","2.1108604576216563","2.118355844913031","2.8539107950872658","2.1929684760781565","1.4825319066649478","1.2044873056484944","2.293416682945888","1.9014999409472069","2.009273570324575","2.61110013825795","2.1993600388837136","1.8118689388194915","2.6316809425991243","2.1419488157685582","1.7332446496341798","2.4716699940949867","1.7850093057357173","1.6861839882896068","1.8774815655133295","2.030887594048764","1.7431166699680238","1.9852158817270538","1.3977557161740306","2.096153305796735","2.0120383191567526","1.7413925831541504","2.0403814394544777","1.6021290751829675","1.9080312949065943","2.4256900212314227","2.098274988668782","2.231716378303789","2.7625776974977425","1.963121920203465","2.014545068478607","2.063682977780591","1.419144028703229","2.3637007696518855","1.7990906414575907","2.062528555577312","1.5636731629288674","1.9086418168986978","1.8570281124497994","2.0873422262809433","1.7358713877108196","1.6712729637457326","2.587284793690488","1.8888413570699925","1.9616743944748871","2.3026636745048297","1.552686115096445","2.757719326907368","2.626861780138839","1.1425620501565374","1.447385578302256","2.437004613746599","2.2632684608981726","2.5213989697509587","1.210196204567385","2.0426359730890815","1.9840661866094684","2.112929689063188","2.0977090808722054","2.408817635270541","1.9342435655994978","1.772647342447104","1.8583370989606867","1.6883264286930366","1.8899420002829255","2.1317338289544083","2.017861180194438","1.8694496295039313","2.2433718558803535","2.478545618789521","1.2560710098810919","2.4114644262469427","2.488170556648413","2.36130641267146","2.567029466418901","2.605194389632553","2.6602657613452507","2.5391507803568105","2.736802795486676","1.9764743538449228","2.4834481108245368","1.9403228436328062","2.200901105312632","2.2211350293542074","2.2006556525690546","1.7445059390879374","2.7434975544974574","1.8324353969739007","2.202959004106107","1.8629151410034046","2.6141691823495408","1.6867083533750202","1.8109239606659528","1.82582000323154","2.4600085053485556","3.0476006191950464","1.7471369078604895","1.9031708595387842","1.91109669046074","2.126068723383505","3.122563036132051","1.2616522018643521","2.519766791789793","3.006027610344157","2.4772042421633467","1.2097997572815533","2.5599621913276356","2.5356829598915556","2.922764065552853","2.227900662780484","2.4611191277857944","2.7246952083924016","2.8553640659931516","1.9620611551528877","3.1157562610924865","2.811975775496858","2.6602347099977433","2.13089802130898","2.2583100735853847","2.4653966995952334","2.3484357840790695","2.3884800340072796","2.3253333333333335","3.0375891640618735","2.480435070964319","2.29175498092412","2.3894039735099337","2.3163151463634915","2.7409278213478663","2.5974025974025974","2.9533966708127135","1.979814916325412","1.711212516297262","2.060625604643663","2.419328365558218","1.6276146582009217","2.3784338237651057","2.5274725274725274","1.9921091779315696","2.0148012910377204","1.9574356279558593","2.702877674554106","2.2925621987755633","2.2466090447055773","1.4985665884805839","3.067303915149928","2.9990960743801653","2.9788201663201663","1.1150120278265392","2.86869340232859","2.679064928309003","1.3365388533474594","2.3997148853601553","2.2049751243781097","2.4578541043012447","1.2684411833580516","2.4232122386053683","2.455330961410642","2.372947615324472","1.2332784316876229","2.9769959404600814","2.2654268808114963","2.006054947231418","2.0976857970362457","2.454091563002454","2.8726840047594764","2.6516866651573467","2.3384041169484817","2.5897203668062945","2.739802936305196","2.303549778667494","2.6829917487356933","2.3425712697530376","2.242152466367713","2.487852799830072","2.317011744121312","2.5597269624573378","1.964925413035342","2.5106710146080227","3.2410229230157674","2.962666666666667","1.7928610939381122","2.332524112591037","1.8172394804185157","2.189473684210526","1.8224404017069336","1.940631982125758","1.7905250016426832","1.9653328178362006","2.2073921971252566","2.266150794940989","3.18735340423481","1.6766044752195934","3.3281783620078618","3.2064384261624936","2.5692970609042383","2.917645564797765","3.490116772131255","1.1142968851818065","1.3903259182617693","3.4159086510547705","1.2384871644130904","1.226873628096582","1.2235514164361143","2.423959911432234","2.491415794937315","1.330264492470937","1.0885680842762389","2.510660343522098","2.5649272332556086","2.397555433675468","2.097232778763055","2.094121663916235","2.685342388228636","2.2969949301838164","2.8084055775327554","2.294481981981982","2.3108062521084","2.4035206499661474","2.4489335289470717","2.4159073011587355","2.341048151104017","2.160132111655657","2.0976607100183213","2.844738033721333","2.3368187579214195","2.059150898394021","2.2010739539582116","2.6035189839925916","2.3012274980778917","2.5118787037531365","2.0565719475801223","1.9101123595505618","1.9980084160483118","1.9886917527783192","2.399358460304731","1.8015423506447792","2.304671016327458","1.6171185886965045","2.056438533895556","2.1464275213172597","2.7625757824020973","2.7801261624504128","2.382326535847121","2.1219818023984827","2.0850301352011726","2.9917435648372996","2.301147350779941","2.5735529773732453","1.1513105000803987","1.9509835536923574","1.8620498395467693","1.8335239146721343","3.3735795454545454","1.9394083027214915","2.4250440917107583","3.183751341468262","1.287690954170999","1.2431472473168095","1.5758503949701759","2.434156459124173","2.0983348334833485","2.14184797965527","2.1637675010606703","2.7129695251594614","2.726859996594972","2.049634704494414","2.8275452152500637","2.316210656823241","2.2702885864347433","2.4893694911435893","1.9287479078664225","2.602290015213388","2.063229727568374","2.2222810827991735","2.1353255974142957","2.302666525018591","2.4199553239017124","3.0416434429492796","2.8660386396295703","3.3421750663129974","1.7603689629413104","2.0339426441254376","2.2728011705413755","2.0180027946576544","1.9649652276604122","2.405922270203578","2.1629084215370455","2.402629416598192","1.831430966660218","2.3741935483870966","2.1949687613632607","2.8178179806722414","3.0425434881751254","2.5920385065695326","3.3703194448885623","1.4667095529109038","3.2702237521514634","4.472658138111043","2.0903200599094847","3.4764565043894655","2.627911606609596","1.5590464161667195","1.578466064967596","2.805871472984141","3.055069079587468","1.735357917570499","2.071555643407788","2.817670933499844","1.2084470852738076","2.183042789223455","2.741743612983629","1.934566145092461","2.1846509921250954","2.2946825689113006","2.2227236827259396","3.1310102952822714","2.2372249371486683","2.6772772488276253","2.9547579251536873","2.088698949990094","3.845339543746361","3.5026176619096976","3.250778111782075","2.6303903074102615","2.8148501218091306","2.999680034129693","2.9797536382259824","2.901744232351926","2.987558443616768","3.7040984917124127","2.879316529168161","2.688347236704901","2.5557770205105124","2.558049285298493","2.4805709754163363","2.800115336558485","2.174893671864931","3.3311958961205512","2.1725053422262515","2.706377059028107","3.9801476038544585","2.0442763522545726","2.509734629102451","2.0544342909736377","2.8482134226890485","4.314349761216335","2.9983739837398375","1.1815571471005644","1.9643086403902938","3.1792184554430136","2.830738166427212","1.9800810927843169","3.5739367928209127","1.6164177330533653","3.1930908802789","1.4708214398985093","1.2771243352354336","2.080557950003918","3.0203624434932195","2.7484308603953065","2.78810928717246","4.375930974396447","3.2445900170767894","2.7507082152974505","3.076662526814949","3.150412283195905","3.071961982348948","3.747601309402867","3.2554728052358386","3.2259880644071615","2.80525420123378","3.638159299594277","3.026277333475038","3.447726729835178","3.1449723050703025","3.3361598388891833","3.2614455277660026","2.722792060743306","2.3645136352731053","3.362962572204785","3.1801775436542776","2.5637713916693574","2.3356262997920334","2.7256247572186973","2.6307114129359794","2.4683769531881854","2.423552374756018","3.164131305044035","2.2570183771743046","2.454954954954955","2.634051514660619","2.7707481668937772","3.466684027212656","4.210253586812191","1.7205056179775282","3.5700612557427256","1.4668181080642544","3.5843920145190564","1.4932704587877002","2.0037794865111427","2.9521180847233888","3.12876989531852","2.3694022371005894","1.623228166438043","2.5139105720347463","2.6926829268292685","1.6044673404380827","2.750725444210359","1.590693257359924","2.79333986287953","2.9094071767247422","2.918254735764264","3.241326918207141","2.9596208961153203","3.3033878734968605","2.2635998539612996","2.7952146375791695","3.132846063717012","3.0125405100746794","3.0920550577993837","3.4741834070442796","2.8385664446558834","2.2722452009757133","2.7962962962962963","2.589588634435963","2.6515050878078585","3.588218108416775","2.9977165312516596","2.7734488496790726","3.2243439300192023","2.0518638573743924","2.528025995125914","3.073864006780103","3.0904029860188524","3.0545641619240538","2.4617497057669673","2.574622044191756","2.544457056375331","2.9701677655199425","3.5228461806766656","2.925850406188303","4.139035720006407","3.1009763534334556","1.4863430170832932","3.830302237341358","4.09645554909936","2.664711694769388","3.273741929204114","3.1905465288035453","3.58042873506791","2.7347454947834335","2.593129382271143","4.622660098522167","1.5554879440176466","3.2616900401255413","1.7165843555838778","3.287909998415465","1.8278418778002459","2.951477706505057","1.4182379713914175","2.383971595232057","2.5050664264805222","2.985703451956296","3.152438678978078","2.176121930567316","3.2243492009712575","4.496994442554157","2.675198737103231","2.7506302937593836","3.173976773029654","2.908176766340302","2.7546666666666666","3.5956957406868835","2.880832299120699","3.452773932488553","2.4264999334841026","3.0650319829424304","3.4378561772735705","2.3856330694437067","2.9534187014501976","2.194037226157141","2.574434743675845","2.61211946605205","2.7505676289328576","2.41773219964951","2.6770045627133787","2.550204081632653","2.666752552417147","2.6264591439688716","2.528253148207943","3.6339684477717444","1.8996590355577203","3.445588283051343","4.023989166183014","1.1712700051626226","3.041477662108801","1.1215195617646105","3.5494175728437285","1.0519438092126756","2.49209116146943","2.220287331301698","2.958116208909611","1.311046857052323","3.0155072067497364","3.652734636102701","2.3551087435414746","1.4864333464412112","2.915556262678493","2.9188885770418187","3.405117609663064","3.0780907404284026","1.9482899596808303","2.7695406479046607","2.5745446431061896","3.131700710980702","2.733691047726631","3.32170311746518","2.5779695687505253","3.206791516245487","3.181315094928626","2.868786958606361","3.1836842802277845","3.807375961793579","2.6829979585885098","3.6416644579909887","3.5348688419705696","3.257156475915578","2.846112886048988","3.9981923066698566","3.653380839692627","2.682053070411819","2.473418049792531","2.9648030454560117","3.719636445968238","2.6610017889087656","2.4228645664176685","2.8169913765570107","2.2226554883992984","2.578292857607917","2.5101028353648522","4.024025995339219","1.182199724473777","3.187276858162934","3.153928606229902","3.3857509627727858","4.572087215445202","2.1769980003870217","3.423094477407576","2.527749582528404","2.918014573734601","3.0354065486448376","1.5449607724803862","3.068549341326812","2.455959371528329","2.76933863052115","3.0731333037192585","2.5924604590319893","2.792029590740962","1.336196611787163","1.314629258517034","3.169083764453114","2.446630567289428","2.2502557108762358","3.808692714784371","3.085109394016586","3.7517956229051066","3.404774054544424","3.2980076303518437","3.250120427304412","3.3151834836367766","3.6558854718981975","4.797410247565473","7.799332167276196","3.590816407594736","4.020580279000689","4.751107361316178","3.9922644908339513","3.960791625602642","6.151891362469227","3.7906565723179195","3.306111696522655","4.27766393442623","3.358305347455438","3.2958485918916294","2.632940872040367","3.03653638946028","3.812212056323405","3.286002735621703","4.517598742259441","3.199002908184462","2.127311405661921","1.2371794871794872","3.474121015215363","4.727353379170495","2.3240459527267925","3.238551719670963","3.228283474644057","1.535322126129628","4.844904941738485","1.3721852610030707","3.3143347907557774","3.0465735990136418","3.137270299984294","2.928407924855948","1.665041918502632","1.9425575020855679","1.7244757985498727","1.7627012417250971","3.1123032621987297","3.1157150887336384","4.763790664780763","3.81121143082159","3.9824007220216604","4.133980472938653","4.512696357187095","4.909589971419678","6.76317638791286","4.945952032428781","3.4203927535006904","4.309785216335977","3.380594646069199","4.630267691492182","4.041210765913266","4.832892522240924","6.503785271851342","4.077520612953684","3.8115814462137583","4.613380131886832","3.7668327854946457","3.8545703815022807","3.0873736398171396","3.5634962111314348","3.2001028145482584","3.1215736859077716","3.2651608310141738","4.451312770838644","3.1610506419865736","2.8434494515745117","2.9149334772806657","3.2264410781034822","4.222332178789378","2.8438919127830204","3.1554180364855284","3.05939788445891","3.4641736569123394","2.845241909644345","3.910329894280983","4.37439379243453","2.577486707301258","3.3466549696201704","2.696453066823437","2.3878009377832066","2.5380710659898478","3.3796112653708845","2.771880632886041","2.545397497744833","1.2165354330708662","5.0181065700982925","3.503829213126463","2.36681768473676","5.124802349220691","4.116284325912532","4.621087780859131","3.7760453579021966","4.072410889699691","4.161584068537063","4.930464224753057","3.9673113901142405","3.9308661373137674","6.14186606257964","4.43772062531518","4.211617154700536","3.395364888900688","4.93501651219772","4.2925615019993115","4.0902941722592105","4.671275658649868","4.67991404239514","3.3995538085626262","3.102549092650737","2.5234837822799725","3.484941809576296","3.5259645124531986","3.1958295557570264","2.6626459643269604","3.5443688198279184","3.1740901157153014","3.803912778969613","2.580960130187144","2.6706326360903216","3.1791907514450863","4.195036948594662","2.9957764463215795","3.8409002211525953","2.230869001297017","4.065225882046609","1.5042746198525092","2.0921462534841777","5.867248684041597","3.786820824266831","3.2351655339612893","1.3594432756109402","4.7028320702034305","3.5404221425726803","1.3493487247484595","2.1658763963674357","3.578772540335337","2.5171266392640437","1.9447326953380224","2.4327429771385556","3.8886221795487277","5.255741862758912","3.1773851590106004","3.8312096451631334","3.808607566282788","3.607589551603846","5.467893004809721","4.0566171266808215","3.9206263956808094","3.8247235055298896","5.613002439283063","4.511138777780721","4.189138676776846","3.552435651988939","4.293177057092095","4.288400921781051","4.091162346448755","4.450157703623208","3.129244453913553","3.801486733155208","2.9665133752186024","4.063394091362073","3.7076545125420224","4.009328477413584","3.014849738606113","3.1480087699204815","3.4434545099824416","3.6946705777660593","3.9278029354144586","3.189044244397625","2.792190945647944","2.072688711076834","1.172279792746114","3.0128474806640564","3.0640131177056875","1.4149089479889951","1.1242451496852113","4.093700993204391","2.922295678834914","4.672897196261682","2.921683203262873","1.7696684324112224","1.4316702819956615","3.227358377099788","3.1231791166530707","2.210870779790885","4.103235014272122","2.4159746935547646","3.363757966795185","3.7809187279151946","3.3389782670053623","3.7282611749501307","3.27451645741432","4.234988126201515","3.9597808281082303","2.868480725623583","4.445823577533922","4.121787804257485","3.8196882460328605","3.929562312439839","4.943915793950348","6.781011045029736","3.3631332481907195","4.06040179400759","4.252888829857883","6.0613320555821755","3.7596383940441376","3.5669835553319387","3.803233280954537","4.410081707609188","4.473393541680203","3.5332705485012825","3.596302805441646","2.6412756383082794","3.4107587263097443","2.6418224746346755","4.108662026295437","3.211887227070694","4.5551624111440505","3.4054935567422375","3.373423291287768","1.5703779825941746","1.7964071856287425","2.5880452342487885","1.6878741290765757","3.438848446918542","5.123533736056509","2.267839687194526","3.0883261272390365","3.682315154267917","2.794855201423718","1.1148715906828588","1.996910003862495","2.5773195876288657","2.442754077791719","1.7942824886093303","3.9973114028151193","3.3980774555955535","3.1875374475733973","3.586935263054958","4.462762933484934","6.178683120615332","4.103963320300413","3.6750757382711856","4.784216319963871","5.551932401395072","4.473855377393173","4.409879497478848","3.806540816614464","3.043502697841727","1.6557803864248846","4.179510426110608","3.8617700729927007","4.575923392612859","2.744510978043912","5.150312485744264","3.331446042350809","2.025732274842595","4.185283122093553","2.4549657261278495","2.6048565121412803","1.8072453861927547","2.6937410939383977","2.0162396444834583","3.059928196630765","2.1893359937922625","1.7163579990587714","1.8525708580620113","2.4910434393193013","1.7578125","5.303638124221885","1.2875778322486124","0.9327264095618419","3.4805091487669055","1.7411238162814182","4.4265481810608165","2.9816258351893095","2.245517091933474","1.7639378871635323","0.9221003091909048","1.622628726287263","2.33576154514469","1.070109427318858","2.5335268906401214","1.052168617633128","2.2173024523160763","3.3294333946180843","1.7182603904824214","2.4980323717619686","1.077819956616052","5.126152353226589","4.685379096373861","5.294189304421976","3.711859075180875","3.373231773667029","4.200087501822955","2.619688521438185","3.812770484272624","3.933642422486236","2.8271640921014285","2.3854591894912085","2.6845790143662485","4.357605361808474","2.2193836819415615","2.6600602794775776","2.5010849455243145","2.507357806118957","3.079162213176267","2.6816608996539792","3.734628125425421","1.6791096555743665","2.5494505494505497","1.8899185622016288","1.8837653176952227","2.2787391160586354","2.2809889835446904","2.5334448160535117","2.2149782681377466","1.9856299431881477","2.5836287106778912","2.738930960145929","2.667256930994411","4.522201181425058","2.7433121540181618","2.6273777633465922","4.0598643955680505","1.6401715871814282","2.920856035499635","4.019703897234923","1.6650505610195316","2.131322521778053","1.2784899093008468","1.901166547631194","1.8944195128635537","2.072538860103627","1.0400188482380264","2.0836129378606896","2.5801068090787718","2.2450983712031425","1.9599214677408434","2.7284601615790236","2.8225221303149035","3.491711107357448","2.713526370719157","2.507388923881971","3.3232335474487944","2.6813229477566667","3.0139440302120657","3.5110343317355652","3.9587708499287904","2.3934657475030146","3.9161761029161077","2.210899827131289","3.283670764590284","2.7757553694939934","3.186162949476559","2.402688831357587","3.028991778450887","3.1403158467961516","2.887790657951673","2.3077767411228804","1.8854362490324006","1.7564567349577045","1.6530310222544884","2.20954501182691","1.7492055457127593","2.74929085751691","1.975418250423106","2.079500473880805","1.6379358128706833","4.182239803573864","2.9530847419236106","4.189425236365653","3.661020732762229","1.7209843698037912","3.6166565282309353","2.721373832298484","2.8674625713419175","2.1001166731485084","2.2624310150737212","1.593190023516942","1.5350877192982455","1.8772196854388634","2.9158878504672896","2.2232118388599615","2.950953123940031","1.9199009083402145","0.9934338107712721","2.3519192864063077","2.5218663853248477","2.049349702200073","1.6848220769789397","2.8276448439208064","2.2606415268436004","2.8073572120038723","2.2978764618998038","3.3978702807357215","1.9987447496741177","2.4680028978507607","2.227084852905422","2.2006281006781667","3.549502023739142","4.4692737430167595","2.772584249167769","2.633967058396479","2.3459407701251624","3.345166575641726","4.557409758752041","3.2492869366799773","2.422717795304143","1.8206187869987713","3.27538285465148","2.297592997811816","2.5070730272556654","1.9188048428301678","1.9630027719635685","2.359702688513719","1.8698700875142686","2.0366259711431742","1.8095987411487018","3.0454304598823105","3.3681672025723475","3.577391542356644","4.944151973482633","3.5559197050389186","0.7248160608298461","2.1533524742442154","2.08992506244796","3.7886784067551806","2.304020308490384","2.2703363084128005","1.3622312056255732","3.1481047807032216","2.481223175965665","1.4981146176580493","2.1878064450681367","2.036412677006069","1.1955110060275067","1.3916570509458372","1.6938796293153195","4.307483586500957","4.1793643883326075","3.820823244552058","2.6650485436893203","3.8602145365337437","3.532221873718243","1.77321175083608","4.039890591339288","3.1806216340232325","3.4787849566055935","2.619276777120858","3.6078841475890604","4.1961852861035425","3.3086397309457802","5.659517242951246","7.522768670309654","2.302519092670694","4.626763768775604","2.22450845907636","3.8998544660724033","2.253028114234915","1.935519702313182","2.422528965020234","2.958102810753705","2.210253118633662","1.3707462017155352","1.298591786828569","2.229184573155516","2.688849676497773","1.5571612614126478","1.978631885666713","7.446690973373108","2.2189716556730055","2.352678197211434","0.9182273732538283","2.4511299043393873","3.667250535212834","2.6772833203861945","0.9311964631113566","2.698177962554759","1.5455737252466708","1.0725298297358896","1.1037075004271315","1.9715600741911108","2.6260468001516353","2.450980392156863","2.7097814042510326","2.988007317568941","2.6025992923046397","2.3811116313290084","3.5530418388804295","2.7241496104901533","2.729944381026401","4.159118904427215","3.238316850882296","2.6127398461088926","3.7187681580476464","3.0330279242715146","3.6798727588201277","2.3759829142801667","9.42478580032272","14.952188429827151","16.70434047994155","7.556029398421196","10.32477306937919","11.535502556908177","13.60866776617189","20.87407340033653","4.646772506027385","4.059065777798002","2.793342350051064","3.3905330349001077","2.243330074032686","2.936898635041396","2.663302495093917","3.933174752447862","2.1894783401984905","2.9976832231451658","3.813834977772959","2.964818587237791","2.8911187493070187","2.7352144910547325","1.1332679524899203","4.735737560059645","2.0006696802276913","1.6310429722470903","0.8933307277853773","7.360606970333778","1.5689932999745568","2.3897976157471583","1.110997512183485","1.6828284847878971","1.809367745459511","2.640839170213479","1.996805111821086","2.570845299470607","3.71596513749071","2.7502712967986978","2.724932294627035","3.8636363636363633","6.0833373663069255","8.392857142857142","3.9246200607902737","5.902920112849944","3.7689053153722707","6.50752917251731","5.706986720651677","4.112417411581811","6.33296326688227","4.540843437515096","2.688845847100376","5.123691069550505","12.678750341561162","3.5706137348847826","5.58854984413043","5.7003220133829675","3.7622323638262607","5.307884571688253","8.931674746181285","3.616070415825412","3.0993319461176214","2.3719528896192825","2.769017980636238","3.158510430883213","2.673530388575224","4.014394911566145","2.0804671926327316","3.607705779334501","3.0727038674651594","3.118630817768099","1.9003029468465986","6.197339246119734","2.5315059426964126","3.3212476820458887","4.638846527103841","4.510941133619119","1.6171903416244648","4.017770373455504","4.913578171835168","5.730340204178141","2.883578559254235","2.6137398401402985","2.74949083503055","3.0376418488790478","3.6274815507743483","3.15990642195789","2.1256070787040118","1.102228270113965","2.584261981267519","3.654088693458772","4.355607148903238","3.7871083345440453","3.4138478564211137","3.314770617873243","3.6990352450671447","2.857486759749639","5.029321620773705","3.055177773460268","4.414191419141914","3.879133354266805","3.807474518686297","3.4372664900482306","5.934041111362096","2.9823881889225583","3.1062101513398224","3.859312987546189","2.9257194858377886","2.726611179333242","5.041902296109559","7.286392225426306","3.473450706202791","2.137793228040402","2.576327896277708","2.9213793103448276","2.4752886452363154","3.0219471018570627","2.5435965789181383","2.281958704727519","2.4171386910436876","2.7935764469722315","2.649686476888075","3.847776558940174","1.9994438264738599","2.0274598267747237","0.92253943992576","0.9654415798134943","4.08811107737323","1.9521393117599755","2.8497553380782916","2.899355698733615","3.4906971227166435","2.22516196872562","1.3663478521678274","2.662731929039042","2.966145385805121","1.4622641509433962","3.001046484150829","3.727128217269253","2.4559278697348943","2.6148150618683923","3.173299845440494","5.212434482258883","4.4459462721150835","2.9779919134203325","3.059963658388855","3.870159288623274","5.531474257091943","5.68933069536264","4.904195973805481","4.497175686766765","4.610944459594582","8.135993818462797","2.902074858532373","4.701672820092073","3.2597838917642785","3.871392566018029","4.546485775216661","5.373570433948912","9.216809933142311","6.014524096796959","2.3946675444371297","2.487424686308109","2.8192004426615025","2.0842087570384065","2.4761535048802132","2.614397167044763","2.247791593990885","2.449390448495694","4.780490505453136","1.9133151112846545","5.356088509011162","4.78210566910914","6.192231514084507","5.231565614846632","7.94314381270903","3.566193053676139","2.428551512616757","7.077929276133467","3.3860916560966197","1.9485903814262024","2.5988397438047017","1.144999493363056","2.634557991149532","1.079088471849866","1.8197192626416372","3.0984020185029437","2.7814659721512958","1.428964001099203","2.3395423827656","1.3564711453893512","5.345072285968584","5.500315273803172","4.435942758904575","3.664870637347702","4.330300031378986","2.912126580435363","5.441583005965372","5.787182587666264","5.04734158776402","6.437820079234709","14.024515043322038","12.049178465104651","5.619386312861898","7.83309926154125","5.227521429874157","13.950257368013483","5.274324170183643","16.890354868061873","8.19332984745493","22.99693495288909","2.8576120873706685","2.5207278392966446","3.0978551148342843","3.040246809704109","3.1027172865677395","3.034630489111032","3.214137788209306","2.712487315213516","3.6304188511190034","4.074782946381515","4.411929588518893","2.93498726326282","1.9995468449076694","5.281611754229742","1.644278468312803","2.796149016324822","5.0117858345493325","3.8978756577665177","3.8588936734017887","11.547044035816175","3.0732301034552707","2.9467168998923574","2.862978837396196","2.5135939263363087","3.7762472702838905","1.1575673807878368","3.2528927876574394","1.0670323789135672","3.2926540684899095","3.1095359101243814","5.692366889519503","4.778616412672468","6.885946997909709","4.446064139941691","4.805276381909548","5.585948747480565","5.347903873120256","5.018519863461399","13.215880411570568","3.345318497643458","19.796132445498497","15.843069509478566","23.02032075815564","24.253892980096214","9.336317544420591","22.349440014539177","6.003563759309179","11.596086748306767","25.88822082536212","14.466336768511374","5.160132523467698","4.045582457997827","5.0125803746156","3.99351647430344","2.748783164054807","4.157658406785298","3.8260581096397863","3.4201094657294475","4.42698936967443","2.39604180564821","14.504607666721196","1.361716318363717","3.6855036855036856","4.2274897210187925","4.15377817057004","3.259665448100144","7.620119090085888","1.8349132435279119","0.9385641905922091","5.486938463220024","3.675951748933168","1.5113004053032906","2.156324991429551","1.199400299850075","4.17985012489592","3.490329451372428","4.9560916523670135","4.269417309925541","1.1692984209474315","3.660834454912517","24.66864443274798","11.089089766520036","19.00208707469786","16.16335433834222","6.243820089231882","18.36962590731435","24.171006418796175","24.89355525449971","14.258119038995535","8.846692757404455","8.82815169115135","16.00584688470674","6.540333955138997","5.918925074015031","8.168158567774936","5.086671058909058","8.002554977643946","5.541866301619895","9.446742737646042","5.9254692423619675","4.832744765453382","4.051591195850274","3.4435184142358377","4.468506100912388","4.383449405981155","5.027013685105449","5.139773041793523","3.2123175763617735","3.227607773062319","2.5846702317290555","3.6004549110981667","1.2521864675014576","5.074019348183668","4.06298600311042","1.099053208570954","1.8624760954519","3.774269136353493","2.6443752390318527","0.9650873499740275","3.382882003513958","8.574004206871223","2.290314744768713","3.8262807740366758","1.5221481101419532","5.227280284640708","1.5644619404757865","1.2569060773480663","4.146316472557123","1.0583620747954283","2.313982288874563","6.957678355501813","6.322200203006428","7.03235222573583","10.205817315870046","8.742590004337558","10.983527131782946","12.004551947894724","5.088954245214792","14.245138737164082","6.675709718050577","5.530826999018466","9.534120435793408","11.743399321138119","10.668032320473426","5.967050018254837","7.404803483546141","4.880879240903816","7.932572000545976","7.391125154554197","20.009594736601635","4.506449648452638","2.6214833759590794","4.019184383238907","4.280112966466508","5.031429048228292","4.486251808972503","5.314168377823409","3.485862889393017","3.178394784172662","4.052294823144891","1.765479421392798","4.709410490656152","1.301360258028327","4.985818363828486","4.288025889967638","1.4184791678255548","2.846011439308115","0.9530669917437802","1.0111805327195003","5.556776959437177","1.4874870179905524","1.2658640827379204","1.7514371197095504","4.028752353243197","1.9607187071301904","4.205511379215793","5.742301511822386","2.5065568872215396","3.654552191047189","2.874531513255166","7.72482427111766","7.2953563976903295","5.315358690418873","5.532470042520294","10.711419190076613","4.85328410415857","5.034429623922569","3.97166217822743","6.37520565179522","5.598075661491363","9.379528985507246","23.093731506350434","8.294930875576037","8.150370471385063","8.595799028439801","19.53471365236071","5.303549403864602","10.265986518491529","9.762634866553094","8.273103322878313","2.8295624273939257","6.819484240687679","7.341363674298272","3.487076648841355","4.006500056034966","4.10133685426638","4.1732523639186985","2.1280151523592","5.582613102108612","5.063887580032707","6.972901520158626","7.3854371661512515","2.3650443096362976","1.797978669942487","4.952555352089229","2.032846816406791","2.8484344693821004","1.3431964181428848","4.956570467918184","5.153893248733789","1.3383479026902487","3.8910111220039894","2.5868878357030014","3.5772465839954783","1.4083569169302481","2.2984993549263257","1.8598674421750303","3.1100718222816104","2.785182147495045","2.1458502297918356","5.35497940392537","3.9687515069682213","6.389883885857153","10.339378616229883","7.101588830043331","3.433922996878252","5.642361111111112","9.368334302889277","5.8340001454862875","7.70163441486008","15.77776769098089","13.910969793322733","24.358770475043734","11.338611338611338","18.94660666229449","36.828557109663315","20.039583238545884","33.386334726512814","19.813763343175108","35.23331364441819","5.056802438348573","3.89621342029067","4.049697037078214","4.1048466864490605","4.006472853077395","2.258989130743253","5.021110198067496","3.268222445597544","4.27671904602697","3.642328398384926","12.660215958491094","1.4001330819563047","2.864749438420367","2.8284444935014763","2.339392257527404","1.056308741578641","1.3076051198407652","1.3641308896141937","7.594209244410388","2.7427150946001935","3.049780723778916","4.692590282109933","1.896651172259356","2.2290728005691247","2.0246302121678603","4.116198252302709","4.803419954221085","2.428686759956943","1.1682163414052655","2.7762544557170274","8.43808698165005","8.95367122293456","9.087587685113016","9.109775815053451","12.802843464384159","5.142070830215098","6.943502277352456","16.699353526548993","9.963689179375454","6.920684292379471","38.39503638312918","37.91407690731508","59.315263264799476","48.71108287192521","53.80802982767244","41.64699473397494","42.01555708075955","48.17778788223258","33.9477691660795","31.036517555207553","6.3704275436226805","8.972132638716612","8.04067570571238","5.937543761377959","4.7334946811504475","3.850129920929843","6.798874669020299","3.491744756804998","7.790860667227362","6.601919946106776","8.496567888833082","8.53154938883383","2.8935089317761395","2.892493813582623","3.348933665891321","5.896648044692737","2.2705247127232453","2.1032611735749844","2.1239632369423895","8.240838864409614","1.3467088085749621","2.476572958500669","5.768001883429187","2.3486482003649027","3.2154230729719546","7.48822133859057","2.41319621219835","1.6637770072019207","1.2398229789534139","4.622696344924266","20.95532330863363","14.626634006742172","33.362982907421205","7.719963076325123","16.892071068682046","15.200467107824057","28.878039348383044","26.45473091121041","25.978673501462872","14.441020165497829","19.21386440755164","28.73808928205945","26.579976357188322","26.188532026855384","25.146797760480677","39.59053623483154","29.57563904302738","26.39073302504464","8.934605900082198","28.461976969558773","5.841556244713843","8.174516553326058","7.253188214599825","7.69608914135897","6.213338522698841","9.494529843511978","6.721877156659765","12.402701309972606","10.450059109779232","6.528338671494222","11.719930598309732","5.723374827109267","2.6446144531894986","2.3996678660393025","1.2176050044682754","9.124257439294807","1.1307125989720794","6.13559981112685","2.851108764519535","2.1923282582388204","2.305465690447812","3.318645001377031","5.139802631578947","5.25796687412849","3.895488543676177","6.47532966847661","4.287881341648407","2.095869109593672","1.2103746397694526","8.154175875694863","15.642390515364143","6.566130312432354","21.953992404634622","22.599562573605404","8.46646918855922","12.522088547844401","13.46475594675202","12.858069008572045","29.39764818814495","10.039788122147094","16.960703865791395","26.366947416344182","18.06685351015107","14.842021215923348","26.482087652300418","23.272677520864686","11.371795751297705","13.875237159119482","13.596690608237113","43.17090843220723","8.913346336026748","10.544431392902997","4.792225201072386","4.048846829489432","4.415396997197014","11.678993877946757","3.609603223459623","4.31148262208535","8.724888392857142","6.0435795532410586","3.2338169642857144","4.397981254506128","3.053940078829139","18.162653944302672","7.161886407436799","7.71657500209386","1.5552660031604337","3.8954182990191994","3.447891095737558","2.8366237799467613","1.574803149606299","2.983387566364103","2.479200214707461","4.5532176526847925","2.66407422567881","1.0353248718742476","1.2553582363747704","1.832407532854627","2.9271545257542924","3.539671682626539","12.357400634582314","9.476442331020428","13.89084549804474","18.553216148348465","11.11596418431972","8.012113870381587","27.91219936250362","10.002888920988012","10.46444401618809","11.990633449208188","43.85084095940117","27.021678305771026","12.17224179746488","24.0508350825956","22.251882272416154","18.718752840650847","31.32806467729482","42.879879948159434","31.513980450102295","32.996396437232285","7.933725866082432","7.443094539868733","4.24216765453006","5.390173813575873","8.712048225935204","3.805591205847888","5.085361423901199","10.685317000496607","4.394638540980004","5.943152454780361","6.083361457981775","2.2602456188767763","2.6690831205206362","1.958806221101303","15.050921030663922","6.733484689074699","6.017946818144398","2.626228869022753","1.482237986143697","4.782016727333352","2.6716392608916766","5.383818467399659","7.36648876499983","5.49250865704392","2.8793138656320196","1.5435650937648095","6.850884582982308","4.367521958641676","2.5271966527196654","4.5042626032087","17.532137410124193","6.447495183044316","11.85754460822343","39.07569106083265","25.648678573147837","17.112972737397705","17.944989700714892","8.886504413988197","8.881331227984939","20.044607525721275","37.19638507591796","45.97097097097097","49.4024267858772","52.57595772787318","50.1664614402335","35.76271957768272","31.75972540045767","18.17352431347505","38.82214263045745","27.277913424457477","6.2745098039215685","11.223661751126283","9.664748083690226","6.361677169435579","6.952914675017856","5.496952322636311","6.162511389049946","6.755772248374805","8.15405487720464","7.220527045769765","1.4099074578116493","4.197201865423051","1.0099882819039114","1.8204488778054861","1.494673676677035","15.975834871622755","2.5859429366736255","6.146281499692686","1.4089139849788939","0.9410697582131012","6.404246518681925","3.7212472312148575","8.362393162393163","1.7582113314643686","6.8601935268601935","4.1381889897650375","2.1909125357401216","2.674175490658933","3.2722996808331932","3.6979131262320712","24.126876183999613","14.883619541259959","25.8434841453983","30.952207930625196","38.23628895868567","20.831827272946335","21.270002662986904","32.072281006909215","19.438345919081282","15.49292373086026","66.10838562464347","54.227173715737884","63.49777009192682","70.90307112684097","64.01064531537884","68.7089715536105","63.67272311735802","46.59616955614051","61.059488020406306","67.21128936963142","17.422691520310313","22.210639017243324","10.554770024120435","11.432568550643536","7.056918739357395","14.856488720125082","12.65808586410925","9.499820079165168","8.571032186459488","9.213221859254746","2.8622741048378044","16.043425814234016","8.67180757774004","3.2080103715554573","6.970494373215386","1.9987105093488073","5.205590989279414","6.474265414589817","6.948030081939612","2.92420056350357","4.538382601211559","4.68279478937574","3.664725315895235","5.903659320943773","2.650439486139283","5.717972225051781","4.152389998982257","6.961788424240361","3.8921453692848766","4.529319407468087","45.257687310524034","45.50033904872615","33.69058034412365","38.81264195621708","51.62432976684378","51.19756132965597","60.55591842659119","48.753712088019086","48.189327326017974","43.25226860254083","52.23530483499966","64.84229634672113","71.45681818181818","55.46596619460941","62.36451634892863","65.48789068706449","58.86581107432769","56.90433830573423","55.59597153704504","59.546283629730965","12.978563683376429","11.724859566031501","14.845337862293622","9.73394263926659","7.855620372447834","20.549411344987515","21.067408073704584","13.019660187425266","14.410270880361173","14.005300646016233","7.44739603468272","7.114712248182474","4.471567579728894","1.094799008273672","2.2762013284789195","2.1170994335707474","1.3970119466696234","4.0556768558951966","6.820010543547626","1.4917480726948875","4.338989940046743","6.325478390255718","4.897486547237927","2.011631885049607","9.451333446577204","5.285719107570797","4.994019138755981","5.917878470933567","9.295332286411174","3.2859194419749707","33.323659580642826","33.56746675709061","49.48136299743105","27.17875472063523","36.0984984984985","31.803659599186755","17.686860357957027","23.01654800379073","38.89698382631502","43.63148868330153","64.19755892447212","54.43014997844485","58.63841011414799","64.39758349481363","48.42412762169934","57.1925674907321","65.78257726369058","61.28746191277457","68.63559033684928","54.37610002514344","26.06572666922697","36.03030303030303","17.222606052231587","18.89409925752247","12.384705685057856","8.411188811188811","11.286341195831048","16.364950919051193","21.902460456942002","15.893767472455188","6.68237903784833","6.27992114897212","7.193065318256328","4.147246797465882","2.20592290299454","4.315893711833636","2.354941196142913","2.1026471573774153","2.3725883796141405","1.8641328577797593","3.396468483068301","5.071854070608825","2.729246701185903","3.6060606060606064","3.9845846810267704","3.105824277535909","3.118235930735931","4.195637355146557","7.272183648383774","1.5903565640194488","37.216671907883594","22.641691376774908","41.97919949574535","35.37864358560166","49.49928469241774","20.269417475728154","37.14830365329858","33.65856014683508","29.970068552669694","35.32466905014977","52.56579246397891","65.76315969295948","65.8182645286023","57.92981501632208","54.86861380699506","56.054780808517414","29.823277931460186","62.47266265718972","66.19900565279575","63.76620423015692","19.34953458558609","6.348367721483789","10.99644029912525","10.21041834160406","10.963556891895653","23.686158401184308","8.302495756934977","9.540999083664232","21.514506181375666","11.30617202164072","12.678497730086669","8.011533894951093","4.006613392119041","6.846871569703622","4.35741402411791","6.422276656249121","3.8030467899891187","7.738144961434577","2.855866670388878","5.246713766994117","1.5697655245193418","1.9715633377447486","7.208344406058996","5.589452275755663","4.971466935213159","5.3604691272852705","7.901201332570583","1.5894313138610796","1.5255788724277046","1.947918098117356","42.95569116476519","33.50579319390804","33.9225691001862","29.0463057047467","42.32174167153711","27.220567942479484","28.062296269467584","36.803558047907956","33.793854343092185","52.931493585088354","63.247726910193016","68.45221827457411","64.53038170720598","51.092260683175994","57.75031182673772","64.12006075582055","65.57864859915766","70.04038478990834","74.83291657194818","59.726799554515075","13.652088313879904","19.394358407079647","15.210436317502344","11.989456159822419","8.635182215340373","20.51104013331482","13.388526509449742","14.544696232448215","3.9942938659058487","13.764340741561826","5.306338126095058","20.429491377428512","1.8223492458756614","7.056590277586729","2.8095238095238098","1.184029628798294","0.9969475482371392","1.1412622968939978","2.3576401409036696","9.13797928911279","3.7737803404343477","4.779250564943168","1.2254987292413744","1.5882332631288194","7.967078189300411","4.878297525156378","2.562691341887104","4.668856415069044","8.221091489573979","3.606336366700371","55.226363241888045","41.9537449196826","56.369856413221555","11.25912673468401","35.285519391931395","55.41553867899667","26.445578231292515","58.620354154504774","50.23102789268694","36.08717688798784","32.25626073411351","61.12751945719417","59.94077077494882","23.011817310763334","39.19907277886575","64.24045588586912","26.876382991447876","33.79419040778868","39.8403439969741","34.18271723092874","6.613691931540343","4.391477067533406","6.148421840662658","3.3347310263177365","8.497738427485324","3.3313794450957404","3.2707435279218724","5.101744888588139","5.0594235673386905","4.279333365352288","12.120700467943461","2.155556090167681","8.574136632075243","8.48603578851805","2.1628343615127648","2.043275141381854","9.051458441206202","4.657460720210793","4.155172413793103","2.191780821917808","1.4922732098619793","1.9455483717895485","3.5397708867096624","2.686690956485678","2.9949795141092963","0.9733576427689232","5.170840813443597","1.6397374022003057","7.402153774895785","1.2657850845842267","35.02051694234105","45.377690637320015","24.992582545670324","32.931692829868474","57.64432226686404","11.501061571125264","6.091424221921516","21.560388513513516","17.907722360235258","16.76599548763356","71.44165853464243","90.83223932847993","76.78794735901863","94.52722517238647","69.85567831193391","79.25080072413313","82.48506571087216","85.85407656894594","73.08634598147596","87.5622981539811","5.301896513653427","3.5090668908370364","5.568047194216774","8.364221615294577","8.163215885700447","3.1699100889416667","6.797940609521021","5.0797272043297825","8.580126643935703","5.597827416632006","2.287322317627534","4.914244009244618","0.9397158770272591","1.2151292144446346","3.198212269024677","5.12738931447172","13.89953894685756","1.5397775876817792","11.00634321961255","1.2234147302087435","1.3342928248028545","3.473870841722511","1.470239506758359","4.983617865149164","4.733658307394139","2.473426593680308","2.835834360809551","1.0439206971167905","5.1626654036292585","1.6978230004732606","50.963970666383254","9.700702734738803","14.313493405478525","45.775863906713","47.1298323167492","82.98842807669567","87.63802055738053","13.120199733406682","29.36796647307848","16.084851573448848","10.73739713988975","40.515990538848364","93.60607691847599","28.49250039891495","26.97754198412382","93.13028899888232","65.65259863240365","76.7471941415267","94.24481914279458","92.85912974369164","4.514896498355581","9.057027498387367","4.493596082877059","4.040765669005681","6.022658058228774","30.780678214198588","2.8135106874498454","5.418609815678437","4.814025808663287","5.600657195322316","8.142290578448442","13.30947348193697","3.970934895137184","18.875765529308836","12.404363842448287","2.640279956558465","7.544145150712881","7.254040366425858","16.818137398612333","21.1146088375889","3.2944094869312686","1.1597555911490776","3.02072461607276","1.575225991228855","1.3366750208855471","1.5179311161084152","3.647300469483568","4.437213429965981","3.243711020262004","1.3510647965829572","65.6374586478921","8.864630675784735","25.767221505467315","9.933130184526833","6.886157634422298","21.856711246329045","82.61866836572158","30.443114792496225","58.28540010150567","57.0464545608394","81.17640038192235","22.23551700069798","38.69102221513182","93.05099257312386","39.33385407278335","88.02522680248289","32.692422642411685","88.3534376368486","94.04358063614958","28.30493918392618","10.52021726010863","7.3569482288828345","6.189163474909126","6.246327130264446","7.590233545647558","5.303889190121753","8.965135583840619","7.50865551067513","8.615781405873623","2.886314549381504","4.387447637245535","8.43915926496856","1.6108715663000823","0.811368881331228","2.541959406713505","0.9211228002133127","9.870311783031854","2.6794445530999416","7.237210207507237","4.949824688671261","5.423839876094597","0.9913514149555803","1.3547386010981142","2.4950099800399204","5.039756436404481","4.42514353010452","2.7356951404265235","3.120413315329067","2.3558009723305924","3.3642555190230157","23.046693429114725","35.95783336150076","31.052987408096","52.30717271076962","11.225547213704134","18.769289712862648","12.946051073904954","7.005439268555948","85.87735710231453","28.83166892349357","36.54697785757032","31.133594386690255","39.464889635988875","25.38637949945159","20.21818760949196","61.952962785497526","49.085845021386646","44.17656302838615","21.8506687961669","47.76387117346938","5.792712708801407","3.2223598261334114","3.6297116449236992","5.816587864460205","4.714002496512226","5.713658107976179","3.8791623755578444","3.6415721880993424","2.640940757942586","8.852052597039593","4.014024906299117","18.853093406859188","1.5606785145005115","0.8569480962118998","1.2586227762313928","1.9243819680077556","0.7264633221632464","1.6577125986157495","1.4520907192462726","4.235532212210283","3.4887112770550144","6.125174528015541","4.02688469260089","3.7033680712883252","4.104499274310594","1.7069742929085905","1.9619571719105156","3.1143710626719114","5.715625641175953","3.539104549418168","12.663617393503785","15.712620536187346","28.332410915747797","38.20890468935162","37.281232100808246","18.39488334537419","14.496169711255154","39.53330504879084","37.85283321378845","30.173789113186277","94.59594246843145","90.5571180659446","53.23293892673598","80.71773856651217","87.52847152847153","89.38980417156404","64.63156211267042","92.10751788311714","73.9929721466717","91.46326824583866","11.940226327497824","11.695906432748536","5.498070636812741","8.168134192532834","4.847339485568427","7.637307475697249","6.319461149867693","6.770858379418129","11.049937216265816","9.11567577993153","1.676576664392241","20.150383164772865","8.46675179255476","1.1184145982537035","14.479418886198548","8.118449914696564","1.6728220725613732","14.135248354278875","3.9782869159107026","3.0433844161450465","2.772912151530446","1.95274831243973","4.881843534419493","1.279636439740485","5.295159386068478","4.550449995544598","4.842951275005171","5.332669556050135","3.9606865189966265","4.101800863223694","79.21229097699685","37.4690089211926","43.910780669144984","62.311664127306585","46.664540138224346","59.51148393094851","31.58662999788449","74.39298275350652","66.02150080734258","50.170335987735804","93.09169888016578","92.77603719742173","92.25128379323436","93.31196878918769","91.78197232664161","93.5850710003784","93.49541776832395","93.1734354128038","94.16436120454591","88.23634629143811","15.656786878863095","16.723483003798577","6.798498491130793","9.515238780897528","48.45244116867789","7.27124183006536","7.011770357914965","17.84809815347545","6.558133884096708","8.066335469316245","9.414057741503228","22.601476014760145","3.3589462129527994","11.717797395503098","1.2808917353149674","11.80819034097863","5.177579125392607","2.1690497033362512","4.411873020549459","6.434860025719656","2.4429723329636404","3.153795850425064","1.7763315022689277","2.598503891698719","1.0472149498961814","2.126534688362803","8.531004157817595","1.6210140211796724","8.27448483445242","7.564902102973169","87.59342933153161","85.0338266384778","86.76576006746785","79.07332624867163","83.6668791162099","54.85917441934729","87.92609719364486","88.59704641350211","87.55259020016149","81.85299593771158","93.60141880716577","93.02395149871367","90.27542668233326","89.08526391210891","92.91091468864833","93.65981635330127","92.97318847802252","93.18907060231352","93.92289348171701","92.73759772849974","15.790501293503198","28.5955843277453","16.305418719211822","22.722766291863135","7.870134285228625","26.905207851913115","21.636389780951927","11.716888921633634","20.895854999257168","9.67950251136092","14.234659146163569","4.843477418104284","3.5742633794347562","6.908484060176209","8.571081704504067","1.1946059510431426","5.526542736680721","4.749116949726617","2.7622970680881997","4.044198355977267","9.81899257781559","3.6533309782448704","1.9853427043911815","2.281357714552784","5.053644541406413","0.9620571839597195","1.8726035133608776","1.4467455621301775","4.741263340408358","2.013659915214319","83.8766929366773","87.48224620015687","83.0001273398701","86.5960787642166","82.75156602619535","86.00349114441417","86.43619273435516","88.00244118018435","86.37462876537973","88.0149019939884","93.79329564455769","93.83665338645419","91.44477957773206","94.33618143250798","85.16042780748663","92.76425674063469","92.80308325179224","93.65123591927716","93.25279143363254","91.2329368563902","17.476590636254503","4.817199076885704","14.292382145576928","16.036680287993775","24.28356324072275","23.306272702893782","6.7857054409470265","9.855376435870546","10.718210456909814","16.358633452650547","3.9922993622909395","0.901098901098901","0.9261967436872379","12.87681247715365","1.9571999610022424","1.4472760715409376","1.312862669245648","6.372042693423835","2.1556422118342335","0.703851901846406","5.481366921452578","5.24669288523418","2.053604488877496","3.0144682393451534","2.1400093808630394","1.6751836956850414","4.728399351401436","7.616082387809478","3.1183494916055805","7.747822975068591","84.82865580318256","83.32910643334178","82.71320937889116","67.5892253044655","45.02104973661385","87.63735682073215","87.41521910148194","55.65443242782935","87.7884574670788","85.51827975231147","92.29802764094688","65.58480228680324","93.02163710126482","93.85860035070938","94.08413672217353","91.96153692375356","53.03806807984526","76.35811472298256","94.51756575925224","76.5402275903374","11.326602261446455","8.189064945226917","13.164038993862077","13.573172795628732","9.63494037603336","8.611050074464709","7.740230776689614","11.495911495911496","4.493411636973795","15.810132137110536","1.1990641450575161","22.65162406491386","1.2023609997813889","9.301703813528425","1.2683562007185745","12.546294069549324","16.469613124984765","0.9719589833309034","1.6324457665239787","15.121321379847982","6.5208182038247395","3.9866623767878555","1.6164584864070537","2.403888905356137","1.7785084441787475","2.7385499008200846","1.1280433359128519","1.3881011373473835","4.383537704249556","0.8664194077947347","65.32222151536358","71.84426924381147","56.025208479215735","87.00840907160452","87.32507674393987","41.480443963413336","78.346490111196","40.33519553072626","45.39462529671075","49.67346678295645","92.36124925402824","93.02330201235623","92.7868197703445","94.45842319674095","93.27516322903979","93.84290018156062","91.79695269920833","87.70591398920384","93.94996511512011","90.99266542758359","20.630420280186794","18.99697171135239","32.80154879184434","13.885523191004701","24.988362121768954","27.84671798732364","35.23724778143863","24.98096524622375","30.37487828627069","17.3011906511833","8.69448314634206","7.27113872439569","12.295122070551397","3.0748344686324014","0.9607823864753293","20.67551737602499","6.5800634982186565","2.7007334725797834","9.31010727290621","12.078075614640383","6.4942563666200686","1.4785593832811372","5.829166791413431","8.217245635690354","3.471454605204195","8.681411142496543","2.8638483705178097","1.9536306931858303","4.7417544491461845","12.673290203327173","82.88843402477369","73.01883987171045","87.93449550977284","85.94787079373776","75.17966547243009","79.46928850829897","86.13460519342873","78.12679197196559","89.34806443451126","82.28137364846279","93.45675579039371","91.805624565239","91.20286176782109","92.35196877053914","93.70309171627082","93.18812513725568","93.15191208966218","93.82558371582519","91.4845636512403","92.93585477153617","31.251493286185312","29.728543206263264","46.600271396723855","12.427544074849076","14.555994079921067","18.57481488722172","16.34953161592506","30.57749438446489","41.120337995338","39.29023173671273","8.746355685131196","1.0462728041560951","1.3783547257876312","8.058634950933607","3.9314812996956903","10.33227348850756","5.207007927963199","3.823601270461764","6.319929642839693","3.470878482972136","1.0466419010554868","7.790473364000594","7.725788900979326","2.733061028351754","2.30552727708246","5.816206694069289","1.6752423118343902","14.099162219373303","2.302832687996739","3.2374847918335856","87.56412150894008","86.32494918699187","87.61019022312202","87.58050847457626","86.70455505788895","85.97016828148904","86.94840857524545","88.1239133200458","87.76281347631513","85.84267757593743","92.70511876082585","91.59424334236964","92.27630950485592","93.15499293405784","92.62929576343701","93.44938980617373","92.89755122438781","91.7549258622757","93.23852643756109","92.83772791302106","41.81069958847737","30.981558020931526","22.464314373951318","43.781130441059695","36.46134567187199","41.05915383870655","18.697489313614703","32.39001362663033","43.78339175631572","24.883310358170693","14.280811002966487","11.783639883833494","1.55770648529097","1.726844583987441","10.605438066465258","2.7386829759536266","1.3775860378468479","5.818297238567278","18.90912604473646","9.274728514569308","1.5287373217698075","4.377391816308507","3.002795395112567","6.960375391032326","2.041240172081294","3.5706902153046456","6.482796121197475","4.444843263938742","4.684384393321627","2.6002459286806827","86.74857021817411","86.20777565328235","88.01628485845674","88.29850116107241","85.5895940220978","88.28990022312972","87.13827731895289","85.47070329109619","86.76108896616063","88.00434837145127","93.47440218583594","92.19681413106322","92.46234171517735","93.29769900250368","92.6271405556992","94.13857529018922","93.81430988158026","93.02686258525044","93.32907628759006","92.70077346748057","21.938211222257724","49.98793727382388","48.46956017959735","42.821342546410065","18.69350662041335","9.060238607471153","40.809240191941356","37.265913030739554","35.586120057147006","33.993761271141004","4.431462651544779","3.6445526475958614","5.122631955936473","7.547954589939322","8.284936260452563","6.465141084068652","6.691623771642489","8.763481807237795","8.92442984151527","4.411147589543581","6.593082280722465","6.7115737905695045","3.3515894749374926","9.506639194139193","2.4485036921881074","4.785959645527235","2.8664302600472813","3.7279050859706704","6.663894993169804","1.887014284874493","88.1655556493123","84.86508290342442","87.03158429893871","84.45027174487703","85.6646468070681","87.86574505979137","83.6810414281474","86.78198502267693","87.9353550798505","85.26015228426395","94.02854530274719","90.34071584338676","90.23423495199778","88.918358393491","92.92754659989667","94.07759429723848","93.77421854817877","90.40875506474934","93.82883873418227","94.96495978338774","23.667090588925845","30.27272507669638","28.884104772156437","20.445897160698603","46.12458163781272","22.17785136846206","13.389070345634476","40.328073288886756","36.72339405560882","39.292432354217915","4.8478015783540025","1.0037093606807768","2.4044851501897004","5.765009998536799","9.122269068608663","7.07558738411733","6.76187914210951","10.614999878602472","3.2560543414057883","4.9788033529241735","1.4976580446910708","3.007099689021886","2.2519185753651962","6.38175255543086","4.871989712415244","2.5582700658769313","1.09174827657623","3.680498804443234","8.854136555472047","11.175844324835866","50.68177980412023","56.22537597966533","83.74767854127975","84.91096136378039","87.6736586908401","86.4981400067636","73.99454164639178","87.65038472983888","87.73930926283207","80.4664907651715","95.20453866825919","93.05927495103721","92.31629839773046","93.9234106922495","93.85580561641108","94.44710292299717","93.92917705735661","94.08047690014904","94.82103420146834","95.42738787540827","31.172590518673182","34.345760054867","42.69932181456541","53.24606318230123","48.13111545988259","32.1826061262681","22.81605547145857","59.72641509433962","52.59665812904013","42.510151166772665","11.270710202499759","4.56977977262078","1.2451495653028146","3.588290840415486","16.130056673832325","6.817415595048885","11.207910336717307","1.8689986282578877","10.613554660168408","3.374978936472401","2.8593508500772797","1.8220669342496605","10.282822268532302","4.000961191877929","4.151866996985345","4.777492701052818","4.853692522062239","2.137031966188464","3.632836610528172","1.8092056641144647","85.62040236586039","81.01435406698565","88.38745418903946","88.58489967651225","85.54117147707979","86.88789619229951","87.74454736217385","83.68461309650279","87.61904761904762","89.69383445945947","92.83014363585724","93.77941763063421","94.58090756838664","94.67441490208566","93.89354174578745","94.00830964356003","93.86232013851573","94.63273453093812","94.44311711065981","94.3882609557803","57.97635571722587","55.561493429203004","60.294950390230696","42.320570679866066","46.85467962299993","54.68026620370371","69.72177545190485","43.0290506867631","60.433128475270706","63.26393067757853","2.7544615384615385","4.108434929130737","7.525016043543366","19.57639866077927","11.468640817024603","4.4658259834293075","7.709942084942085","4.306185114782863","10.886409044393549","6.651045861707061","4.372190765279319","3.07201156522001","2.538611752174685","6.931033494742271","15.499272543721606","3.7511121315615763","5.297876726448155","11.437044867277425","4.265360105807383","9.871281962080362","88.65650178696048","87.78595289441414","87.97958837977471","88.21976257868278","88.25907503439517","87.482481844821","87.24059389235701","87.52331694081737","87.88252295137708","87.55452966837491","93.8615004778592","93.36728603827636","93.4898484757741","92.9068399752796","93.18960707738901","93.5908656906429","93.61697891572261","93.99150192503342","94.21995189918707","93.7781947383129","55.846439386539025","53.73405751418458","48.161120840630474","60.52733711735313","33.92072659065107","59.25411673000097","37.492063492063494","65.94454283011086","62.87038371032032","49.36582272305966","2.7953066456320252","2.300819973075511","11.241744683939329","1.0384791460858251","1.8935169470979003","1.5757694762161896","3.4775150104153907","14.248411095235749","2.7603242361743967","6.495043645509691","14.289111500847179","5.539138999942059","3.659619825901581","3.806155782659514","15.611977616382902","3.5988182984691592","3.40341503078174","1.5640707231979185","10.246931407942238","6.0705057764842145","88.97422876729719","85.3624939072202","87.11027100501232","86.97987144790257","87.60037938665823","87.25781150633823","87.47402790145445","86.78409428123278","88.14498662249967","88.02797499205256","93.8459391571309","94.69351141233928","93.37530632982009","94.5405544656481","94.1934711469391","93.86308895833749","94.08125798212005","93.69561321412215","94.61944085165655","93.18344608038201","48.02281925008533","46.17420655156504","58.986443807395176","47.89113325698692","62.50601366304244","58.04329216093922","52.24034082562068","45.91980558930741","42.78900249498557","59.22098762430402","13.98644791382263","12.533574254041119","12.430280842281137","10.157032261215718","9.161453028759881","9.523349125012086","1.8135735026330035","18.605947504907782","23.94668959587274","11.712327096191846","2.8495050086660205","8.795212073900599","2.297053517739026","1.8277740940409952","2.0552677029360966","3.705543703790292","2.088265646816002","2.512729354343045","3.145432055133416","9.329312078127245","88.60435068098536","88.07446560105288","88.00745431058216","86.37572278732115","87.28117639569673","86.89247334619216","88.92835246612123","86.43237306750021","88.06550449022716","88.23863755973306","92.23885939271014","95.18520730081009","95.47253883948996","95.43485637862547","94.0661400989309","94.18824889845884","93.9791986904358","94.11565033345313","94.08880739795919","95.29826097337737","41.76169878096736","56.34458389179968","53.41506986760639","50.658950542236056","51.57317073170732","59.89160538630504","43.54231743611186","46.975977504666325","59.56995978907322","41.29553679131484","1.2628523043425668","13.043900072762552","4.703691908180014","15.462764691886747","3.326986916617848","6.400697201510604","5.4775960514855315","2.2728924858852895","1.0457293291731669","9.547750957947917","1.1190999067416745","1.6309887869520898","9.679626379510367","2.013862034089895","17.788447376947776","2.014239639749285","1.347845534516177","7.660722313801887","5.027675276752768","8.043093270365997","88.8444958469141","89.63287045843637","83.38769113473676","79.57134990893303","88.2045310184205","87.01652172064045","77.47554232241599","86.45668955516697","84.52857354591458","89.51318027210884","95.97248529558368","94.68339783744962","95.37836060346375","96.13472557749516","96.13581502982424","95.09300195164695","95.10375425263116","96.38294904242811","95.30044843049328","96.12083557361053","65.01048320249646","60.8607508365697","62.88925026091599","70.53984078205532","65.48384747943011","63.205542948191784","66.48108528639503","77.00645534251855","73.12262471737144","62.59022329511165","12.122612820824717","11.316807356411317","10.855751673767498","5.109666149068323","14.177934548304918","7.34800175242175","8.511360605252309","3.0684288960007815","5.668537551327843","15.352646672823603","9.70596121190455","1.2202488824453306","2.28746504848593","3.5568685376661744","9.183494293239685","12.468297233478122","2.2779805352798057","11.454999265893408","4.074955383700178","4.6561004784688995","90.32619969941365","89.61338841224446","90.39526527161277","88.98199284792314","90.96907914216827","90.03090862901178","88.89599454285775","90.44971139818593","90.3094789837751","89.14802575834604","95.26132404181185","94.16935306249124","94.93484824408073","95.53368206684503","95.59004975124378","95.40562088897747","95.21551122890222","95.63556033196011","95.51666600452901","95.54425837320574","65.68081991215226","66.19831490770954","68.95048729124835","63.86821232458816","61.82085877724409","73.86844985959735","63.56262327416174","67.2329627839536","62.579413967195684","62.941147476340696","1.353094351561169","38.16215701219512","27.281539281733146","4.14212703820881","11.461086637298092","10.655537060609028","4.3118752887959335","16.246498599439775","4.028511736512228","2.9526556931953167","4.548176537517216","4.436839931559384","5.113398360361439","2.2388941398865785","3.1676251844268464","7.1323286105345485","7.194416273936646","6.388518832505754","2.4300862094860474","1.1625832540437677","87.82724731000593","87.15194316223862","89.77973755061373","90.2955457040321","90.00741918388977","89.28661936137861","90.53116806225154","90.0832877634291","89.71823813969277","85.01671391698049","94.60101393157959","94.78731447216585","94.56617353058776","94.81625603049496","95.5368706290223","95.59022526466609","95.53157474020783","95.07404894016207","94.37615793772535","95.48549760775049","66.28412365092544","65.08119511357503","51.29176545352333","71.34419404032825","67.48604707595244","65.51874772479069","68.9030624665271","72.34058112324493","58.023261425606876","61.61369193154034","9.121353024790999","0.776130950941754","15.35682242537404","1.0998993395693697","6.631286937643227","1.9667207018213027","12.243776577954035","11.654955754334637","9.356525970076634","9.474483299049858","8.876503373423292","9.78353955644804","3.5640044587714277","3.83492252681764","3.1713030746705706","3.443526170798898","1.1115031757233593","5.141288455226331","10.051279011174675","4.107529468366611","87.67922852429895","90.19933904477236","89.41004263985235","86.76296421622536","88.62173700643572","90.1920961326902","88.77903160925624","89.25164612527435","89.63342363697934","88.6506187489405","95.34317637669592","95.0745314310834","95.46748412524633","95.17932973145398","95.41375476493012","95.23174059394108","94.9590900019956","94.69088719389804","95.05691315768526","95.07462984794294","59.60610344659484","68.5619054570226","51.92431045542014","60.91658084449022","65.81554690195692","65.9588924749448","71.46503938539337","65.52653748946925","55.80326586486751","67.29525729599489","5.1090616308007615","30.39191701732068","1.4606549781755225","27.190644285954424","12.437810945273633","7.552365030976498","8.269729529455354","6.8034029237764635","11.812456598261537","20.44963144963145","2.747877048199976","1.1936963424673646","6.347208486918997","2.5204971463336907","5.508029416178899","1.7327547508603922","1.8619676945668135","1.180509546467506","6.331049489810921","2.930192473427176","89.65830568645268","88.31494590055907","90.32858290692265","88.34588859416445","89.89871222854244","88.46872478661514","87.8955662506921","87.69159312587088","91.14428490100576","89.48328912466843","96.62802950474183","96.38489423574872","95.68421262273206","95.97312760401093","96.16665005481909","96.2085402184707","96.10674538274363","96.49203187250997","95.65807868983424","96.3812324874307","61.13845184125676","71.353967037179","63.170631367519306","65.51864634263254","65.83081935561724","62.2554660529344","68.12300087234662","53.77316965814056","66.7308247521894","60.65249867476267","13.484259102660126","5.985975299056124","9.682144426541672","12.370450996166769","1.1804547653604258","10.807389917970937","12.770099279735254","6.274356975837881","20.704739347946926","4.469834124382248","14.647210399837865","2.8150213573801612","1.274825154188922","2.572117531481647","8.266343539425463","12.834082308420056","1.7431002282631254","7.710116047356699","1.561696074574014","13.66368135753005","87.73392743475493","87.6413536063699","89.83205588229049","88.17968403020113","90.91790494256507","82.94678821284714","88.78760060630644","90.31706493287174","91.183416979461","88.00398735922289","99.54579326496575","99.57829730921924","99.61700769530835","99.56340368367094","99.49588750331652","99.40554120519444","99.54212777993848","99.41433287189862","99.45461628359953","99.29933826391593","47.3412681423128","18.032006920415224","66.6553089995315","69.03329065300896","34.28237382813346","40.81422534909161","38.26041936318923","63.72230301993327","47.324515905947436","23.28120961488757","10.711469377026198","14.299314134879596","3.184602306166489","1.7540431998263324","9.753134626231073","0.8046481034860777","2.1191592843494877","5.709843216861746","2.1843880501124318","7.63285863146926","11.849187316813216","3.973282644279001","1.3342788852992935","6.599617874960195","12.75773882465768","1.7583239805462028","2.4316601067558095","3.6007879185817466","10.707007367926007","7.065217391304348","92.22171962757737","93.77620000755316","95.29726269814375","94.7955460612133","95.24006544674928","94.53224716570313","94.37947516578187","94.9083732731886","93.05600060317042","95.18691412867523","99.08334807998584","99.20094964742567","99.17016862599074","99.20401361509006","99.21712733663524","99.25911483720023","99.26410755351141","99.31460753754605","99.27744129210498","99.23793995675753","42.37761037065654","34.448728841252205","39.56621897683314","70.62468598224753","32.66902670337835","49.150890265563405","82.36075109059873","44.073859863333546","53.7669974274164","15.520723753418894","4.406286130261637","8.966908097324024","2.492089470812875","1.7477694926942806","3.5308790641665233","1.6332959350996805","7.8455526293433016","0.8849749945640356","9.945418850991306","7.404138049820225","9.503806105043408","1.1905694368293256","6.3377330819191275","2.733437663015128","1.7440180705486827","4.521963824289406","2.152478095985354","1.3198473681459413","3.0586541921554513","9.910883779793291","95.08697208978008","94.72431500431051","95.31449612985647","94.55727204220045","94.80021893814997","94.60985433056047","94.77077632417438","92.23095925024985","94.4440252046938","94.93564003452546","99.22674027674559","99.05931631819956","98.83126757076931","99.03965413373967","99.02206531332745","99.09435701120091","99.10687388137725","99.06485884495041","99.08256880733946","99.18131343494713","38.196931223821","50.11533645290977","69.4455764075067","70.81825535356975","43.3400990855322","58.62559442934783","24.515795816475855","15.812310577153696","66.19691406498715","57.83845957229274","3.850872850162516","35.321851876105036","4.046469129356481","7.875437947468066","8.886616823226191","11.793930230046442","9.508196721311474","26.114717463020114","3.3422032996274615","1.5418263712943112","1.5366833906853345","8.691080207155814","10.44784053156146","0.9852750108271978","1.3859556494192187","3.4121274409044196","6.118812400094337","4.901705167648746","2.1078918396391075","1.1735076626299432","94.17457341438933","94.91436298076923","95.05184233885437","94.62973110863362","94.60628299696708","94.76944512436218","95.10352861598587","94.41647338349267","94.53749130622757","94.42022009551316","99.21293266594739","99.13230954106066","99.07991774216424","99.2694776410511","99.19781350938842","99.20975229455331","99.32322301750406","99.14111300397501","97.81644671491415","99.20855539226969","51.807948149411565","38.636216879399036","48.452896910106304","64.13440621766036","44.28253302488487","57.665174045285575","32.5160701876303","62.12704315489061","19.339457567804025","41.076358930112164","11.432916892992939","8.144396551724139","3.2138119985213853","10.799647182841039","2.159015231261681","3.1145236292851735","2.1337524761002498","4.527476412488675","6.928823055048597","29.159714200145466","2.0130006290626965","4.847938144329897","2.151829316062988","6.656545297489726","4.417119636920154","2.4787608785743886","2.4789461179017396","2.2289092458457604","3.6453538833802375","1.7269606548719303","94.5742559355834","95.14063614855985","94.93470219672379","94.33126660761737","94.54782707364122","94.5461042258289","93.88297371148592","94.35616128484986","93.82994308897278","94.57530335474661","99.63408166872901","99.48747051625375","99.65976147861991","99.28408144459605","96.51354367814055","99.60878031510002","99.4290780141844","98.5912744176144","99.59140355531972","99.42554131683606","36.87645889167459","58.58928419076871","12.347437386331267","57.21510380144919","29.66256866335339","31.489370904608467","67.79700854700855","37.80600910208571","48.18523153942428","54.467653969691085","3.1321454765089087","3.0802983764809126","7.309815421769882","1.946650552486188","2.5605803695992786","12.527611923976991","8.308014891522959","6.073535494263884","2.4025960071347217","5.557359658807993","1.3146085211974026","2.389051499090262","1.5557499138639317","2.1867341717609676","6.100084907662916","7.963495104299702","5.624983693808865","4.422891910866117","13.616896762695182","0.8256257511626692","94.91308601098652","95.08440446393284","95.16040917054424","88.44896885917133","95.81518474016221","95.47326643702262","95.25127046866177","92.94792020213448","95.43744828105018","94.35187107244627","99.26117538668699","99.25169827342202","99.14179832260581","99.25244902658943","99.28657201384475","99.24423441122852","99.1051930758988","99.09893930256483","99.24953095684803","98.39983044561012","48.89159349734852","67.21058717718104","73.39422322999005","48.53387480622694","75.21024881258442","68.20396722725313","66.36045120492223","58.58638516008514","62.48418976568697","58.9020348135303","5.475253765731302","10.835517622338237","5.666659412878375","12.020676081925732","14.052847202653199","2.5603527306063647","3.1049227058436575","19.77383013745484","10.427495491672854","4.664438270533078","14.275225508705686","7.6053773231214175","3.026381810019278","3.7638512357539544","3.193724238798032","6.950993929604252","5.518980621183966","11.681239855489817","14.860098753820832","5.406734477314491","95.02762430939227","95.29978002970539","94.65479678461422","94.78435494163132","94.87856388595564","94.93058161350845","94.89352087216855","94.64020038042148","94.8195905440561","94.84028092433168","98.78120072986235","98.57695446964051","98.83373152818335","98.64429006876018","98.78508810767732","98.77359157418533","98.71524889840556","98.95073961356076","98.87626508800227","98.6913501436323","59.20323957535296","69.32295046506599","79.001552762002","63.2175945969348","67.76239529339719","78.9100642398287","68.19903356405904","60.31529902346659","55.128456560109825","70.64232064232064","4.813067784765898","3.636402874592658","7.474600870827286","13.758218451749734","5.414252794348847","5.482413889067283","7.088260273077678","11.35490242383907","19.101797690214482","6.961847865939137","2.669890156093972","6.201715029070539","0.9418743820575531","3.8725099601593627","3.8476911188680756","13.910761154855644","5.485503172435949","10.996395468589084","1.0098890433596517","7.897273847142627","94.25514682337874","94.24697829653235","94.27185196329171","94.29956977885124","94.45899353769053","94.04350861304503","94.21303716553844","94.66706782752591","94.64713814803716","94.13616315452181","98.68553915924109","98.75090931672611","98.55478516837196","98.57120036918052","98.6396485758821","98.51517564817273","98.70638478850277","98.62374745056309","98.58637814827954","98.68903573263415","79.63940480069512","66.96744325610305","53.854843264614516","72.72903350765058","47.55544028011931","76.73522690173033","57.67803268725717","73.42098930188803","51.8964883051691","73.10553332173308","1.3163013876280638","6.441556160533943","22.30954465849387","2.633593630378196","21.466261764769225","15.754524543205589","12.347773138482951","18.372845998391966","11.611643820923698","0.8534275437887074","9.133234010854528","9.16961826052735","1.3292569453675396","5.248516320474778","1.7459567317790379","1.3671089666264575","1.4567881542919425","6.249173564647079","2.8661180196786002","2.3590950699620765","94.56405242276668","93.95663395060565","94.12939071475657","94.87774306400016","94.40094854518763","93.9681399875281","93.7653411880216","94.26312817617165","94.39231246591572","94.39947289156626","98.7327657917559","98.61042095549088","98.78245173164387","98.63456510987069","98.91494822550668","98.83403621930043","98.90602042803278","98.77884034270681","98.56648629468641","98.63321309852182","55.60906515580737","68.41041953232462","65.88985332443085","81.07635893011216","74.33014960696475","85.23111853660626","64.26903520066342","65.4133068862921","64.90979381443299","82.66981888799764","4.511588504898234","1.761299312026474","3.1525147103036546","1.3465050273921366","7.8370505815066025","11.233744010951403","9.625528575787959","1.4519804666304936","0.6211719734155771","10.352931030765582","1.0061207870333886","0.7404203348430105","14.247500324633164","8.428084883416295","4.0119223464866005","2.1940554890427357","4.063439687059262","9.706617550322326","3.4968405269358467","24.298030530728465","94.17867327029866","94.08624462385875","94.56120527306967","92.17181177881014","94.65406427221173","94.47184159012197","94.37439927630463","94.655885671305","94.11020230831711","94.32152835460244","99.4542275288341","99.14758157219913","99.25895722162143","99.20282024482276","99.09163487980129","99.21861188699926","99.2388841687907","99.25276671093404","99.39503290171939","99.28515818529266","51.83194599200367","62.87898588604286","45.907221793883316","54.97903222301892","44.17977332550197","77.03587270143404","57.410476730492434","70.0083793481297","66.62905800957957","63.81581770587478","6.628210470905621","19.758322322151656","1.4305251047387502","2.697939557450882","32.83662905286868","2.628628110579204","2.0432900432900434","8.811545719677474","6.106753812636166","3.4504432259043325","3.155951854836613","1.0263618522251101","6.926473608543848","2.2739863349777085","3.7214289450285056","4.750476091096444","5.605900948366702","17.351539683352975","6.716037457404276","2.4610444304064014","94.96101456082668","94.96126212317331","94.8692380056444","94.72690899482882","95.20888219796764","94.09466651568339","94.84093508051666","94.78395236210828","94.0864262591282","95.22192623719657","99.14892864093989","99.2350733054749","99.17555685296252","98.99698034575924","99.26944031698861","99.12181303116148","99.24372575760259","99.13432941509701","99.0818858560794","99.27274657606965","67.26104797301652","71.74001673711993","77.74883882449973","74.14900655184924","67.952599821378","79.75796640556635","78.2126367989056","73.89363269905942","83.47751422131587","83.18065225357275","1.4196133077861","40.59503424657534","7.244728322687899","3.54594547702184","8.584220088242928","1.4263559118411568","1.7193518538443329","31.887677539851456","22.824266417244903","4.702093397745571","4.940241127703533","1.871279463975868","15.323871238554975","0.7733889959323486","4.672135457748331","12.850282336798777","2.3967726625533934","13.355570380253504","21.2937933958764","7.069408740359898","94.94862209531682","94.84817147692019","94.59413754227734","94.46468001585295","94.52134992729127","94.02780129037113","94.81388226009508","93.593009869973","92.87423457371644","95.26558675709508","98.61335224753968","98.60978456966996","98.68705865654164","98.55013309671695","98.69789823791663","98.56963079813538","98.5558351348478","98.68926793843102","98.65192392746572","98.6661463691511","69.49776037045852","78.33184208803439","78.4662340988645","68.03075180764876","69.86001374098248","70.15557155637015","74.31046563475381","78.3197074010327","81.59070211197363","71.50122763942476","3.1158092152934658","1.2927153453672342","1.3287338699373963","12.182283050082718","0.9894732253775909","13.399536287676625","33.059171469896164","20.830873510440583","16.729980246163198","14.992536658178945","21.775265091316466","4.863798272813469","6.24383744170553","6.727224151749933","3.464529813810983","6.522946700171935","1.4659052030423454","5.2306803560643855","5.319651480159563","10.270256032030344","93.99129500876153","94.30328562562299","93.79603986510674","94.14772620457579","94.15072266877995","94.53608441326386","94.19927420416299","94.06000415384325","94.03448665336396","94.38092372498872","98.60158404638993","98.54933843456082","98.51992342597845","98.45908325206135","98.53793396778137","98.58850615425484","98.44048714862281","98.68703536133143","98.58440360462642","98.56182724193577","75.71453392407263","80.63518830803822","76.94216495069763","75.52657973921765","77.31860926580968","71.10937905949596","70.68098026458469","83.22073741502362","72.16295286069379","70.1947283485745","4.666524155622061","19.10698384429462","9.54485955237012","12.030219195573526","12.867381155894536","51.428694379895","18.76238995587577","41.68069016934711","3.1443045550734237","28.55009738151915","2.247872032044694","7.7350120859563845","10.665870253986391","4.819468324295729","2.5606253988513084","6.8235110207909955","9.54349199663016","3.3615712512814975","3.2311800946614135","8.323439838951117","94.53933260599676","94.31084495181061","94.86435378480088","93.88032381635311","94.23821153484877","94.5219628537625","94.02701124526737","94.25412907964369","94.67481203007519","94.23702061293899","98.63299556121457","98.58832303430641","98.43528494471222","98.70067798410366","98.80301018149625","98.72338920715751","98.78029379010447","98.71094371651371","98.69137334870113","98.5918240666844","65.55973311890118","70.63593039052897","69.69328351724738","82.29571984435798","75.84066777674458","71.08154877784987","86.53972701606911","72.78363972587839","78.32822681569067","75.03367759317467","40.331100231899","9.91875570230699","30.878138131666844","4.650354964069386","5.220288781932617","25.812759191215967","6.56798245614035","4.947849323334196","2.0580348383439797","2.386084407466483","2.1840232277293867","1.4693264693264694","17.015367524532493","3.391766268260292","2.5734427002804057","10.224516936556364","4.457875844594595","5.051676861421641","3.3345595963842762","2.4759539160765245","94.3244005641749","94.62304838314782","94.4359713042987","94.82758620689656","94.27407087457041","94.80007508916839","94.51982710016914","94.24015681248468","94.79342881846547","94.87627529451554","99.12087912087912","99.0759917157878","99.17590676782146","99.19966003258021","99.0074879909579","99.02617486435375","99.13869492787013","99.15263232380414","99.18719298865604","99.11438459490638","77.50689488199751","82.06003607317702","79.17391304347827","69.1637251056783","72.5036869957491","76.24538545059718","71.90032502708559","79.80605538196315","67.9286478461169","56.061427672819555","0.695264331627968","7.295959529883779","18.50218359493233","23.591678344292337","6.784577749875523","11.214492442919926","18.686987104337632","17.938848295059152","9.229461015175302","31.50009686376649","3.4634120229109793","1.909350923754799","1.5321404903909874","9.179780639008108","2.844114080868786","6.662429827348798","4.9383036084612195","3.087809585075587","1.82795983786791","8.068033144352377","94.92089768430557","94.67520241009227","94.70801889455558","95.24120922237584","94.61835294117648","94.78447788211336","94.66606396202961","94.67929207530155","94.27270503678338","94.48258950465915","99.2308510261227","99.42492125844925","99.26398864946351","99.31086883536832","99.12566371681416","99.3344072507125","99.33534850011489","99.39025467913257","99.23174962826596","99.32328296338288","83.45851716345636","80.16859303032936","82.4889559314729","82.9018479776848","78.65729092746705","81.64764331755788","80.13149385643457","87.11493588508552","78.0119241192412","80.34401774453094","1.406321876848262","8.768902215415148","7.25179361601581","40.857259432645435","27.29895029062202","14.918140144073346","7.466457571005401","31.7238737684336","12.944683240814738","3.2819416882918637","1.1941009822870607","7.000736919675756","3.24206148185672","3.506989922749993","4.634661039303613","12.416425375098711","5.160616348916166","3.961181479228918","9.640705794551948","4.644361567975102","94.39307123541538","94.7124793015204","94.89469123243283","94.85968954186652","94.90886472018548","94.32243034550135","94.73358000112691","95.03086884505345","94.72455912521409","94.98043474190709","98.94027999291157","98.83239571170789","98.85462399093613","98.83912588837886","98.64503918065554","98.9179408947387","98.93236543909349","98.85476590848748","99.01252919940539","98.87262623223546","82.16376177731357","78.40283669429398","69.13675232463564","87.71776259607174","78.29379760609359","77.35091242469223","80.85239129967083","86.65056770038977","86.17293425428498","81.75437066748049","11.313391183011381","4.875290843064344","5.8406889128094726","19.944272715399016","3.976625776097278","0.9874131944444444","23.785337598340107","19.682656347953913","38.182403433476395","19.03955997461392","3.8757082611057934","1.705893328357811","16.718003186404673","3.014222033538527","1.8625511146286768","4.583557227297152","2.5100980957876518","2.6725419132792743","5.687178387650086","4.707487195325973","94.37758591373675","94.42442310232269","94.50088756279035","94.28893905191875","94.14959035779835","94.40183472441537","94.19953158053794","94.7866852430621","94.26717960322848","94.12662808889223","98.98197242841994","98.75128232339311","98.63503585022573","98.70368732867627","98.67554359373894","98.71546936820255","98.72591176939002","98.60990596943564","98.73968147349443","98.83025412330997","79.20343377562804","89.38852744822894","87.85431983341124","82.77682431404922","82.38145966041263","73.38564332498132","84.86156754086389","81.82903015838576","80.10368563213383","81.05720144857979","1.8196874469169357","28.88898508690288","17.499565821465787","1.0542985443738204","22.46752971587177","2.452588360523972","14.406122009053677","27.61660487973101","1.5143344047285199","26.99024194060496","4.597192196494153","11.62088269756542","2.812047875838485","2.8946753550196007","3.427046451408339","3.2289680016952746","13.151687031196163","15.124966406879873","2.3084146277844435","1.8757234557508156","94.32308649188609","94.50198304543149","94.30961556537268","94.075583479557","94.34665368338264","94.75175441888393","94.43584905660377","93.85608821252572","94.27834954561703","94.25559501663002","98.79919237717402","98.9943242284498","98.9523691347739","98.94417432657842","98.9192434704293","98.69001066477071","98.83883777411407","98.87287117518197","98.92383666389367","98.9430260968096","82.75145647703907","82.81293649940905","84.96838147325244","81.14926268861454","85.80813325139334","85.03987789410323","81.70937216436936","74.98582828238783","86.96296609990048","79.66683317768172","3.5776408186054502","10.248616468220694","2.7794230558297683","16.86477477082328","32.293183250396574","3.481927448977374","9.11856726723487","7.936680747289117","1.1656468154787556","9.100264949966059","1.3615162707934538","7.202988529937915","5.5846190615290645","8.00408719346049","4.332225913621262","8.846537512469155","2.0893774453700993","2.8828828828828827","5.267362590541117","5.630642383760372","94.54405207608225","93.88875266423977","95.02775948056836","94.30859080633007","94.7756422311656","94.51732510210611","94.68442907874712","94.7907081557154","94.18400979376588","93.99567460919714","99.19742610663272","99.29486384494092","99.21579040538148","99.3421285325222","99.33807652826448","99.17979060745097","99.40249960225566","99.31443755535872","99.29545052221633","99.26526565515287","84.11853124328968","82.9362193609103","85.23313833448039","84.76100534437981","87.21320530251529","81.00395841489409","85.69917997410444","81.19733828803525","78.89264361840395","82.46287262872629","6.224220335653958","13.943866234430985","10.036028996831185","42.16767487060776","43.85038220389934","10.947669877636033","11.888326430434116","23.848913907569344","1.515814340084868","7.8267856755054614","6.151373074346952","1.7803182917002416","3.2769583236800783","3.4372812815926586","5.918625629426179","3.1426908629173056","2.021961778059339","32.12882327952421","8.761448573534055","13.304218150830849","94.74168701859853","95.04248759211912","94.39939514223609","93.90522598069768","94.69818552574438","94.48371552322202","94.45347650194714","94.70271292182626","95.24319047887218","95.05733491498616","99.67630671265589","99.69874714252805","99.51482097956583","99.68901846452867","99.59530698095458","99.74300804650669","99.67479100019442","99.57131722525331","99.42226239211725","99.7007684408088","81.6906920618355","85.78548814922563","85.2466823977659","86.3276347111015","84.10796892729336","76.57590614603397","84.13835004122727","87.45134503935645","90.29475817754489","87.14236171319577","19.863860044657375","38.01306678821818","1.252883536856363","1.9710763601515877","17.324972525696555","20.679791351169445","9.066947812335266","18.16905425268192","17.432714892149892","6.796905057068353","8.354691256902793","1.5841373627834037","12.971771274945715","4.029835284367554","11.741843371582677","1.4181730278531333","7.56831600397095","13.463187225377773","3.523410933821606","20.877489910167945","95.60878243512974","95.3301611780858","95.104855469488","94.68998109640832","95.65217391304348","94.8047051726738","95.32942238267148","95.13150953349914","95.13271014003078","95.13924241567207","99.40902737229507","99.34542237947811","99.36983343069052","99.36135583625234","99.33445736090158","99.19771383943628","99.43770555575202","99.3606998654105","99.369297546284","99.27246335764356","82.2308210691072","83.78772701537389","81.73212312891278","85.80989476855538","89.43720721298851","83.6767104472487","87.41510444563471","87.31287022078621","84.61126350077147","85.59475545587854","41.392416187002944","43.17557850699438","64.83318108660664","3.0628328008519703","15.299386581198396","30.52821415379267","29.27100359594639","3.0170753626909743","21.87282078103208","18.632434076197924","6.4623142250530785","5.611100852085367","5.069548526202309","6.581537642990157","2.751560162979009","5.058541777541245","2.6936547177585495","1.4911287278218195","3.077169645003606","2.892111214580285","95.1418526387035","95.21839341041336","94.83180773722077","95.31544789072522","95.08983162449441","95.16156192115554","94.67718551712451","95.1793427230047","95.24945973879545","94.29392524247982","99.26141093536903","99.32486030072802","99.24919873213747","99.3248974975258","99.19809814427137","99.31929376728355","99.37610776320453","99.22294959816914","99.22896532120524","99.21931832295382","89.12833086005548","81.83513290837344","89.14173698116423","86.75003753834274","85.61934327314066","87.35761132205731","91.43945554937294","83.6060929634553","84.201426410201","82.92393112536998","5.0120202627285995","6.619672486715107","5.054457705602296","5.946333203074118","19.67808930425753","31.67886699828399","2.36655272153563","13.171955783416617","17.69214068606166","26.436756662904763","3.2837919260895765","2.290373678880262","3.6243470845325656","13.528772497150582","2.655638938801395","8.69268702129892","7.670769718421469","1.907517410897173","3.5864476711893993","11.128272042180386","94.78612149356287","94.98956943374242","94.54675554551275","94.7845507094062","94.46857531349147","94.8176185902868","94.13350425094727","93.51794409038783","94.81392466859438","94.73823473823474","99.1682299224861","99.33171432116711","99.36861520998865","99.36291078981365","99.32394066292852","99.33020288827855","99.3679290380836","99.36105063806438","99.3141070064147","99.3655674548475","85.60301181357912","80.66133800503667","82.45412096861766","84.40091568762958","88.2697758309714","81.80634521071134","81.6136693495184","85.43882834672965","86.75415346822678","84.14424111948333","11.773943722571207","5.5428349246122615","28.809146725099254","57.49452719234236","31.691639615624396","4.5489640972847765","2.3423775131758737","6.319726855577061","26.49814158714978","8.169927621829428","3.077044771396931","17.076923076923077","7.523958221169376","14.411366711772667","0.9943370643128705","11.775749674054758","2.9415592867369518","10.355676425105315","34.254650248886556","3.095669795221843","95.13858874377526","94.53570484498319","95.39894068195956","94.58159666559794","95.04258079070554","94.7587872384582","94.94278400963638","94.84848484848484","94.79300203604555","94.70275968525281","99.56092983729617","99.55915939309172","99.45011086474501","99.60453279895015","99.61188104774395","99.48309928727683","99.61099126498569","99.58034528552456","99.58766170562939","99.7237226600549","84.3314566441319","85.08541109481494","85.81964031569413","76.70334459091404","86.22572155643039","86.33537691045679","89.94894299337524","88.54847348687734","85.32039770487495","83.28396567495753","17.21842818428184","7.661839863713799","34.587267742918065","19.337586184676848","19.965940201340835","24.193970024398745","51.23534247760807","2.5126836948915323","1.9389876532733676","13.035671272472463","4.405899023827018","4.903879668606055","25.551656920077974","1.6269430051813472","9.484940848271943","7.2715455608995185","3.6938683378920256","1.5465163109142166","4.989290005746827","5.009583322393468","95.29924199570087","95.6108665387365","94.86227815667509","95.2757242003621","95.63035908188864","95.13001738604581","95.09469518515029","95.01364192304074","95.18426962051592","95.55175202663307","100.30119521912351","100.33784860557769","100.26135458167332","100.31872509960161","100.32509960159362","100.30916334661354","100.31553784860559","100.34422310756972","100.30756972111554","100.3410358565737","85.67493651103732","68.76269710747799","80.22823314054254","91.05100494104215","87.75128104059914","81.52242082157416","87.39704923860876","86.54662454208905","81.69822033400553","80.59588656056759","1.6124602769822278","3.1269337871287126","11.869142557774026","19.86419656173954","19.32445662815743","59.601285431139","0.8013101713750951","3.796325376884422","6.957321278062984","17.56537525590019","1.3132810845159923","9.549324554432967","7.098378065263565","11.570247933884298","3.384704018435835","5.448055607739996","1.6937815045748823","3.9571058213528167","0.8742911153119093","1.722317385081071","96.67880430180371","96.54213845006441","96.91256506332547","96.32842205323195","96.74139596360124","96.95554314531823","96.41691041425753","96.65892169665723","95.37366548042705","96.49541812761488","100.22310756972112","100.19282868525896","100.23266932270916","100.1816733067729","100.26294820717132","100.24382470119522","100.21992031872512","100.200796812749","100.27888446215138","100.23426294820716","85.43219512195121","89.52563907486305","88.1115469429971","86.35054938598039","87.20961180183264","86.84388201932907","85.20390243902439","89.7875191424196","80.97858009946353","76.69154036498608","5.959855495237911","4.7156262910428675","12.614126905298544","0.7842145206172527","29.016222881584525","19.417456672358632","11.373494913342022","1.7097323224508743","25.478140747514445","10.213313574854736","2.4979816688037233","6.783014201935986","5.719930382426266","0.9347795062080777","1.3089622641509435","2.9430372331700916","6.649445082280902","0.9091128312715522","3.985665165383311","0.8076728924785461","96.24675787011138","96.75052410901468","96.96396289851154","96.47988627324882","96.53561697158428","96.46993092238927","96.630832881172","96.43178004169987","96.21565665993518","96.45400869579929","100.20557768924303","100.16254980079682","100.16733067729085","100.21354581673307","100.200796812749","100.21354581673307","100.20239043824701","100.17211155378487","100.1816733067729","100.18486055776891","83.26054172623827","71.88661258001129","87.50121149857529","82.76278146468677","87.84837282356773","87.9446871586831","82.42583406283435","88.85009946561611","85.15691757942982","73.62100870112997","11.951570833495543","12.926768211665479","4.682853823280361","2.3159587402439503","5.895893378726038","12.050428527701255","1.2474786048606623","19.401722546908644","8.912790697674419","0.7004151336887875","1.3018656092492178","14.894770333011243","7.078850928005674","5.76364727054589","2.13034973042607","24.06935117808091","11.339023165746251","3.498279340215973","7.6361648004184195","1.292326662240349","96.37454046453317","96.77833961881247","96.44978401727862","96.65496838071986","96.40891486036557","96.67186599301482","96.49182215299177","96.34575200040773","96.45440531246294","96.49227009689956","100.21354581673307","100.20717131474103","100.2422310756972","100.20717131474103","100.23426294820716","100.21035856573705","100.24860557768925","100.25338645418327","100.22310756972112","100.23107569721115","82.26502311248073","90.32054816098291","83.62746639415141","91.02186031468199","86.58210557127525","91.26486983506695","82.74437724811257","82.06053982318157","76.38424704387765","86.0534767787827","0.8658263635292731","12.690384615384614","12.640344126758619","27.41071079294293","6.305924913887659","2.7872091461894075","7.3663297585062875","8.999209242222609","2.6657806789532317","11.815184063867946","4.297107487203904","2.359770630294735","7.848142770153169","3.375467499881646","1.3477600607441154","1.6796171704728513","7.446216617210682","2.148212564928197","10.408672294704528","2.0663277205093524","96.61320882392745","96.66076397672654","96.15463006997757","96.39834109528503","96.77855982674608","96.48180566650237","96.2470945521793","96.47420126575835","96.01750398588827","96.1775878442545","100.30278884462152","100.33784860557769","100.22151394422312","100.29482071713147","100.30756972111554","100.30756972111554","100.32031872509961","100.32350597609563","100.32828685258963","100.33147410358565","89.24886982728643","83.48000077704606","76.71181635626255","82.57845137472069","68.07687845624348","88.09971409548427","85.63613569881852","85.139697322468","84.46057087566523","87.56116504854369","9.301363385609584","39.53135634419057","2.7418580074935153","14.32599459250676","17.344205008736168","5.040710440916422","4.183564567769477","14.39110047283643","45.92504461629982","18.073643410852714","5.900302763010465","2.601122144751978","14.772563869050472","13.176101376572122","1.8951121118303782","0.8241428193853768","2.253602167293999","1.25471113019417","7.2393961179007915","6.323807698756796","96.52224069487328","97.05548688599535","96.9571699647601","96.72831448865081","96.58954148656666","96.77091278921942","96.64619185407042","96.58910002371033","96.77124271581515","95.9860502124634","100.22151394422312","100.24382470119522","100.10517928286853","100.200796812749","100.25657370517929","100.25179282868525","100.22948207171314","100.22788844621513","100.24860557768925","100.26294820717132","89.07506965427933","87.78963414634147","88.41887352550582","92.85999278019493","85.75069952853693","90.69834774552193","90.65071198720543","89.54252142925937","88.9430321532711","90.4286748449453","6.504033281900037","11.36425968734083","3.9887203422792687","21.974080074056932","27.593304594353178","22.653702727503465","20.484846135958453","7.685436893203884","11.956564349837311","5.421546123020659","3.9104456792132614","12.350206116383857","5.736295319088789","1.7283041447080754","11.746699380768781","6.6293929712460065","1.7807204149437101","3.755586525061272","3.7060953391296327","2.0249738866204536","97.07446359538801","96.67134380335739","96.40243798916826","96.4604624316708","96.77987336200184","96.32590028170927","96.55650409939989","95.86153089435031","96.29780516372155","96.25156891346383","100.00318725099602","100.0175298804781","100.05258964143427","100.04462151394422","100.06533864541834","100.02868525896413","100.01274900398407","100.06693227091634","100.0191235059761","100.0796812749004","85.02405233788724","87.28255623129645","87.89348605267259","87.16670196176578","85.3401812216841","89.53752249784803","86.7330436646338","81.1381036800374","87.78888867145457","85.86130802429356","41.40682893461779","15.777873137239604","32.79633744540648","9.516657564172583","9.529307624215834","11.973858243211701","1.2752757352941175","11.510064506100878","4.935530365003311","3.6882299216882686","3.3657877573837696","6.064067891448289","14.316594612570668","8.144065380594888","3.901934513315939","10.99649941656943","6.065639906025297","3.1236597569692637","2.558554274164784","3.8727982030972927","96.15208739097298","96.21996037055227","96.26671651175042","96.14067796610169","96.03918372890564","96.32680735655565","96.25459286476236","96.01642989290018","96.63902447263085","96.34774966621035","99.91872509960159","99.9808764940239","99.9585657370518","99.95219123505976","99.96494023904383","99.96972111553785","99.9808764940239","100.02231075697212","99.998406374502","99.96175298804782","90.46632726146461","88.93755788823711","90.59037028456697","86.09610076585157","88.98628776593713","87.5181197935793","91.18565351442064","89.17723728616316","90.07437015969406","83.00625902744343","6.368373974254268","41.53954829225453","4.808916573622455","4.93630881982279","4.559724052399039","33.479952299962854","1.727895392278954","3.858439974444853","23.60951695426337","1.2663430674078133","11.310163621163264","2.6810463301576952","19.59181778077039","0.9446888295954424","0.9706628033321261","0.7145889344842224","5.358066487986082","7.897402077395954","3.6067312792323643","10.619218425523881","95.83276659412405","96.0246721117023","96.22052056980831","96.07892953929539","95.6511402808674","96.45896425127312","96.44277470342352","96.51362839023075","96.11230001019057","96.49722485447407","99.99362549800796","100.0398406374502","100.08446215139442","100.05099601593625","100.01274900398407","99.98247011952192","100.02868525896413","100.02709163346613","100.04462151394422","100.06693227091634","87.16643741403026","91.40260950605779","87.94649851167162","83.1978266433057","81.84831505011444","88.66378896882495","81.33315232147706","92.96045736064794","89.94992295839754","78.55908573223893","10.69441178775766","2.7337876628068187","7.707819413446101","8.097880433716986","39.39130602707452","19.305359661495064","5.8648664198998866","40.74500693075106","9.925035743266742","4.775286457817973","3.555895426086125","12.726592285921456","16.295536906351327","9.167080877653909","7.47509431404884","2.656402214460522","5.886913011816111","18.745863666446063","14.375678098023492","10.578126106560278","96.19424130851587","96.24245097373957","96.07916292163414","96.33282024391482","96.21803887015605","96.25827870657385","96.56183638386085","95.85621737430073","95.87285963989342","96.69928705945655","100.25179282868525","100.22310756972112","100.22310756972112","100.22948207171314","100.2183266932271","100.2581673306773","100.23107569721115","100.2183266932271","100.25338645418327","100.20717131474103","89.11678363823707","86.88936573295443","88.7589470802206","83.23069077786059","89.31693414181603","82.18056869293284","92.98035965537845","90.26894102033647","80.23880945888037","92.14588144726713","26.12290371760291","3.789444942856028","20.330556041096155","13.994225967540574","8.900523560209423","25.885553288642765","3.8440567066521263","6.304472420403566","3.0235617286338843","59.40911132373904","5.344717786635847","6.606953447259871","10.544678311566095","0.9055995448295482","4.3702465327650755","4.042890619452269","9.510449606505148","1.3073142802614628","5.938856343239332","0.706181441551716","96.39325386074235","96.54191363251482","96.35467813484135","96.56067598751189","96.47821585566625","96.63511202181165","96.86242008051148","96.30887222109602","96.05115472262848","96.73922249513001","100.18645418326693","100.22470119521911","100.200796812749","100.16254980079682","100.12270916334663","100.19760956175298","100.16733067729085","100.21513944223108","100.18964143426294","100.1816733067729","84.67071296259803","90.82826392138512","86.97875995627051","83.64237123420797","90.12701399506057","88.10230378758298","90.39391575663026","85.97186096003784","89.22307216813475","86.68226120857699","35.74943553522839","2.4111550337286367","2.5328384329865186","23.59709085128368","46.75988750565422","11.710356682423722","41.589293845148774","38.98699066296832","20.21674425704037","31.561196241275784","8.481205876741079","8.969187402799378","11.907623424060327","3.3236344711754544","11.849372776633588","9.614293817356778","2.7163915235205582","4.7823928512328315","9.702793085582403","5.15225276823215","96.67734662394683","96.74781607638654","96.27175515599316","96.31795758531251","96.56106146764148","96.66469444679232","96.09291608071703","96.4164689935615","96.63297386836145","96.77113171409685","99.95219123505976","99.9808764940239","99.97450199203188","99.998406374502","100.00637450199204","99.96175298804782","99.90278884462151","99.92509960159363","99.93306772908367","100.00796812749005","89.0647119281711","89.68372900070983","88.11709107951883","88.89562750660276","83.71692045410516","86.13682979661472","84.30519865586085","92.02114319887339","92.06104185392161","89.10830778904347","11.438457929308726","24.993632569894793","9.867394695787832","21.614271938283512","13.310686207900613","13.235812477969686","1.0015970346418501","7.329486955339277","17.459266901559246","39.331951343528765","3.1385769568623725","5.741444866920152","12.100343154656255","3.6904511330947867","1.7994919640101608","3.88830649004098","28.798924198457076","3.2291096135070134","1.1986719398466872","1.3779481817125596","96.32912465045335","96.4566596194503","95.83686620315414","95.78567434294139","96.39730981107844","96.48516863063796","96.31430895411103","96.29272419627749","96.05227518959913","96.14673295213532","99.91872509960159","99.88207171314741","99.89641434262948","99.81673306772907","99.86772908366534","99.92509960159363","99.81832669322709","99.90916334661355","99.85338645418327","99.90597609561753","88.34342810848347","91.48369670075246","88.32173240525908","89.56004292264168","90.53005016307769","84.75249461944824","90.00408790952093","94.52863535516866","89.32795541786014","88.03752315635963","17.50580945003873","25.47620451730849","3.0278853451127676","1.3717767127806126","19.800689024271563","1.9694470625196354","9.155150138981325","13.608115695119356","27.24117084966555","5.622982067141245","5.154805914972274","0.6778648406443163","1.825615669867833","3.244914951825859","4.564325310167742","2.054110598640103","12.145578644725461","3.091347939101374","10.173739126244005","3.181245393375972","96.16410430646394","96.38558296229833","96.32641330808764","95.45947962956681","96.22465744143899","96.5294415387211","96.09345857777475","96.42634180910119","95.98549422988934","96.13332655860982","99.92828685258964","99.88685258964144","99.9792828685259","99.91075697211156","99.98247011952192","99.98406374501992","99.92988047808765","99.94741035856573","99.98884462151393","99.93625498007968","86.10572071722426","89.19231882659462","89.62322540714092","91.85928493460234","93.1327218979762","88.74679297414644","88.76609984824312","87.80011711887565","88.43481333176304","84.63121517463645","35.920535471066664","18.07788288549707","37.556578296755546","9.172377438060094","12.003430665471132","28.1799219745838","33.99596149699073","18.592827785028344","1.7619680851063828","6.441741859552766","13.169305724725945","13.450699158132059","5.887260159694911","14.444548695815351","5.767733717062584","11.225031361574834","1.273172437915355","3.6590259908878453","3.0543559555115927","3.171917449120633","96.0974865167396","96.24559569769207","96.22359319498972","96.01350319767936","96.1344537815126","96.76310755218474","96.08205475968467","96.34450149982206","96.32701421800948","96.10710956698586","100.19123505976096","100.16573705179283","100.14501992031872","100.21992031872512","100.18804780876494","100.2406374501992","100.2167330677291","100.18007968127489","100.20717131474103","100.19282868525896","86.33951219512196","87.80339575340905","92.19881758740847","90.75185655469622","91.42150707952635","86.33411984945691","88.90056022408963","90.93034489421312","92.534144381958","84.67819498694722","20.56476603656647","37.08256665231179","10.489050530062679","13.278137329213068","37.60510805500982","8.255635548211968","12.590263219194037","9.898679527819374","75.56619443087445","14.764586972307814","0.8764180769946067","2.742600767059845","16.094360035749563","0.8661676787647695","1.9231224687966275","7.890453612624726","5.2359481598640265","16.06125272612152","1.0557635089739899","4.774618006722128","96.68035708224433","96.37034030173872","96.53631854318135","96.20696658880877","96.4444820868976","96.74102681369311","96.50018661147492","96.57773408366668","96.04110054347827","96.4852454588426","100.25179282868525","100.21992031872512","100.21513944223108","100.20717131474103","100.2581673306773","100.22310756972112","100.22788844621513","100.22470119521911","100.23585657370518","100.26454183266932","89.57073285680622","88.18243835883443","91.01626652068508","90.84871569489208","90.59726133825386","91.97212083559836","90.07341394472361","89.57194632187286","90.04021952330949","90.82708528584817","12.16714461286358","5.599547511312218","4.546069805665668","4.479906587525543","75.25793039728981","11.902586927367786","19.182169182169183","3.394671900200144","12.349107177291835","44.98052085132515","1.608725613668227","12.277734827986084","17.905477219584782","13.892134411366081","11.206384646445452","6.389241187872406","12.195063902706048","11.80776499294309","1.61125744524335","3.3624557260920893","96.83775811209439","96.62769251594781","96.86997171457124","96.73936990526548","96.2819230964768","96.2650255158266","96.0641696689552","96.47754818368281","96.7688511846419","95.97830311428041","100.02709163346613","100.09880478087649","100.05258964143427","99.99203187250995","100.03187250996015","99.99681274900398","100.02231075697212","100.1003984063745","100.07649402390437","100.03346613545816","89.8332056344669","91.22030512524236","88.1333591781353","89.63803704706291","91.84063283812463","90.03937468324821","89.99259576789682","88.90262084118015","91.7759887721487","91.85829218876016","7.032834191233817","32.79181360929641","18.855998132876923","3.9681299796906733","0.8168504580197211","29.10331384015595","25.456515010832558","52.32470469967328","46.53392913634926","10.762812416274352","3.481990941551439","4.468604597595246","9.669478765862868","12.132950741272118","9.901084268594255","7.250999699512286","5.838194510853974","31.002729322416045","8.499892798437239","14.942692052666478","96.39190974692549","96.68035765596741","96.24034740879675","95.37318760517415","96.0805228227008","95.98960456583775","96.33896352516645","95.95616921667741","96.26492171384126","96.00128990648177","99.92669322709163","99.9792828685259","100.02390438247014","99.95697211155378","99.95378486055778","99.99203187250995","100.02709163346613","99.9792828685259","99.96494023904383","99.96812749003983","92.8739971684757","90.44316445280357","87.97146978049118","89.23431878617237","89.16935891946596","85.88260707342458","90.35280396539994","93.14514553623755","91.07627963335744","87.29398424211617","1.0082886396879571","41.66363061111005","3.8976308518351592","62.77593279937488","47.14835416031698","3.7250063152167576","41.419968427822496","42.62814968575218","3.765205258710476","15.06963896669779","3.4893494392545805","12.949894975336903","11.338508586215008","14.885922330097086","10.904255319148938","4.542332741267022","5.531461073586918","7.53936165152452","19.187543900725824","5.651263503545424","96.15117127203027","96.4069125124584","96.31224673188761","95.97761573681532","96.13117419879396","95.73690828151018","96.05198502126507","96.12304670966869","96.53452793508579","96.4156064461408","100.05258964143427","100.04462151394422","100.001593625498","100.03346613545816","100.00318725099602","100.04302788844622","100.05737051792829","100.09243027888446","100.06374501992032","100.06055776892431","88.08866995073892","89.36724735944817","91.50466979936436","89.1571613301681","89.08360286190337","91.5946658456328","90.81832838024202","89.17933012114","91.59913296490852","92.63901905654483","18.193181162625233","7.0097952613705505","35.09595046725378","27.571718908778237","6.01940608005008","15.98388705293416","24.068198325624067","25.53772885193426","2.7609637989612215","0.9018112488083889","18.050620059467693","8.372293749550456","1.188066950786886","6.620711766591857","2.0489718811305675","5.302958914436487","16.26148278741765","11.747674197835579","9.15439044194409","7.71686690000946","96.01936160850286","96.41424824435232","96.30213631739572","96.26514587423002","96.34935148498086","96.25496789972485","95.94443313657644","96.22497713646987","96.47524216861359","96.43913403525376","100.2406374501992","100.22151394422312","100.2422310756972","100.18326693227091","100.25657370517929","100.25498007968127","100.24382470119522","100.22948207171314","100.23266932270916","100.200796812749","93.56355507592693","91.47588611272516","92.40537848605578","90.76086956521739","87.53339612124473","91.42767221369841","90.68440324088502","88.69274529353117","93.53415897840868","94.40484811525708","19.018440938099527","28.60424028268551","5.505155038009943","44.59672458865139","2.1583856992310997","19.441636208103276","2.59725088586893","53.68675836826259","30.618308092987363","42.987317073170736","2.3781722864291672","2.850293659355148","7.871644670289599","19.90497683810429","4.782743120793398","6.424795771263815","4.622095872953632","7.07893389256017","21.22156362017665","11.81100512193976","96.72292426426937","96.84490709344907","96.86764132883837","96.4001220297617","96.57271740605073","96.73756461316839","96.59487283687223","96.8732589353548","96.34160826701509","96.326391840204","100.33147410358565","100.35378486055777","100.34422310756972","100.35378486055777","100.32509960159362","100.33625498007967","100.35059760956176","100.32828685258963","100.34262948207171","100.34741035856574","93.66920782234007","92.98824259826938","90.53718029681086","93.0665252072773","94.38447823002741","93.11827124157695","92.55321224418128","91.44865056398747","92.6754693464205","92.38694008656991","7.282065302296516","0.8155620158819972","50.42754929905183","36.6399432702346","7.915006131207848","30.911819741150786","33.10471762084665","1.6191822742151034","54.77556399720909","32.06707666752358","23.105989042131117","30.748082432307548","23.65739399207959","18.041693592781407","12.690792999790274","23.564365849020728","10.937426321497618","24.743987767017284","4.610003990329319","9.341544975581591","96.38272650296359","96.75325775676545","97.13457877802671","96.84306692833458","96.76631264633029","96.35699107522312","97.18026693698259","96.11425849367971","96.79045766009644","96.76000611319601","100.23426294820716","100.24701195219123","100.28525896414342","100.2581673306773","100.29322709163347","100.2581673306773","100.27888446215138","100.2804780876494","100.27091633466136","100.26135458167332","92.21808014911463","92.41028033749367","94.90780548390178","91.49494632923295","91.70759276582476","92.59836081530945","90.59472524902048","91.0869650033163","90.81173366444203","90.98806495793387","39.163797911417966","4.482712021467596","36.14043227777133","3.4206130297968222","49.35488305414269","13.941281313042285","3.201517415794919","6.888444124905272","4.887859819869317","15.987375839835808","6.311409900803912","11.117674858223063","9.479625023914291","8.73800079799094","20.738858947268454","23.47729264883561","5.773666563622096","4.821822620780318","13.236994219653178","12.896308029730719","96.2718255316258","96.99632583261373","96.5559260074128","97.11895283719048","96.4080508618638","96.349647505423","96.52817784404758","96.50859292905325","96.92015788849548","96.44168650119008","100.20557768924303","100.18486055776891","100.22310756972112","100.200796812749","100.26613545816734","100.25338645418327","100.2406374501992","100.18804780876494","100.21992031872512","100.21992031872512","93.24306025727826","94.54334291643661","92.86131671211531","92.70740150130294","92.57844895754981","92.79603868829717","92.71890832152494","91.07299483481142","92.86286782947217","92.63989213136858","26.567994744367585","10.812265692588676","47.485207100591715","15.63773050203688","10.695868708456697","8.654787546504798","18.160574844702353","89.95187094565031","50.192651981007245","10.085770583008152","12.61927255550307","4.719931760022747","2.1461622526565445","18.81240526429757","8.020335922837527","14.4959772834832","7.440801025008305","13.88107341293297","16.102991362470288","13.173595759347739","96.62284793486558","96.56601539372409","96.38433608198446","96.63275152787418","96.44123886296138","96.71296374617245","97.33041575492342","96.89893644003314","96.56455623403643","96.38636054883847","100.22948207171314","100.2597609561753","100.26454183266932","100.2422310756972","100.24701195219123","100.2980079681275","100.24701195219123","100.2581673306773","100.25179282868525","100.25657370517929","90.88438300451675","90.73684210526316","93.89627122555335","90.84429824561403","90.74346278817886","92.98410461201159","89.55329291978106","89.86766816760722","93.87162358408365","92.63106701682716","35.700891661245265","4.292237442922374","45.945894346971116","16.174816768138985","1.5801178260699933","15.310092752711837","77.20305022759989","3.7728851934262404","28.824769938650306","88.79747703277116","16.433014354066984","12.697334520073078","36.0112638727845","1.7880670054583099","26.496244810374588","15.30457552370452","17.554217154283812","7.3642678259226","9.56059874456784","15.588519680211304","96.7422959701998","96.72658339257303","96.63215498167446","96.47401191120736","96.43881169304898","96.580819313108","97.06215836591021","96.51579179607283","96.68147595469037","96.61232375271149","100.32669322709162","100.34900398406374","100.35219123505976","100.32988047808765","100.33784860557769","100.30756972111554","100.32350597609563","100.34741035856574","100.33466135458167","100.31235059760957","91.74866929860744","92.98280136959345","91.48840833820377","93.78555039237992","88.88715467457469","92.32275450262694","91.09891633813419","94.79248312909824","91.98194533232599","92.10577521793275","36.298285957216564","35.68381041036382","27.71039916170221","17.731734761184185","31.407285739426293","13.195218510973595","6.642944168326596","12.37596100117536","35.90289441818679","32.34978645396572","6.317761386254538","3.420824085689472","3.804048389028626","19.384278123287345","8.918153429034835","10.832348072830458","18.581179912237932","14.460837231618088","4.622301315974337","16.643692366194504","96.27242817895059","96.39728353140917","96.84019903191957","96.65608609305247","97.69280032358097","96.83158623250789","96.83202814471525","96.86387523309035","96.53789282254364","96.58718710224862"
