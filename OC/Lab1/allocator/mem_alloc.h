#define POOL_SIZE 1024

/**
* Визначення синоніму для типу мінімального елемента пулу.
*/
typedef char el_t;

/**
* Визначення перенумерованого типу алгоритмів пошуку блоку для виділення пам'яті.
* FIRST_FOUND_ALGORITHM - пошук першого підходящого блоку (за замовчуванням).
*/
typedef enum {
    FIRST_FOUND_ALGORITHM
} SearchAlgorithm;

/**
* Ініціалізація пулу пам'яті.
*/
void poolInitialize();

/**
* Звільнення пулу пам'яті.
*/
void poolFree();

/**
* Виділення пам'яті заданого розміру.
* size - розмір пам'яті, що буде виділятися.
* returns Вказівник на виділену область пам'яті або NULL, якщо виділення не вдалося.
*/
void *mem_alloc(size_t size);

/**
* Перевиділення пам'яті.
* addr - вказівник на область пам'яті, що буде перевиділятися.
* size - новий розмір області.
* returns Вказівник на перевиділену область пам'яті або NULL, якщо перевиділення не вдалося.
*/
void *mem_realloc(void *addr, size_t size);

/**
* Звільнення пам'яті.
* addr - вказівник на область пам'яті, що буде звільнюватися.
*/
void mem_free(void *addr);

/**
* Виведення стану блоків пам'яті.
*/
void mem_dump();
